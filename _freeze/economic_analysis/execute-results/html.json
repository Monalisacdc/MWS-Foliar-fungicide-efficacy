{
  "hash": "f984685a5a6ab58a0e83ca47df0cec10",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Untitleds\"\n---\n\n\n$$\nL(\\alpha, \\beta \\mid P) = \\prod_{i=1}^n \\frac{\\beta^\\alpha P_i^{\\alpha-1} e^{-\\beta P_i}}{\\Gamma(\\alpha)}\n$$\n\n# Economic Analysis\n\n## Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(cowplot)\nlibrary(gsheet)\nlibrary(stats4)\nlibrary(minpack.lm)\nlibrary(ggdist)\nlibrary(lubridate)\nlibrary(ggthemes)\nlibrary(cowplot)\n```\n:::\n\n\n## Import the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\neff_yld_data = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1kTmVINkk8W_luffQew4nrMvqrvZQhe6JLjR_WzbBQT4/edit?gid=1891034819#gid=1891034819\")\n\n\ncost_data = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/11K6BssCO1_qMZEb5sU1BMpbNKE0YrACsT4tAY51KvvY/edit?gid=740235580#gid=740235580\")\n\nprice_data = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1dEC3-AckAFJ3XsWTln1KLbz4jOp3d1sV/edit?gid=1164957368#gid=1164957368\") %>%\n  mutate(data = dmy(data)) |> mutate(year = year(data))\n```\n:::\n\n\n## Find the most appropriate theoretical distribution for corn price\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_data %>%\n  ggplot(aes(preco))+\n  geom_histogram(bins = 20,color =\"white\", fill = \"gray\")\n```\n\n::: {.cell-output-display}\n![](economic_analysis_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_data %>%\n  ggplot(aes(as.factor(year), preco))+\n  geom_jitter(width = 0.1)\n```\n\n::: {.cell-output-display}\n![](economic_analysis_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n# FIT\n\nHow well does the Gamma distribution fit the empirical data?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Empirical cumulative distribution function\nenvironment(ecdf(price_data$preco))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<environment: 0x0000011cfa662468>\n```\n\n\n:::\n\n```{.r .cell-code}\n# These are the cumulative values of the ECDF (accumulated probabilities)\nFx = environment(ecdf(price_data$preco))$y\n# Original values\nx = environment(ecdf(price_data$preco))$x\n```\n:::\n\n\n## Nonlinear least squares model\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Fits a nonlinear least squares model to the data.\nprice_reg = nlsLM(Fx ~ pgamma(x, shape, rate, log = FALSE),\n      start = c(shape = 2.5, rate = 0.13),\n      control = nls.lm.control(maxiter = 1024))\nsummary(price_reg)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nFormula: Fx ~ pgamma(x, shape, rate, log = FALSE)\n\nParameters:\n      Estimate Std. Error t value Pr(>|t|)    \nshape  3.77499    0.22667   16.65   <2e-16 ***\nrate   0.46632    0.03102   15.03   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.04761 on 60 degrees of freedom\n\nNumber of iterations to convergence: 8 \nAchieved convergence tolerance: 1.49e-08\n```\n\n\n:::\n\n```{.r .cell-code}\nshape = summary(price_reg)$coef[1]\nrate = summary(price_reg)$coef[2]\n\n# Plot the ECDF and overlay the Gamma distribution curve\nplot(ecdf(price_data$preco))\ncurve(pgamma(x, shape, rate), 0, 600, add = T, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](economic_analysis_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## Visualizing the histogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_data %>%\n  ggplot(aes(preco))+\n geom_histogram(aes(y = ..density..),bins = 10, color = \"white\", fill = \"#481567FF\")+\n   stat_function(fun=function(x) dgamma(x, shape,  rate), size = 1.2, color = \"black\")+\n  theme_bw()+\n  xlim(0,20)+\n  labs(x=\"Slope (kg/p.p.)\", y = \"Density\")\n```\n\n::: {.cell-output-display}\n![](economic_analysis_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## **Maximum Likelihood Estimation**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMASS::fitdistr(price_data$preco, \"gamma\", start=list(shape=3.76, rate=0.46))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     shape         rate   \n  4.79129294   0.57861917 \n (0.63061276) (0.08029102)\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(ecdf(price_data$preco))\ncurve(pgamma(x, 3.76,  0.46),0,200,  add = T, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](economic_analysis_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## Visualizing the histogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_data %>%\n  ggplot(aes(preco))+\n geom_histogram(aes(y = ..density..),bins = 15, color = \"white\", fill = \"#481567FF\")+\n   stat_function(fun=function(x) dgamma(x, 3.76,  0.46), size = 1.2, color = \"black\")+\n  theme_bw()+\n  xlim(0,20)+\n  labs(x=\"Slope (kg/p.p.)\", y = \"Density\")\n```\n\n::: {.cell-output-display}\n![](economic_analysis_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n## Non linear or MLE\n\n### Kolmogorov-Smirnov Test\n\nThe Kolmogorov-Smirnov (KS) test is used to compare two cumulative distributions, testing whether the sample distributions are significantly different. The p-value resulting from the KS test indicates the probability that the data distribution is the same as the theoretical distribution (in this case, the Gamma distribution). If the p-value is small (typically less than 0.05), it suggests that the data distribution differs significantly from the theoretical distribution.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# using regression\nks.test(Fx, pgamma(x, shape, rate) )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tExact two-sample Kolmogorov-Smirnov test\n\ndata:  Fx and pgamma(x, shape, rate)\nD = 0.1129, p-value = 0.8285\nalternative hypothesis: two-sided\n```\n\n\n:::\n\n```{.r .cell-code}\n# using Maximum likelihood\nks.test(Fx, pgamma(x,  3.76,  0.46))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tExact two-sample Kolmogorov-Smirnov test\n\ndata:  Fx and pgamma(x, 3.76, 0.46)\nD = 0.096774, p-value = 0.9367\nalternative hypothesis: two-sided\n```\n\n\n:::\n\n```{.r .cell-code}\n# p-value gives the probability of data distributions be equal to the theoretical distribution obtained \n```\n:::\n\n\n# Probability distributions\n\n## Simulations\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(truncnorm)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\nn_sim = 50000\nfuns = unique(eff_yld_data$fungicide)\nbox1 = data.frame()\n\nfor(i in 1:length(funs)){\n  # Filtering the data for the current fungicide (without using the 'region' variable)\n  single_data = eff_yld_data %>% \n    filter(fungicide == funs[i]) # filter for the respective fungicide yield data\n\n  single_cost = cost_data %>% \n    filter(fungicide == funs[i]) # filter for the respective fungicide cost data\n\n  cmin = single_cost$cost - single_cost$cost*0.05 # adjusting a variable cost range for that fungicide\n  cmax = single_cost$cost + single_cost$cost*0.05\n\n  C = runif(n_sim, cmin, cmax) # generating n_sim random values (50000) for product price, uniformly distributed\n\n  P = rgamma(n_sim, shape, rate)/60 # generating n_sim random values for corn price based on the equation defined in the previous code\n\n  y_mu = single_data$mean_yld # mean yield for the fungicide\n  y_se = single_data$SE_yld # standard error of yield for the fungicide\n\n  Y = rtruncnorm(n_sim, a=0, b=Inf, y_mu, y_se) # ensuring positive values in a truncated distribution\n\n  profit = (P * Y) - C # P(corn price) multiplied by mean yield. Subtract the product cost. Get profit\n\n  eventos = (C <= (P * Y)) * 1 # checking if the cost is less than or equal to profit, if true is 1, otherwise 0.\n\n  # Creating the box for each fungicide\n  lil_box = data.frame(fungicide = funs[i],\n                       C_point = single_cost$cost, # original cost\n                       C, # simulated product cost\n                       P,  # simulated corn price\n                       Y,   # simulated yield\n                       profit, # simulated profits\n                       eventos) # less than or equal to profit = 1\n\n  # Adding to the overall box\n  box1 = box1 %>% \n    bind_rows(lil_box)\n}\n```\n:::\n\n\n## Probability of making a profit\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprobs = box1 %>% \n  group_by(fungicide) %>% \n  summarise(P = round(mean(eventos), 2), #probabilidade de sucesso para cada fungicida\n            m = mean(profit),\n            lower = quantile(profit, 0.025),\n            upper = quantile(profit, 0.975)) %>% \n  mutate(P = paste(\"p =\", P))\nprobs %>% \n  arrange(-m)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 Ã— 5\n  fungicide          P            m lower upper\n  <chr>              <chr>    <dbl> <dbl> <dbl>\n1 MANC               p = 0.87  70.2 -25.4  244.\n2 PYRA + FLUX + MEFE p = 0.69  46.0 -62.1  230.\n3 CLOR               p = 0.77  41.7 -30.6  175.\n4 TRFX + PROT + BIX  p = 0.65  37.2 -65.9  213.\n5 PYRA + FLUX        p = 0.66  35.7 -58.6  194.\n6 PYRA + EPOX        p = 0.71  34.0 -40.2  164.\n7 DIF + PYDI         p = 0.61  31.9 -78.1  219.\n8 AZO + TEBU + MANC  p = 0.64  30.2 -56.3  181.\n```\n\n\n:::\n:::\n\n\n#Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbox1 |> \n  mutate(fungicide = factor(fungicide, levels = c(\"TRFX + PROT + BIX\",\"PYRA + FLUX + MEFE\",  \"AZO + TEBU + MANC\", \"PYRA + FLUX\", \"PYRA + EPOX\", \"DIF + PYDI\",\"MANC\", \"CLOR\"))) |> \n  ggplot(aes()) +\n  geom_vline(xintercept = 0, color = \"gray40\", size = 0.7) +\n   stat_slab(aes(profit, fungicide, alpha = stat(plogis(x / 100))),  fill = \"#ff9900\") +\n  #stat_pointinterval(aes(x = profit, y = fungicide), \n   #                  position = position_dodge(width = 0.8, preserve = \"single\"),  \n    #                 .width = c(0.75, 0.95),\n     #                size = 1.2, color = \"#313695\", alpha = 0.8) +\n  geom_text(data = probs, \n            aes(x = m, y = fungicide, label = P),\n            position = position_dodge(width = 0.8),  \n            size = 3, vjust = -3, hjust = -1.5, color = \"black\", fontface = \"bold.italic\") +  \n  geom_point(data = cost_data,\n             aes(spray, fungicide, shape = \"Spray cost\"),\n             size =2, color = \"#d73027\" )+\n  geom_text(data = cost_data,\n          aes(x = spray, y = fungicide, label = sprintf(\"%.1f\", spray)),\n          size = 3, color = \"#d73027\", vjust = -0.5, hjust= 0, fontface = \"bold\")+\n  guides(alpha = \"none\", shape = \"none\", fill = guide_legend(title = \"Profit Status\")) +\n theme_minimal_vgrid() +\n  theme(legend.position = \"bottom\", \n        plot.title = element_text(hjust = 0.5),\n        axis.title.x = element_text(size = 12),\n        axis.text.x = element_text(size = 10),\n        axis.text.y = element_text(size = 10),\n        panel.grid.major.y = element_blank(), \n        panel.grid.minor = element_blank(),\n         panel.background = element_rect(fill = scales::alpha(\"white\", 0.01)),\n        plot.margin = unit(c(1, 1, 1, 1), \"cm\")) +\n  coord_cartesian(xlim = c(-200, 450)) +\n   scale_x_continuous(breaks = seq(0, 450, by = 50))+\n  labs(x = expression(bold(\"Profit (US$ ha\"^-1*\")\")),\n     y = expression(bold(\"Fungicide\")),\n       fill = \"Profit Status\",\n       color = \"Profit Status\",\n       shape = \"Cost\")+\n geom_point(data = probs, aes(x = m, y = fungicide), size = 2, color = \"#313695\", position = position_nudge(y = -0.2)) +\n  geom_errorbarh(data = probs, aes(xmin = lower, xmax = upper, y = fungicide), \n                 height = 0, size= 0.6, color = \"#313695\", position = position_nudge(y = -0.2))+\ngeom_text(data = probs, \n          aes(x = m, y = fungicide, label = paste0(\"Ï€ = \", round(m, 1))),\n          position = position_dodge(width = 0.8),  \n          size = 3, vjust = -1.5, hjust = -1.5, color = \"#313695\", fontface = \"bold.italic\")\n```\n\n::: {.cell-output-display}\n![](economic_analysis_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlibrary(patchwork)\n\n#ggsave(\"figures/profit.png\", dpi=600, height = 7,bg = \"white\", width = 7)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}