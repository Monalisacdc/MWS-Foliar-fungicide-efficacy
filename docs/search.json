[
  {
    "objectID": "yld.html",
    "href": "yld.html",
    "title": "Meta-analysis for the variable yield",
    "section": "",
    "text": "library(gsheet)\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(multcomp)\nlibrary(metafor)\nlibrary(tidyr)\nlibrary(emmeans)\n\n\n\n\n\ndat1 = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1joo0WaR7yNWZavGPbwQMjiFPpWHErtGL/edit?gid=1485993259#gid=1485993259\")\n\ndat1$bloco = as.factor(dat1$bloco)   # Block as a factor  \ndat1$produto = as.factor(dat1$produto)   # fungicide as a factor  \ndat1$ensaio_1 = as.factor(dat1$ensaio_1)\n\n\nprod &lt;- dat1 %&gt;% filter(!is.na(mean_prod))\n\nprod &lt;- dat1 %&gt;%\n  filter(!is.na(mean_prod)) %&gt;%\n  group_by(ensaio_1) %&gt;%\n  mutate(num_produtos = n()) %&gt;%\n  ungroup()\n\ntotal_ensaios &lt;- prod %&gt;%\n  summarise(total = n_distinct(ensaio_1))\n\n\ncontagem_por_produto &lt;- prod %&gt;%\n  group_by(produto) %&gt;%\n  summarise(\n    total_ensaios = n_distinct(ensaio_1),  # Count unique trials\n    total_anos = n_distinct(ano),         # Count unique years\n    anos = paste(sort(unique(ano)), collapse = \", \"), # List sorted years\n    ensaios = paste(sort(unique(ensaio_1)), collapse = \", \"), # List unique trials\n    .groups = \"drop\"\n  )\naacheck= prod |&gt;  filter(produto == \"AACHECK\")\nsummary(aacheck)\n\n  municipio         bloco     ensaio_1                           produto   \n Length:118         1:31   11     : 4   AACHECK                      :118  \n Class :character   2:31   12     : 4   ABACUS HC (Controle Positivo):  0  \n Mode  :character   3:31   21     : 4   BELYAN  (Controle Positivo)  :  0  \n                    4:25   22     : 4   FOX XPRO                     :  0  \n                           23     : 4   OSKESTRA SC                  :  0  \n                           24     : 4   PREVINIL                     :  0  \n                           (Other):94   (Other)                      :  0  \n      ano          estado             regiao             mean_sev    \n Min.   :2016   Length:118         Length:118         Min.   : 0.80  \n 1st Qu.:2018   Class :character   Class :character   1st Qu.: 6.00  \n Median :2020   Mode  :character   Mode  :character   Median :19.00  \n Mean   :2020                                         Mean   :21.47  \n 3rd Qu.:2020                                         3rd Qu.:30.23  \n Max.   :2023                                         Max.   :75.00  \n                                                                     \n   mean_prod      num_produtos \n Min.   : 3414   Min.   : 8.0  \n 1st Qu.: 5062   1st Qu.:28.0  \n Median : 6124   Median :28.0  \n Mean   : 6536   Mean   :24.2  \n 3rd Qu.: 7729   3rd Qu.:28.0  \n Max.   :12361   Max.   :28.0  \n                               \n\n#mediana 19\n\n\n\n\n\n#ANOVA\nprod2 &lt;- prod %&gt;%\n  filter(mean_prod != \"NA\") |&gt; \n  group_by(ensaio_1) %&gt;%\n  dplyr::select(ensaio_1, produto, bloco, mean_prod) %&gt;% # Ensure grouping column is selected\n  nest(data = c(produto, bloco, mean_prod)) %&gt;% # Nest data by group\n  dplyr::mutate(\n    aov_results = map(data, ~ tidy(aov(mean_prod ~ produto + bloco, data = .x)))\n  ) %&gt;%\n  unnest(aov_results) %&gt;%\n  filter(term == \"Residuals\") |&gt; \n  dplyr::select(1,6)\n\n\n\n\n\n#First: Merge the Original Spreadsheet (dat1) with the Spreadsheet Containing the ANOVA Results;\nprod3 &lt;- left_join(prod, prod2) |&gt; \n group_by(municipio,regiao, ensaio_1, produto, ano) %&gt;% \n  summarise(mean_prod = mean(mean_prod),\n            mean_V = mean(meansq),\n            mean_sev = mean(mean_sev),\n            n = n())\n\n#Calculating adjusted variance of severity\n\nprod3$vi_yld &lt;- with(prod3, mean_V/4)\n\n\n\n\n\n\n\nnet_arm_UN_prod &lt;- rma.mv(\n  mean_prod,\n  vi_yld,\n   mods = ~ produto,\n   method = \"ML\",\n  random = list( ~ produto | factor(ensaio_1)),\n   struct = \"HCS\",\n  control = list(optimizer = \"nlm\", verbose = TRUE),\n   data = prod3)\n\n\nVariance Components in Model:\n\n          sigma2       tau21       tau22       tau23       tau24       tau25 \nincluded      No         Yes         Yes         Yes         Yes         Yes \nfixed        ---       FALSE       FALSE       FALSE       FALSE       FALSE \ninitial      --- 290480.0281 290480.0281 290480.0281 290480.0281 290480.0281 \nspecified    ---         ---         ---         ---         ---         --- \n                tau26       tau27       tau28       tau29   rho gamma2 phi \nincluded          Yes         Yes         Yes         Yes   Yes     No  No \nfixed           FALSE       FALSE       FALSE       FALSE FALSE    --- --- \ninitial   290480.0281 290480.0281 290480.0281 290480.0281   0.5    --- --- \nspecified         ---         ---         ---         ---   ---    --- --- \n\nIteration 0     ll = -1669.3677   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 1     ll = -1669.3677   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 2     ll = -1669.3677   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 3     ll = -1669.3673   tau2 = 290483.6821  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 4     ll = -1669.3673   tau2 = 290480.0281  290483.6821  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 5     ll = -1669.3674   tau2 = 290480.0281  290480.0281  290483.6821  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 6     ll = -1669.3673   tau2 = 290480.0281  290480.0281  290480.0281  290483.6821  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 7     ll = -1669.3673   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290483.6821  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 8     ll = -1669.3676   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290483.6821  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 9     ll = -1669.3675   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290483.6821  290480.0281  290480.0281  rho = 0.5000  \nIteration 10    ll = -1669.3676   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290483.6821  290480.0281  rho = 0.5000  \nIteration 11    ll = -1669.3676   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290483.6821  rho = 0.5000  \nIteration 12    ll = -1669.3675   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 13    ll = -1669.3677   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 14    ll = -1669.3677   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 15    ll =  -Inf   tau2 = 3014356512356146610246.0000  10502428825806919680.0000  10038002650921118.0000  120240161666010202112.0000  96923446079555092480.0000  77490412.6922  19783025232942.1797  128187006193.4250  13933949215.0546  rho = 1.0000  \nIteration 16    ll = -2243.5029   tau2 = 11607110.3048  6590731.5838  3288284.4648  8410263.5474  8230903.9696  507842.9729  1763737.3853  1065587.3362  853516.7971  rho = 1.0000  \nIteration 17    ll = -1833.2046   tau2 = 1809583.5577  1366647.7904  967988.2964  1542323.1547  1525918.7603  383232.4166  710679.1256  553500.0174  495804.8305  rho = 1.0000  \nIteration 18    ll = -1696.5590   tau2 = 605297.6525  540799.5354  470891.0068  567694.1327  565263.0242  324650.7482  415969.4307  376264.4151  360003.0168  rho = 1.0000  \nIteration 19    ll = -1655.3156   tau2 = 398477.6925  379607.8403  357644.2048  387624.0588  386908.4549  304728.2815  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 20    ll = -1655.3156   tau2 = 398477.6925  379607.8403  357644.2048  387624.0588  386908.4549  304728.2815  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 21    ll = -1655.3159   tau2 = 398482.8311  379607.8403  357644.2048  387624.0588  386908.4549  304728.2815  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 22    ll = -1655.3152   tau2 = 398477.6925  379612.7171  357644.2048  387624.0588  386908.4549  304728.2815  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 23    ll = -1655.3154   tau2 = 398477.6925  379607.8403  357648.7782  387624.0588  386908.4549  304728.2815  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 24    ll = -1655.3152   tau2 = 398477.6925  379607.8403  357644.2048  387629.0467  386908.4549  304728.2815  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 25    ll = -1655.3158   tau2 = 398477.6925  379607.8403  357644.2048  387624.0588  386913.4329  304728.2815  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 26    ll = -1655.3154   tau2 = 398477.6925  379607.8403  357644.2048  387624.0588  386908.4549  304732.1294  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 27    ll = -1655.3153   tau2 = 398477.6925  379607.8403  357644.2048  387624.0588  386908.4549  304728.2815  339052.3630  324714.8483  318596.3817  rho = 0.9919  \nIteration 28    ll = -1655.3154   tau2 = 398477.6925  379607.8403  357644.2048  387624.0588  386908.4549  304728.2815  339048.0456  324718.9692  318596.3817  rho = 0.9919  \nIteration 29    ll = -1655.3147   tau2 = 398477.6925  379607.8403  357644.2048  387624.0588  386908.4549  304728.2815  339048.0456  324714.8483  318600.4189  rho = 0.9919  \nIteration 30    ll = -1655.3157   tau2 = 398477.6925  379607.8403  357644.2048  387624.0588  386908.4549  304728.2815  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 31    ll = -1655.3156   tau2 = 398477.6925  379607.8403  357644.2048  387624.0588  386908.4549  304728.2815  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 32    ll = -1655.3156   tau2 = 398477.6925  379607.8403  357644.2048  387624.0588  386908.4549  304728.2815  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 33    ll = -1621.0214   tau2 = 336538.7657  468188.4625  398194.4649  470514.9209  342902.4125  329620.9791  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 34    ll = -1621.0214   tau2 = 336538.7657  468188.4625  398194.4649  470514.9209  342902.4125  329620.9791  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 35    ll = -1621.0207   tau2 = 336543.0487  468188.4625  398194.4649  470514.9209  342902.4125  329620.9791  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 36    ll = -1621.0218   tau2 = 336538.7657  468194.5755  398194.4649  470514.9209  342902.4125  329620.9791  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 37    ll = -1621.0214   tau2 = 336538.7657  468188.4625  398199.5995  470514.9209  342902.4125  329620.9791  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 38    ll = -1621.0215   tau2 = 336538.7657  468188.4625  398194.4649  470521.0666  342902.4125  329620.9791  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 39    ll = -1621.0209   tau2 = 336538.7657  468188.4625  398194.4649  470514.9209  342906.7829  329620.9791  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 40    ll = -1621.0213   tau2 = 336538.7657  468188.4625  398194.4649  470514.9209  342902.4125  329625.1672  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 41    ll = -1621.0213   tau2 = 336538.7657  468188.4625  398194.4649  470514.9209  342902.4125  329620.9791  384523.4731  352411.5416  493642.0405  rho = 0.9883  \nIteration 42    ll = -1621.0213   tau2 = 336538.7657  468188.4625  398194.4649  470514.9209  342902.4125  329620.9791  384518.5282  352416.0428  493642.0405  rho = 0.9883  \nIteration 43    ll = -1621.0210   tau2 = 336538.7657  468188.4625  398194.4649  470514.9209  342902.4125  329620.9791  384518.5282  352411.5416  493648.5120  rho = 0.9883  \nIteration 44    ll = -1621.0216   tau2 = 336538.7657  468188.4625  398194.4649  470514.9209  342902.4125  329620.9791  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 45    ll = -1621.0214   tau2 = 336538.7657  468188.4625  398194.4649  470514.9209  342902.4125  329620.9791  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 46    ll = -1621.0214   tau2 = 336538.7657  468188.4625  398194.4649  470514.9209  342902.4125  329620.9791  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 47    ll = -1555.5223   tau2 = 423523.5374  462439.7631  465432.1681  551756.5575  414058.9254  394859.8880  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 48    ll = -1555.5223   tau2 = 423523.5374  462439.7631  465432.1681  551756.5575  414058.9254  394859.8880  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 49    ll = -1555.5218   tau2 = 423529.0247  462439.7631  465432.1681  551756.5575  414058.9254  394859.8880  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 50    ll = -1555.5220   tau2 = 423523.5374  462445.7953  465432.1681  551756.5575  414058.9254  394859.8880  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 51    ll = -1555.5223   tau2 = 423523.5374  462439.7631  465438.2424  551756.5575  414058.9254  394859.8880  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 52    ll = -1555.5224   tau2 = 423523.5374  462439.7631  465432.1681  551763.8523  414058.9254  394859.8880  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 53    ll = -1555.5218   tau2 = 423523.5374  462439.7631  465432.1681  551756.5575  414064.2808  394859.8880  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 54    ll = -1555.5222   tau2 = 423523.5374  462439.7631  465432.1681  551756.5575  414058.9254  394864.9763  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 55    ll = -1555.5224   tau2 = 423523.5374  462439.7631  465432.1681  551756.5575  414058.9254  394859.8880  468761.6329  420619.3654  1110378.9104  rho = 0.9571  \nIteration 56    ll = -1555.5222   tau2 = 423523.5374  462439.7631  465432.1681  551756.5575  414058.9254  394859.8880  468755.5119  420624.8122  1110378.9104  rho = 0.9571  \nIteration 57    ll = -1555.5224   tau2 = 423523.5374  462439.7631  465432.1681  551756.5575  414058.9254  394859.8880  468755.5119  420619.3654  1110394.3672  rho = 0.9571  \nIteration 58    ll = -1555.5224   tau2 = 423523.5374  462439.7631  465432.1681  551756.5575  414058.9254  394859.8880  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 59    ll = -1555.5223   tau2 = 423523.5374  462439.7631  465432.1681  551756.5575  414058.9254  394859.8880  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 60    ll = -1555.5223   tau2 = 423523.5374  462439.7631  465432.1681  551756.5575  414058.9254  394859.8880  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 61    ll =  -Inf   tau2 = 939394.4610  901450.6786  750299.7164  833484.2509  933910.5091  668208.8206  750388.2782  734102.5099  6693097.0246  rho =-0.3939  \nIteration 62    ll = -1537.5476   tau2 = 458642.8164  494360.5993  488196.0202  574992.9143  449144.8888  416188.3667  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 63    ll = -1537.5476   tau2 = 458642.8164  494360.5993  488196.0202  574992.9143  449144.8888  416188.3667  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 64    ll = -1537.5472   tau2 = 458648.7954  494360.5993  488196.0202  574992.9143  449144.8888  416188.3667  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 65    ll = -1537.5473   tau2 = 458642.8164  494367.0809  488196.0202  574992.9143  449144.8888  416188.3667  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 66    ll = -1537.5475   tau2 = 458642.8164  494360.5993  488202.4148  574992.9143  449144.8888  416188.3667  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 67    ll = -1537.5476   tau2 = 458642.8164  494360.5993  488196.0202  575000.5399  449144.8888  416188.3667  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 68    ll = -1537.5471   tau2 = 458642.8164  494360.5993  488196.0202  574992.9143  449150.7345  416188.3667  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 69    ll = -1537.5475   tau2 = 458642.8164  494360.5993  488196.0202  574992.9143  449144.8888  416193.7517  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 70    ll = -1537.5476   tau2 = 458642.8164  494360.5993  488196.0202  574992.9143  449144.8888  416188.3667  491344.4380  444709.0917  1328883.1546  rho = 0.9326  \nIteration 71    ll = -1537.5475   tau2 = 458642.8164  494360.5993  488196.0202  574992.9143  449144.8888  416188.3667  491337.9990  444714.8753  1328883.1546  rho = 0.9326  \nIteration 72    ll = -1537.5477   tau2 = 458642.8164  494360.5993  488196.0202  574992.9143  449144.8888  416188.3667  491337.9990  444709.0917  1328901.8918  rho = 0.9326  \nIteration 73    ll = -1537.5477   tau2 = 458642.8164  494360.5993  488196.0202  574992.9143  449144.8888  416188.3667  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 74    ll = -1537.5476   tau2 = 458642.8164  494360.5993  488196.0202  574992.9143  449144.8888  416188.3667  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 75    ll = -1537.5476   tau2 = 458642.8164  494360.5993  488196.0202  574992.9143  449144.8888  416188.3667  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 76    ll = -1529.2643   tau2 = 664212.5965  649477.5515  667954.0929  788615.2676  674183.0097  530329.8026  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 77    ll = -1529.2643   tau2 = 664212.5965  649477.5515  667954.0929  788615.2676  674183.0097  530329.8026  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 78    ll = -1529.2642   tau2 = 664221.5012  649477.5515  667954.0929  788615.2676  674183.0097  530329.8026  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 79    ll = -1529.2642   tau2 = 664212.5965  649486.2441  667954.0929  788615.2676  674183.0097  530329.8026  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 80    ll = -1529.2643   tau2 = 664212.5965  649477.5515  667963.0515  788615.2676  674183.0097  530329.8026  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 81    ll = -1529.2643   tau2 = 664212.5965  649477.5515  667954.0929  788625.9755  674183.0097  530329.8026  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 82    ll = -1529.2642   tau2 = 664212.5965  649477.5515  667954.0929  788615.2676  674192.0581  530329.8026  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 83    ll = -1529.2643   tau2 = 664212.5965  649477.5515  667954.0929  788615.2676  674183.0097  530336.7930  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 84    ll = -1529.2643   tau2 = 664212.5965  649477.5515  667954.0929  788615.2676  674183.0097  530329.8026  652905.9211  607286.8611  2582963.7087  rho = 0.7005  \nIteration 85    ll = -1529.2643   tau2 = 664212.5965  649477.5515  667954.0929  788615.2676  674183.0097  530329.8026  652897.1793  607294.9482  2582963.7087  rho = 0.7005  \nIteration 86    ll = -1529.2644   tau2 = 664212.5965  649477.5515  667954.0929  788615.2676  674183.0097  530329.8026  652897.1793  607286.8611  2583001.8450  rho = 0.7005  \nIteration 87    ll = -1529.2643   tau2 = 664212.5965  649477.5515  667954.0929  788615.2676  674183.0097  530329.8026  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 88    ll = -1529.2643   tau2 = 664212.5965  649477.5515  667954.0929  788615.2676  674183.0097  530329.8026  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 89    ll = -1529.2643   tau2 = 664212.5965  649477.5515  667954.0929  788615.2676  674183.0097  530329.8026  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 90    ll = -1505.7193   tau2 = 671381.5588  688985.6347  639789.6305  732606.1961  677934.7796  514989.7363  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 91    ll = -1505.7193   tau2 = 671381.5588  688985.6347  639789.6305  732606.1961  677934.7796  514989.7363  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 92    ll = -1505.7192   tau2 = 671390.5668  688985.6347  639789.6305  732606.1961  677934.7796  514989.7363  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 93    ll = -1505.7192   tau2 = 671381.5588  688994.8967  639789.6305  732606.1961  677934.7796  514989.7363  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 94    ll = -1505.7192   tau2 = 671381.5588  688985.6347  639798.1838  732606.1961  677934.7796  514989.7363  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 95    ll = -1505.7192   tau2 = 671381.5588  688985.6347  639789.6305  732616.0895  677934.7796  514989.7363  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 96    ll = -1505.7192   tau2 = 671381.5588  688985.6347  639789.6305  732606.1961  677943.8821  514989.7363  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 97    ll = -1505.7192   tau2 = 671381.5588  688985.6347  639789.6305  732606.1961  677934.7796  514996.5095  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 98    ll = -1505.7192   tau2 = 671381.5588  688985.6347  639789.6305  732606.1961  677934.7796  514989.7363  618011.6722  585576.3404  2100216.9532  rho = 0.8715  \nIteration 99    ll = -1505.7192   tau2 = 671381.5588  688985.6347  639789.6305  732606.1961  677934.7796  514989.7363  618003.4315  585584.1171  2100216.9532  rho = 0.8715  \nIteration 100   ll = -1505.7194   tau2 = 671381.5588  688985.6347  639789.6305  732606.1961  677934.7796  514989.7363  618003.4315  585576.3404  2100247.5274  rho = 0.8715  \nIteration 101   ll = -1505.7193   tau2 = 671381.5588  688985.6347  639789.6305  732606.1961  677934.7796  514989.7363  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 102   ll = -1505.7193   tau2 = 671381.5588  688985.6347  639789.6305  732606.1961  677934.7796  514989.7363  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 103   ll = -1505.7193   tau2 = 671381.5588  688985.6347  639789.6305  732606.1961  677934.7796  514989.7363  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 104   ll = -1497.0682   tau2 = 789051.8641  796916.9055  724363.3243  815177.4100  790134.0147  572200.0655  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 105   ll = -1497.0682   tau2 = 789051.8641  796916.9055  724363.3243  815177.4100  790134.0147  572200.0655  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 106   ll = -1497.0681   tau2 = 789062.5784  796916.9055  724363.3243  815177.4100  790134.0147  572200.0655  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 107   ll = -1497.0681   tau2 = 789051.8641  796927.7345  724363.3243  815177.4100  790134.0147  572200.0655  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 108   ll = -1497.0681   tau2 = 789051.8641  796916.9055  724373.0982  815177.4100  790134.0147  572200.0655  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 109   ll = -1497.0681   tau2 = 789051.8641  796916.9055  724363.3243  815188.5056  790134.0147  572200.0655  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 110   ll = -1497.0681   tau2 = 789051.8641  796916.9055  724363.3243  815177.4100  790144.7448  572200.0655  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 111   ll = -1497.0681   tau2 = 789051.8641  796916.9055  724363.3243  815177.4100  790134.0147  572207.6514  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 112   ll = -1497.0681   tau2 = 789051.8641  796916.9055  724363.3243  815177.4100  790134.0147  572200.0655  695270.0988  669696.4442  2246904.7602  rho = 0.8947  \nIteration 113   ll = -1497.0681   tau2 = 789051.8641  796916.9055  724363.3243  815177.4100  790134.0147  572200.0655  695260.7461  669705.4279  2246904.7602  rho = 0.8947  \nIteration 114   ll = -1497.0683   tau2 = 789051.8641  796916.9055  724363.3243  815177.4100  790134.0147  572200.0655  695260.7461  669696.4442  2246937.6216  rho = 0.8947  \nIteration 115   ll = -1497.0682   tau2 = 789051.8641  796916.9055  724363.3243  815177.4100  790134.0147  572200.0655  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 116   ll = -1497.0682   tau2 = 789051.8641  796916.9055  724363.3243  815177.4100  790134.0147  572200.0655  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 117   ll = -1497.0682   tau2 = 789051.8641  796916.9055  724363.3243  815177.4100  790134.0147  572200.0655  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 118   ll = -1476.1105   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386187.4183  1433035.8176  943068.9617  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 119   ll = -1476.1105   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386187.4183  1433035.8176  943068.9617  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 120   ll = -1476.1106   tau2 = 1437113.9849  1344865.3248  1259548.8276  1386187.4183  1433035.8176  943068.9617  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 121   ll = -1476.1105   tau2 = 1437093.6095  1344884.3034  1259548.8276  1386187.4183  1433035.8176  943068.9617  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 122   ll = -1476.1104   tau2 = 1437093.6095  1344865.3248  1259566.5197  1386187.4183  1433035.8176  943068.9617  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 123   ll = -1476.1104   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386207.0220  1433035.8176  943068.9617  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 124   ll = -1476.1106   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386187.4183  1433056.1314  943068.9617  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 125   ll = -1476.1104   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386187.4183  1433035.8176  943081.9355  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 126   ll = -1476.1104   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386187.4183  1433035.8176  943068.9617  1205347.2440  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 127   ll = -1476.1105   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386187.4183  1433035.8176  943068.9617  1205330.3665  1204643.6229  3030865.7614  rho = 0.9382  \nIteration 128   ll = -1476.1106   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386187.4183  1433035.8176  943068.9617  1205330.3665  1204626.7560  3030910.9955  rho = 0.9382  \nIteration 129   ll = -1476.1105   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386187.4183  1433035.8176  943068.9617  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 130   ll = -1476.1105   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386187.4183  1433035.8176  943068.9617  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 131   ll = -1476.1105   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386187.4183  1433035.8176  943068.9617  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 132   ll = -1469.2346   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045581.9615  2056599.5577  1403914.8960  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 133   ll = -1469.2346   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045581.9615  2056599.5577  1403914.8960  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 134   ll = -1469.2347   tau2 = 2066099.1395  1893105.1958  1853507.0258  2045581.9615  2056599.5577  1403914.8960  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 135   ll = -1469.2345   tau2 = 2066069.0962  1893132.5584  1853507.0258  2045581.9615  2056599.5577  1403914.8960  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 136   ll = -1469.2346   tau2 = 2066069.0962  1893105.1958  1853533.7769  2045581.9615  2056599.5577  1403914.8960  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 137   ll = -1469.2345   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045611.6865  2056599.5577  1403914.8960  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 138   ll = -1469.2347   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045581.9615  2056629.4538  1403914.8960  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 139   ll = -1469.2345   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045581.9615  2056599.5577  1403934.7682  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 140   ll = -1469.2345   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045581.9615  2056599.5577  1403914.8960  1801008.5280  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 141   ll = -1469.2346   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045581.9615  2056599.5577  1403914.8960  1800982.5868  1793521.2418  3642828.7002  rho = 0.9555  \nIteration 142   ll = -1469.2346   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045581.9615  2056599.5577  1403914.8960  1800982.5868  1793495.4158  3642883.7375  rho = 0.9555  \nIteration 143   ll = -1469.2346   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045581.9615  2056599.5577  1403914.8960  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 144   ll = -1469.2346   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045581.9615  2056599.5577  1403914.8960  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 145   ll = -1469.2346   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045581.9615  2056599.5577  1403914.8960  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 146   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820822.2531  2717082.8553  2029225.0611  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 147   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820822.2531  2717082.8553  2029225.0611  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 148   ll = -1466.5575   tau2 = 2717503.4760  2545789.6894  2535081.5727  2820822.2531  2717082.8553  2029225.0611  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 149   ll = -1466.5573   tau2 = 2717463.2159  2545827.2400  2535081.5727  2820822.2531  2717082.8553  2029225.0611  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 150   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535118.9546  2820822.2531  2717082.8553  2029225.0611  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 151   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820864.1498  2717082.8553  2029225.0611  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 152   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820822.2531  2717123.1093  2029225.0611  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 153   ll = -1466.5573   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820822.2531  2717082.8553  2029254.5321  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 154   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820822.2531  2717082.8553  2029225.0611  2498721.0395  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 155   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820822.2531  2717082.8553  2029225.0611  2498684.2305  2455140.8856  4212526.4304  rho = 0.9668  \nIteration 156   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820822.2531  2717082.8553  2029225.0611  2498684.2305  2455104.7617  4212590.6869  rho = 0.9668  \nIteration 157   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820822.2531  2717082.8553  2029225.0611  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 158   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820822.2531  2717082.8553  2029225.0611  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 159   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820822.2531  2717082.8553  2029225.0611  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 160   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252330.9296  3055947.6462  2449778.3876  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 161   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252330.9296  3055947.6462  2449778.3876  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 162   ll = -1466.0574   tau2 = 3040950.3601  2942904.9561  2900867.1772  3252330.9296  3055947.6462  2449778.3876  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 163   ll = -1466.0573   tau2 = 3040904.9661  2942948.7907  2900867.1772  3252330.9296  3055947.6462  2449778.3876  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 164   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900910.3440  3252330.9296  3055947.6462  2449778.3876  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 165   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252379.6983  3055947.6462  2449778.3876  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 166   ll = -1466.0574   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252330.9296  3055993.2798  2449778.3876  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 167   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252330.9296  3055947.6462  2449814.4278  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 168   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252330.9296  3055947.6462  2449778.3876  2867252.6704  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 169   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252330.9296  3055947.6462  2449778.3876  2867210.0380  2794882.1198  4557037.8785  rho = 0.9709  \nIteration 170   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252330.9296  3055947.6462  2449778.3876  2867210.0380  2794840.6349  4557107.7484  rho = 0.9709  \nIteration 171   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252330.9296  3055947.6462  2449778.3876  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 172   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252330.9296  3055947.6462  2449778.3876  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 173   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252330.9296  3055947.6462  2449778.3876  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 174   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377306.5493  3144878.0339  2620245.6013  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 175   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377306.5493  3144878.0339  2620245.6013  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 176   ll = -1465.9658   tau2 = 3119993.4900  3080225.3957  2999554.6195  3377306.5493  3144878.0339  2620245.6013  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 177   ll = -1465.9658   tau2 = 3119946.8361  3080271.4162  2999554.6195  3377306.5493  3144878.0339  2620245.6013  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 178   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999599.3551  3377306.5493  3144878.0339  2620245.6013  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 179   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377357.3193  3144878.0339  2620245.6013  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 180   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377306.5493  3144925.0857  2620245.6013  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 181   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377306.5493  3144878.0339  2620284.3256  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 182   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377306.5493  3144878.0339  2620245.6013  2959599.5011  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 183   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377306.5493  3144878.0339  2620245.6013  2959555.4017  2878076.8933  4727253.9446  rho = 0.9719  \nIteration 184   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377306.5493  3144878.0339  2620245.6013  2959555.4017  2878034.0891  4727326.5976  rho = 0.9719  \nIteration 185   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377306.5493  3144878.0339  2620245.6013  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 186   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377306.5493  3144878.0339  2620245.6013  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 187   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377306.5493  3144878.0339  2620245.6013  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 188   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383429.8567  3141467.8318  2678548.2930  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 189   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383429.8567  3141467.8318  2678548.2930  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 190   ll = -1465.9317   tau2 = 3112147.9661  3103215.3679  2998116.9710  3383429.8567  3141467.8318  2678548.2930  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 191   ll = -1465.9317   tau2 = 3112101.4373  3103261.7549  2998116.9710  3383429.8567  3141467.8318  2678548.2930  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 192   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998161.6838  3383429.8567  3141467.8318  2678548.2930  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 193   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383480.7249  3141467.8318  2678548.2930  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 194   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383429.8567  3141514.8292  2678548.2930  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 195   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383429.8567  3141467.8318  2678587.9379  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 196   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383429.8567  3141467.8318  2678548.2930  2952592.0697  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 197   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383429.8567  3141467.8318  2678548.2930  2952548.0818  2870123.7007  4826159.6052  rho = 0.9720  \nIteration 198   ll = -1465.9316   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383429.8567  3141467.8318  2678548.2930  2952548.0818  2870081.0227  4826233.8783  rho = 0.9720  \nIteration 199   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383429.8567  3141467.8318  2678548.2930  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 200   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383429.8567  3141467.8318  2678548.2930  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 201   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383429.8567  3141467.8318  2678548.2930  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 202   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350364.0943  3111040.7409  2685555.4536  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 203   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350364.0943  3111040.7409  2685555.4536  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 204   ll = -1465.9145   tau2 = 3081436.6436  3078595.3416  2966193.5696  3350364.0943  3111040.7409  2685555.4536  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 205   ll = -1465.9145   tau2 = 3081390.6045  3078641.3361  2966193.5696  3350364.0943  3111040.7409  2685555.4536  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 206   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966237.7745  3350364.0943  3111040.7409  2685555.4536  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 207   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350414.4325  3111040.7409  2685555.4536  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 208   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350364.0943  3111087.2528  2685555.4536  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 209   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350364.0943  3111040.7409  2685595.2092  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 210   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350364.0943  3111040.7409  2685555.4536  2918609.7725  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 211   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350364.0943  3111040.7409  2685555.4536  2918566.3246  2837570.9507  4896685.7326  rho = 0.9720  \nIteration 212   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350364.0943  3111040.7409  2685555.4536  2918566.3246  2837528.7891  4896761.1621  rho = 0.9720  \nIteration 213   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350364.0943  3111040.7409  2685555.4536  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 214   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350364.0943  3111040.7409  2685555.4536  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 215   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350364.0943  3111040.7409  2685555.4536  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 216   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329605.6263  3095814.0629  2679919.0393  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 217   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329605.6263  3095814.0629  2679919.0393  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 218   ll = -1465.9063   tau2 = 3068076.7291  3055472.0780  2948231.6163  3329605.6263  3095814.0629  2679919.0393  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 219   ll = -1465.9063   tau2 = 3068030.9029  3055517.7040  2948231.6163  3329605.6263  3095814.0629  2679919.0393  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 220   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948275.5356  3329605.6263  3095814.0629  2679919.0393  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 221   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329655.6319  3095814.0629  2679919.0393  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 222   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329605.6263  3095860.3319  2679919.0393  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 223   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329605.6263  3095814.0629  2679958.7058  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 224   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329605.6263  3095814.0629  2679919.0393  2901760.8121  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 225   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329605.6263  3095814.0629  2679919.0393  2901717.6319  2821442.8303  4955287.4617  rho = 0.9720  \nIteration 226   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329605.6263  3095814.0629  2679919.0393  2901717.6319  2821400.9244  4955363.8528  rho = 0.9720  \nIteration 227   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329605.6263  3095814.0629  2679919.0393  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 228   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329605.6263  3095814.0629  2679919.0393  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 229   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329605.6263  3095814.0629  2679919.0393  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 230   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334661.3752  3104969.0636  2682934.0046  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 231   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334661.3752  3104969.0636  2682934.0046  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 232   ll = -1465.9013   tau2 = 3079346.8211  3053150.6554  2954184.2867  3334661.3752  3104969.0636  2682934.0046  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 233   ll = -1465.9013   tau2 = 3079300.8154  3053196.2444  2954184.2867  3334661.3752  3104969.0636  2682934.0046  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 234   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954228.3007  3334661.3752  3104969.0636  2682934.0046  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 235   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334711.4618  3104969.0636  2682934.0046  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 236   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334661.3752  3105015.4786  2682934.0046  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 237   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334661.3752  3104969.0636  2682973.7188  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 238   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334661.3752  3104969.0636  2682934.0046  2909764.3276  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 239   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334661.3752  3104969.0636  2682934.0046  2909721.0202  2828987.0703  5024522.6928  rho = 0.9721  \nIteration 240   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334661.3752  3104969.0636  2682934.0046  2909721.0202  2828945.0448  5024600.2210  rho = 0.9721  \nIteration 241   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334661.3752  3104969.0636  2682934.0046  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 242   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334661.3752  3104969.0636  2682934.0046  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 243   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334661.3752  3104969.0636  2682934.0046  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 244   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360225.2305  3131571.9461  2695788.5359  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 245   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360225.2305  3131571.9461  2695788.5359  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 246   ll = -1465.8984   tau2 = 3107074.9043  3072195.8935  2978085.7431  3360225.2305  3131571.9461  2695788.5359  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 247   ll = -1465.8984   tau2 = 3107028.4564  3072241.7860  2978085.7431  3360225.2305  3131571.9461  2695788.5359  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 248   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978130.1371  3360225.2305  3131571.9461  2695788.5359  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 249   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360275.7267  3131571.9461  2695788.5359  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 250   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360225.2305  3131618.7855  2695788.5359  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 251   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360225.2305  3131571.9461  2695828.4533  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 252   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360225.2305  3131571.9461  2695788.5359  2934881.4214  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 253   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360225.2305  3131571.9461  2695788.5359  2934837.7150  2853085.7600  5094110.7842  rho = 0.9724  \nIteration 254   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360225.2305  3131571.9461  2695788.5359  2934837.7150  2853043.3524  5094189.4562  rho = 0.9724  \nIteration 255   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360225.2305  3131571.9461  2695788.5359  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 256   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360225.2305  3131571.9461  2695788.5359  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 257   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360225.2305  3131571.9461  2695788.5359  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 258   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385055.6450  3155052.3746  2707643.0458  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 259   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385055.6450  3155052.3746  2707643.0458  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 260   ll = -1465.8973   tau2 = 3130395.1538  3095219.1158  3000413.5848  3385055.6450  3155052.3746  2707643.0458  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 261   ll = -1465.8973   tau2 = 3130348.3339  3095265.3753  3000413.5848  3385055.6450  3155052.3746  2707643.0458  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 262   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000458.3341  3385055.6450  3155052.3746  2707643.0458  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 263   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385106.5393  3155052.3746  2707643.0458  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 264   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385055.6450  3155099.5887  2707643.0458  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 265   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385055.6450  3155052.3746  2707683.1506  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 266   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385055.6450  3155052.3746  2707643.0458  2956967.6044  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 267   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385055.6450  3155052.3746  2707643.0458  2956923.5469  2874574.5887  5138465.5297  rho = 0.9726  \nIteration 268   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385055.6450  3155052.3746  2707643.0458  2956923.5469  2874531.8401  5138544.9313  rho = 0.9726  \nIteration 269   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385055.6450  3155052.3746  2707643.0458  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 270   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385055.6450  3155052.3746  2707643.0458  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 271   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385055.6450  3155052.3746  2707643.0458  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 272   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3394999.8549  3163394.3469  2711122.2723  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 273   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3394999.8549  3163394.3469  2711122.2723  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 274   ll = -1465.8970   tau2 = 3138149.8759  3106444.0951  3008946.7312  3394999.8549  3163394.3469  2711122.2723  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 275   ll = -1465.8970   tau2 = 3138102.9323  3106490.5336  3008946.7312  3394999.8549  3163394.3469  2711122.2723  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 276   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008991.6163  3394999.8549  3163394.3469  2711122.2723  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 277   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3395050.9086  3163394.3469  2711122.2723  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 278   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3394999.8549  3163441.6943  2711122.2723  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 279   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3394999.8549  3163394.3469  2711162.4321  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 280   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3394999.8549  3163394.3469  2711122.2723  2964773.2171  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 281   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3394999.8549  3163394.3469  2711122.2723  2964729.0355  2882406.3835  5152565.6901  rho = 0.9726  \nIteration 282   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3394999.8549  3163394.3469  2711122.2723  2964729.0355  2882363.5106  5152645.3237  rho = 0.9726  \nIteration 283   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3394999.8549  3163394.3469  2711122.2723  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 284   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3394999.8549  3163394.3469  2711122.2723  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 285   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3394999.8549  3163394.3469  2711122.2723  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 286   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395395.4521  3162928.8208  2709710.4431  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 287   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395395.4521  3162928.8208  2709710.4431  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 288   ll = -1465.8969   tau2 = 3137346.3835  3108058.7772  3009012.2968  3395395.4521  3162928.8208  2709710.4431  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 289   ll = -1465.8969   tau2 = 3137299.4527  3108105.2415  3009012.2968  3395395.4521  3162928.8208  2709710.4431  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 290   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009057.1830  3395395.4521  3162928.8208  2709710.4431  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 291   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395446.5122  3162928.8208  2709710.4431  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 292   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395395.4521  3162976.1607  2709710.4431  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 293   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395395.4521  3162928.8208  2709750.5805  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 294   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395395.4521  3162928.8208  2709710.4431  2964472.5282  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 295   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395395.4521  3162928.8208  2709710.4431  2964428.3514  2882282.5783  5153412.2182  rho = 0.9727  \nIteration 296   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395395.4521  3162928.8208  2709710.4431  2964428.3514  2882239.7073  5153491.8657  rho = 0.9727  \nIteration 297   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395395.4521  3162928.8208  2709710.4431  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 298   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395395.4521  3162928.8208  2709710.4431  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 299   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395395.4521  3162928.8208  2709710.4431  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 300   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393901.4670  3161109.0254  2707936.7281  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 301   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393901.4670  3161109.0254  2707936.7281  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 302   ll = -1465.8969   tau2 = 3135439.0710  3106954.1689  3007559.9178  3393901.4670  3161109.0254  2707936.7281  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 303   ll = -1465.8969   tau2 = 3135392.1706  3107000.6156  3007559.9178  3393901.4670  3161109.0254  2707936.7281  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 304   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007604.7808  3393901.4670  3161109.0254  2707936.7281  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 305   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393952.5031  3161109.0254  2707936.7281  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 306   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393901.4670  3161156.3363  2707936.7281  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 307   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393901.4670  3161109.0254  2707976.8375  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 308   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393901.4670  3161109.0254  2707936.7281  2962993.1212  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 309   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393901.4670  3161109.0254  2707936.7281  2962948.9679  2880881.1619  5152261.7831  rho = 0.9726  \nIteration 310   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393901.4670  3161109.0254  2707936.7281  2962948.9679  2880838.3132  5152341.4116  rho = 0.9726  \nIteration 311   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393901.4670  3161109.0254  2707936.7281  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 312   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393901.4670  3161109.0254  2707936.7281  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 313   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393901.4670  3161109.0254  2707936.7281  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 314   ll = -1465.8969   tau2 = 3134655.6719  3106256.3433  3006951.7597  3393243.7892  3160365.7228  2707267.3040  2962407.3469  2880290.8655  5151862.3115  rho = 0.9726  \nIteration 315   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393612.3930  3160782.3124  2707642.4868  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 316   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393612.3930  3160782.3124  2707642.4868  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 317   ll = -1465.8969   tau2 = 3135115.3434  3106647.4459  3007292.6090  3393612.3930  3160782.3124  2707642.4868  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 318   ll = -1465.8969   tau2 = 3135068.4482  3106693.8877  3007292.6090  3393612.3930  3160782.3124  2707642.4868  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 319   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007337.4678  3393612.3930  3160782.3124  2707642.4868  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 320   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393663.4245  3160782.3124  2707642.4868  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 321   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393612.3930  3160829.6180  2707642.4868  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 322   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393612.3930  3160782.3124  2707682.5916  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 323   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393612.3930  3160782.3124  2707642.4868  2962755.0555  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 324   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393612.3930  3160782.3124  2707642.4868  2962710.9060  2880640.5347  5152086.2061  rho = 0.9726  \nIteration 325   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393612.3930  3160782.3124  2707642.4868  2962710.9060  2880597.6897  5152165.8318  rho = 0.9726  \nIteration 326   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393612.3930  3160782.3124  2707642.4868  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 327   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393612.3930  3160782.3124  2707642.4868  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 328   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393612.3930  3160782.3124  2707642.4868  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 329   ll = -1465.8969   tau2 = 3134579.4939  3106134.9236  3006895.9165  3393181.7033  3160281.2455  2707190.7787  2962384.6447  2880253.2453  5151865.7623  rho = 0.9726  \nIteration 330   ll = -1465.8969   tau2 = 3134898.8441  3106469.6662  3007155.0089  3393463.0006  3160608.5066  2707485.8018  2962597.7371  2880478.2134  5152009.7434  rho = 0.9726  \nIteration 331   ll = -1465.8969   tau2 = 3135000.7264  3106576.4595  3007237.6663  3393552.7418  3160712.9128  2707579.9234  2962665.7186  2880549.9838  5152055.6754  rho = 0.9726  \nIteration 332   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393586.4428  3160752.1213  2707615.2696  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 333   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393586.4428  3160752.1213  2707615.2696  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 334   ll = -1465.8969   tau2 = 3135085.8817  3106616.5645  3007268.7071  3393586.4428  3160752.1213  2707615.2696  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 335   ll = -1465.8969   tau2 = 3135038.9870  3106663.0058  3007268.7071  3393586.4428  3160752.1213  2707615.2696  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 336   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007313.5655  3393586.4428  3160752.1213  2707615.2696  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 337   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393637.4739  3160752.1213  2707615.2696  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 338   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393586.4428  3160799.4265  2707615.2696  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 339   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393586.4428  3160752.1213  2707655.3740  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 340   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393586.4428  3160752.1213  2707615.2696  2962735.3972  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 341   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393586.4428  3160752.1213  2707615.2696  2962691.2480  2880619.7807  5152072.9243  rho = 0.9726  \nIteration 342   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393586.4428  3160752.1213  2707615.2696  2962691.2480  2880576.9361  5152152.5497  rho = 0.9726  \nIteration 343   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393586.4428  3160752.1213  2707615.2696  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 344   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393586.4428  3160752.1213  2707615.2696  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 345   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393586.4428  3160752.1213  2707615.2696  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 346   ll = -1465.8969   tau2 = 3134593.9463  3106141.7794  3006913.5685  3393201.8054  3160294.7866  2707202.8560  2962408.5183  2880272.6912  5151885.4907  rho = 0.9726  \nIteration 347   ll = -1465.8969   tau2 = 3134885.4318  3106452.7458  3007146.1724  3393453.7302  3160594.3241  2707472.9715  2962593.6975  2880471.9618  5152008.2552  rho = 0.9726  \nIteration 348   ll = -1465.8969   tau2 = 3134977.7631  3106551.2484  3007219.8515  3393533.5292  3160689.2061  2707558.5340  2962652.3539  2880535.0820  5152047.1404  rho = 0.9726  \nIteration 349   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 350   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 351   ll = -1465.8969   tau2 = 3135059.2777  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 352   ll = -1465.8969   tau2 = 3135012.3834  3106634.6235  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 353   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007292.3360  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 354   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393614.4810  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 355   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160772.0875  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 356   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707630.7202  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 357   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962718.4963  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 358   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880601.5936  5152061.7205  rho = 0.9726  \nIteration 359   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152141.3457  rho = 0.9726  \nIteration 360   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 361   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 362   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 363   ll = -1465.8969   tau2 = 3134598.2146  3106145.0120  3006919.0679  3393208.1993  3160298.9248  2707207.0704  2962415.6085  2880278.5175  5151887.9694  rho = 0.9726  \nIteration 364   ll = -1465.8969   tau2 = 3134873.8007  3106439.8953  3007137.5913  3393444.5829  3160582.2887  2707462.2798  2962587.7735  2880464.9836  5152003.5845  rho = 0.9726  \nIteration 365   ll = -1465.8969   tau2 = 3134959.1981  3106531.2728  3007205.3057  3393517.8315  3160670.0963  2707541.3632  2962641.1222  2880522.7640  5152039.4093  rho = 0.9726  \nIteration 366   ll = -1465.8969   tau2 = 3134990.2616  3106564.5117  3007229.9369  3393544.4757  3160702.0366  2707570.1301  2962660.5278  2880543.7817  5152052.4404  rho = 0.9726  \nIteration 367   ll = -1465.8969   tau2 = 3135002.9247  3106578.0616  3007239.9779  3393555.3373  3160715.0571  2707581.8569  2962668.4385  2880552.3495  5152057.7526  rho = 0.9726  \nIteration 368   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 369   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 370   ll = -1465.8971   tau2 = 3139705.2889  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 371   ll = -1465.8971   tau2 = 3130326.4923  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 372   ll = -1465.8971   tau2 = 3135012.3834  3111235.7053  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 373   ll = -1465.8971   tau2 = 3135012.3834  3101947.6024  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 374   ll = -1465.8970   tau2 = 3135012.3834  3106588.1826  3011736.5966  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 375   ll = -1465.8970   tau2 = 3135012.3834  3106588.1826  3002765.0504  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 376   ll = -1465.8971   tau2 = 3135012.3834  3106588.1826  3007247.4779  3398670.3231  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 377   ll = -1465.8971   tau2 = 3135012.3834  3106588.1826  3007247.4779  3388464.2511  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 378   ll = -1465.8971   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3165458.7636  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 379   ll = -1465.8971   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3155997.8815  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 380   ll = -1465.8970   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2711603.9545  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 381   ll = -1465.8970   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2703583.2181  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 382   ll = -1465.8970   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2967092.4981  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 383   ll = -1465.8970   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2958262.7755  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 384   ll = -1465.8970   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2884846.3346  5152061.7205  rho = 0.9726  \nIteration 385   ll = -1465.8970   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2876277.5363  5152061.7205  rho = 0.9726  \nIteration 386   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5160030.3403  rho = 0.9726  \nIteration 387   ll = -1465.8970   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5144105.4065  rho = 0.9726  \nIteration 388   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9727  \nIteration 389   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 390   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 391   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 392   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 393   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 394   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 395   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 396   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 397   ll = -1465.8971   tau2 = 3140329.6354  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 398   ll = -1465.8971   tau2 = 3130948.8492  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 399   ll = -1465.8971   tau2 = 3135635.7343  3111833.7566  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 400   ll = -1465.8971   tau2 = 3135635.7343  3102543.7490  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 401   ll = -1465.8970   tau2 = 3135635.7343  3107185.2809  3012382.1712  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 402   ll = -1465.8970   tau2 = 3135635.7343  3107185.2809  3003408.5732  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 403   ll = -1465.8971   tau2 = 3135635.7343  3107185.2809  3007892.0258  3399412.6063  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 404   ll = -1465.8971   tau2 = 3135635.7343  3107185.2809  3007892.0258  3389204.1573  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 405   ll = -1465.8971   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3166084.0807  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 406   ll = -1465.8971   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3156621.2050  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 407   ll = -1465.8970   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2712104.0359  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 408   ll = -1465.8970   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2704081.7206  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 409   ll = -1465.8970   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2967774.6559  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 410   ll = -1465.8970   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2958942.7673  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 411   ll = -1465.8970   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2885492.1406  5153573.2676  rho = 0.9726  \nIteration 412   ll = -1465.8970   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2876921.2953  5153573.2676  rho = 0.9726  \nIteration 413   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5161544.3768  rho = 0.9726  \nIteration 414   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5145614.4684  rho = 0.9726  \nIteration 415   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9727  \nIteration 416   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 417   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 418   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 419   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 420   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 421   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 422   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 423   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 424   ll = -1465.8971   tau2 = 3140477.6713  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 425   ll = -1465.8971   tau2 = 3131096.4134  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 426   ll = -1465.8971   tau2 = 3135783.5341  3111969.9873  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 427   ll = -1465.8971   tau2 = 3135783.5341  3102679.5459  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 428   ll = -1465.8970   tau2 = 3135783.5341  3107321.2945  3012543.8817  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 429   ll = -1465.8970   tau2 = 3135783.5341  3107321.2945  3003569.7697  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 430   ll = -1465.8971   tau2 = 3135783.5341  3107321.2945  3008053.4790  3399600.5152  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 431   ll = -1465.8971   tau2 = 3135783.5341  3107321.2945  3008053.4790  3389391.4644  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 432   ll = -1465.8971   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3166231.4477  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 433   ll = -1465.8971   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3156768.1021  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 434   ll = -1465.8970   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2712239.7651  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 435   ll = -1465.8970   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2704217.0213  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 436   ll = -1465.8970   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2967954.2376  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 437   ll = -1465.8970   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2959121.7787  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 438   ll = -1465.8970   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2885658.1293  5153863.6315  rho = 0.9726  \nIteration 439   ll = -1465.8970   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2877086.7579  5153863.6315  rho = 0.9726  \nIteration 440   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5161835.2189  rho = 0.9726  \nIteration 441   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5145904.3549  rho = 0.9726  \nIteration 442   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9727  \nIteration 443   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 444   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 445   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 446   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 447   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 448   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 449   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 450   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 451   ll = -1465.8971   tau2 = 3140479.6125  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 452   ll = -1465.8971   tau2 = 3131098.3484  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 453   ll = -1465.8971   tau2 = 3135785.4722  3111972.1435  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 454   ll = -1465.8971   tau2 = 3135785.4722  3102681.6952  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 455   ll = -1465.8970   tau2 = 3135785.4722  3107323.4472  3012549.0795  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 456   ll = -1465.8970   tau2 = 3135785.4722  3107323.4472  3003574.9510  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 457   ll = -1465.8971   tau2 = 3135785.4722  3107323.4472  3008058.6686  3399607.1764  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 458   ll = -1465.8971   tau2 = 3135785.4722  3107323.4472  3008058.6686  3389398.1043  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 459   ll = -1465.8971   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3166233.6879  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 460   ll = -1465.8971   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3156770.3351  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 461   ll = -1465.8970   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2712246.2583  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 462   ll = -1465.8970   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2704223.4939  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 463   ll = -1465.8970   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2967962.1843  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 464   ll = -1465.8970   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2959129.7002  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 465   ll = -1465.8970   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2885664.7326  5153848.1914  rho = 0.9726  \nIteration 466   ll = -1465.8970   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2877093.3403  5153848.1914  rho = 0.9726  \nIteration 467   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5161819.7533  rho = 0.9726  \nIteration 468   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5145888.9402  rho = 0.9726  \nIteration 469   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9727  \nIteration 470   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 471   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 472   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 473   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 474   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \n\n summary(net_arm_UN_prod)\n\n\nMultivariate Meta-Analysis Model (k = 189; method: ML)\n\n    logLik    Deviance         AIC         BIC        AICc   \n-1465.8969    515.8930   2969.7939   3031.3871   2974.2909   \n\nVariance Components:\n\nouter factor: factor(ensaio_1) (nlvls = 31)\ninner factor: produto          (nlvls = 9)\n\n                  estim       sqrt  k.lvl  fixed \ntau^2.1    3135785.4722  1770.8149     31     no \ntau^2.2    3107323.4472  1762.7602     29     no \ntau^2.3    3008058.6686  1734.3756     22     no \ntau^2.4    3394498.8023  1842.4166     23     no \ntau^2.5    3161498.4706  1778.0603     29     no \ntau^2.6    2708231.9053  1645.6707      7     no \ntau^2.7    2963542.6517  1721.4943     20     no \ntau^2.8    2881375.8492  1697.4616     19     no \ntau^2.9    5153848.1914  2270.2088      9     no \nrho              0.9726                       no \n                                                  level \ntau^2.1                                         AACHECK \ntau^2.2                   ABACUS HC (Controle Positivo) \ntau^2.3                     BELYAN  (Controle Positivo) \ntau^2.4                                        FOX XPRO \ntau^2.5                                     OSKESTRA SC \ntau^2.6                                        PREVINIL \ntau^2.7                                     trat_A20259 \ntau^2.8                                         TRIDIUM \ntau^2.9    UNIZEB GOLD (Controle Positivo, multissítio) \nrho                                                     \n\nTest for Residual Heterogeneity:\nQE(df = 180) = 10958.5055, p-val &lt; .0001\n\nTest of Moderators (coefficients 2:9):\nQM(df = 8) = 164.4560, p-val &lt; .0001\n\nModel Results:\n\n                                                      estimate        se \nintrcpt                                              6478.9324  321.1645 \nprodutoABACUS HC (Controle Positivo)                  730.8315   99.6665 \nprodutoBELYAN  (Controle Positivo)                   1071.2983  108.9289 \nprodutoFOX XPRO                                      1021.6410  110.1111 \nprodutoOSKESTRA SC                                    934.1849   99.9557 \nprodutoPREVINIL                                       694.4442  159.9600 \nprodutotrat_A20259                                   1080.6851  113.7802 \nprodutoTRIDIUM                                        855.5617  112.2920 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)   926.6813  196.8640 \n                                                        zval    pval      ci.lb \nintrcpt                                              20.1732  &lt;.0001  5849.4615 \nprodutoABACUS HC (Controle Positivo)                  7.3328  &lt;.0001   535.4888 \nprodutoBELYAN  (Controle Positivo)                    9.8348  &lt;.0001   857.8016 \nprodutoFOX XPRO                                       9.2783  &lt;.0001   805.8272 \nprodutoOSKESTRA SC                                    9.3460  &lt;.0001   738.2753 \nprodutoPREVINIL                                       4.3414  &lt;.0001   380.9285 \nprodutotrat_A20259                                    9.4980  &lt;.0001   857.6800 \nprodutoTRIDIUM                                        7.6191  &lt;.0001   635.4734 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)   4.7072  &lt;.0001   540.8351 \n                                                         ci.ub      \nintrcpt                                              7108.4033  *** \nprodutoABACUS HC (Controle Positivo)                  926.1742  *** \nprodutoBELYAN  (Controle Positivo)                   1284.7950  *** \nprodutoFOX XPRO                                      1237.4548  *** \nprodutoOSKESTRA SC                                   1130.0944  *** \nprodutoPREVINIL                                      1007.9600  *** \nprodutotrat_A20259                                   1303.6901  *** \nprodutoTRIDIUM                                       1075.6501  *** \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)  1312.5276  *** \n\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\nyield_res &lt;- data.frame(cbind(net_arm_UN_prod$b, \n                              net_arm_UN_prod$ci.lb,\n                              net_arm_UN_prod$ci.ub,\n                               net_arm_UN_prod$se)) %&gt;%\n  mutate(fungicide = c(\"check\", \"ABACUSHC\", \"BAS75302F\", \"FOX XPRO\", \"OSKESTRASC\", \n                       \"PREVINIL\", \"A20259\", \"TRIDIUM\", \"UNIZEBGOLD\")) %&gt;%\n  filter(fungicide != \"check\")\n\nnames(yield_res) &lt;- c(\"yld\", \"yld_lower\", \"yld_upper\", \"fungicide\", \"se\")\n\nyield_res\n\n                                                          yld yld_lower\nprodutoABACUS HC (Controle Positivo)                 730.8315  535.4888\nprodutoBELYAN  (Controle Positivo)                  1071.2983  857.8016\nprodutoFOX XPRO                                     1021.6410  805.8272\nprodutoOSKESTRA SC                                   934.1849  738.2753\nprodutoPREVINIL                                      694.4442  380.9285\nprodutotrat_A20259                                  1080.6851  857.6800\nprodutoTRIDIUM                                       855.5617  635.4734\nprodutoUNIZEB GOLD (Controle Positivo, multissítio)  926.6813  540.8351\n                                                    yld_upper fungicide\nprodutoABACUS HC (Controle Positivo)                 926.1742  99.66649\nprodutoBELYAN  (Controle Positivo)                  1284.7950 108.92887\nprodutoFOX XPRO                                     1237.4548 110.11110\nprodutoOSKESTRA SC                                  1130.0944  99.95567\nprodutoPREVINIL                                     1007.9600 159.95995\nprodutotrat_A20259                                  1303.6901 113.78018\nprodutoTRIDIUM                                      1075.6501 112.29204\nprodutoUNIZEB GOLD (Controle Positivo, multissítio) 1312.5276 196.86397\n                                                            se\nprodutoABACUS HC (Controle Positivo)                  ABACUSHC\nprodutoBELYAN  (Controle Positivo)                   BAS75302F\nprodutoFOX XPRO                                       FOX XPRO\nprodutoOSKESTRA SC                                  OSKESTRASC\nprodutoPREVINIL                                       PREVINIL\nprodutotrat_A20259                                      A20259\nprodutoTRIDIUM                                         TRIDIUM\nprodutoUNIZEB GOLD (Controle Positivo, multissítio) UNIZEBGOLD\n\n#write_xlsx(yield_res, \"yield_res.xlsx\")\n\n\n\n\n\nnet_arm_UN_comp &lt;-\n summary(glht(\n    model = net_arm_UN_prod,\n     linfct = cbind(contrMat(rep(1, 9), type = \"Tukey\"))))\n\nnet_arm_UN_comp\n\n\n     Simultaneous Tests for General Linear Hypotheses\n\nFit: rma.mv(yi = mean_prod, V = vi_yld, mods = ~produto, random = list(~produto | \n    factor(ensaio_1)), struct = \"HCS\", data = prod3, method = \"ML\", \n    control = list(optimizer = \"nlm\", verbose = TRUE))\n\nLinear Hypotheses:\n            Estimate Std. Error z value Pr(&gt;|z|)    \n2 - 1 == 0 -5748.101    351.281 -16.363    &lt;0.01 ***\n3 - 1 == 0 -5407.634    358.357 -15.090    &lt;0.01 ***\n4 - 1 == 0 -5457.291    341.664 -15.973    &lt;0.01 ***\n5 - 1 == 0 -5544.748    348.936 -15.890    &lt;0.01 ***\n6 - 1 == 0 -5784.488    389.854 -14.838    &lt;0.01 ***\n7 - 1 == 0 -5398.247    362.018 -14.912    &lt;0.01 ***\n8 - 1 == 0 -5623.371    365.090 -15.403    &lt;0.01 ***\n9 - 1 == 0 -5552.251    309.386 -17.946    &lt;0.01 ***\n3 - 2 == 0   340.467    112.561   3.025   0.0523 .  \n4 - 2 == 0   290.809    111.161   2.616   0.1554    \n5 - 2 == 0   203.353    100.850   2.016   0.4909    \n6 - 2 == 0   -36.387    160.349  -0.227   1.0000    \n7 - 2 == 0   349.854    114.702   3.050   0.0486 *  \n8 - 2 == 0   124.730    113.094   1.103   0.9678    \n9 - 2 == 0   195.850    197.393   0.992   0.9833    \n4 - 3 == 0   -49.657    119.675  -0.415   1.0000    \n5 - 3 == 0  -137.113    112.976  -1.214   0.9438    \n6 - 3 == 0  -376.854    168.306  -2.239   0.3426    \n7 - 3 == 0     9.387    120.307   0.078   1.0000    \n8 - 3 == 0  -215.737    120.754  -1.787   0.6542    \n9 - 3 == 0  -144.617    213.538  -0.677   0.9988    \n5 - 4 == 0   -87.456    111.098  -0.787   0.9964    \n6 - 4 == 0  -327.197    167.305  -1.956   0.5338    \n7 - 4 == 0    59.044    121.687   0.485   0.9999    \n8 - 4 == 0  -166.079    121.038  -1.372   0.8910    \n9 - 4 == 0   -94.960    202.032  -0.470   0.9999    \n6 - 5 == 0  -239.741    160.896  -1.490   0.8370    \n7 - 5 == 0   146.500    115.146   1.272   0.9269    \n8 - 5 == 0   -78.623    113.647  -0.692   0.9986    \n9 - 5 == 0    -7.504    196.314  -0.038   1.0000    \n7 - 6 == 0   386.241    169.612   2.277   0.3194    \n8 - 6 == 0   161.117    167.497   0.962   0.9863    \n9 - 6 == 0   232.237    240.048   0.967   0.9858    \n8 - 7 == 0  -225.123    122.456  -1.838   0.6183    \n9 - 7 == 0  -154.004    215.727  -0.714   0.9982    \n9 - 8 == 0    71.120    213.360   0.333   1.0000    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n(Adjusted p values reported -- single-step method)\n\nplot(net_arm_UN_comp)\n\n\n\n\n\n\n\nmv_yld_means &lt;- emmprep(net_arm_UN_prod)\n\n\n mv_yld_emmeans &lt;- emmeans(mv_yld_means, ~ produto)\n pwpm(mv_yld_emmeans)\n\n                                              AACHECK\nAACHECK                                        [6479]\nABACUS HC (Controle Positivo)                 -730.83\nBELYAN  (Controle Positivo)                  -1071.30\nFOX XPRO                                     -1021.64\nOSKESTRA SC                                   -934.18\nPREVINIL                                      -694.44\ntrat_A20259                                  -1080.69\nTRIDIUM                                       -855.56\nUNIZEB GOLD (Controle Positivo, multissítio)  -926.68\n                                             ABACUS HC (Controle Positivo)\nAACHECK                                                             &lt;.0001\nABACUS HC (Controle Positivo)                                       [7210]\nBELYAN  (Controle Positivo)                                        -340.47\nFOX XPRO                                                           -290.81\nOSKESTRA SC                                                        -203.35\nPREVINIL                                                             36.39\ntrat_A20259                                                        -349.85\nTRIDIUM                                                            -124.73\nUNIZEB GOLD (Controle Positivo, multissítio)                       -195.85\n                                             BELYAN  (Controle Positivo)\nAACHECK                                                           &lt;.0001\nABACUS HC (Controle Positivo)                                     0.0626\nBELYAN  (Controle Positivo)                                       [7550]\nFOX XPRO                                                           49.66\nOSKESTRA SC                                                       137.11\nPREVINIL                                                          376.85\ntrat_A20259                                                        -9.39\nTRIDIUM                                                           215.74\nUNIZEB GOLD (Controle Positivo, multissítio)                      144.62\n                                             FOX XPRO OSKESTRA SC PREVINIL\nAACHECK                                        &lt;.0001      &lt;.0001   0.0005\nABACUS HC (Controle Positivo)                  0.1797      0.5317   1.0000\nBELYAN  (Controle Positivo)                    1.0000      0.9538   0.3801\nFOX XPRO                                       [7501]      0.9972   0.5746\nOSKESTRA SC                                     87.46      [7413]   0.8606\nPREVINIL                                       327.20      239.74   [7173]\ntrat_A20259                                    -59.04     -146.50  -386.24\nTRIDIUM                                        166.08       78.62  -161.12\nUNIZEB GOLD (Controle Positivo, multissítio)    94.96        7.50  -232.24\n                                             trat_A20259  TRIDIUM\nAACHECK                                           &lt;.0001   &lt;.0001\nABACUS HC (Controle Positivo)                     0.0582   0.9740\nBELYAN  (Controle Positivo)                       1.0000   0.6913\nFOX XPRO                                          0.9999   0.9085\nOSKESTRA SC                                       0.9394   0.9989\nPREVINIL                                          0.3560   0.9891\ntrat_A20259                                       [7560]   0.6564\nTRIDIUM                                           225.12   [7334]\nUNIZEB GOLD (Controle Positivo, multissítio)      154.00   -71.12\n                                             UNIZEB GOLD (Controle Positivo, multissítio)\nAACHECK                                                                            &lt;.0001\nABACUS HC (Controle Positivo)                                                      0.9867\nBELYAN  (Controle Positivo)                                                        0.9991\nFOX XPRO                                                                           0.9999\nOSKESTRA SC                                                                        1.0000\nPREVINIL                                                                           0.9887\ntrat_A20259                                                                        0.9986\nTRIDIUM                                                                            1.0000\nUNIZEB GOLD (Controle Positivo, multissítio)                                       [7406]\n\nRow and column labels: produto\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean) \nLower triangle: Comparisons (estimate)   earlier vs. later\n\n\n\nlibrary(tidyverse)\nefficacy_res &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1sXr3kLjpKCZA-WUqqXrerkMBa1D61bwT/edit?gid=947435541#gid=947435541\")\nyield_res &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1WKDA30xXJHkD57osKPp6ylRQPUobc0cS/edit?gid=1424387508#gid=1424387508\")\n\nsev_yld = full_join(efficacy_res, yield_res)\n\n#write_csv(sev_yld, \"sev_yld.csv\")\n\n#Disease pressure\n\nsummary(prod3$mean_sev) \n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.150   1.150   5.333   8.875  12.250  64.500 \n\nprod3 &lt;- prod3 %&gt;%\n  mutate(\n    sev_check_class = case_when(\n      mean_sev &lt; 19 ~ \"Low\",\n      mean_sev &gt;= 19 ~ \"High\"))\n\nlibrary(janitor) \nprod3 %&gt;%\n  tabyl(produto, sev_check_class)\n\n                                      produto High Low\n                                      AACHECK   16  15\n                ABACUS HC (Controle Positivo)    3  26\n                  BELYAN  (Controle Positivo)    0  22\n                                     FOX XPRO    1  22\n                                  OSKESTRA SC    1  28\n                                     PREVINIL    1   6\n                                  trat_A20259    0  20\n                                      TRIDIUM    0  19\n UNIZEB GOLD (Controle Positivo, multissítio)    3   6\n\n\n##Meta-analysis\n\nmv_yld_bas &lt;- rma.mv(\n  mean_prod,\n  vi_yld,\n   mods = ~ produto * as.factor(sev_check_class),\n   method = \"ML\",\n  random = list( ~ produto | factor(ensaio_1)),\n   struct = \"CS\",\n  control = list(optimizer = \"nlm\"),\n   data = prod3)\n\n summary(mv_yld_bas)\n\n\nMultivariate Meta-Analysis Model (k = 189; method: ML)\n\n    logLik    Deviance         AIC         BIC        AICc   \n-1455.6135    495.3261   2945.2269   3000.3366   2948.8059   \n\nVariance Components:\n\nouter factor: factor(ensaio_1) (nlvls = 31)\ninner factor: produto          (nlvls = 9)\n\n                  estim       sqrt  fixed \ntau^2      2986820.7303  1728.2421     no \nrho              0.9758                no \n\nTest for Residual Heterogeneity:\nQE(df = 174) = 10418.3077, p-val &lt; .0001\n\nTest of Moderators (coefficients 2:15):\nQM(df = 14) = 208.0571, p-val &lt; .0001\n\nModel Results:\n\n                                                                                    estimate \nintrcpt                                                                            6159.8377 \nprodutoABACUS HC (Controle Positivo)                                                791.7609 \nprodutoBELYAN  (Controle Positivo)                                                  694.2175 \nprodutoFOX XPRO                                                                     455.5239 \nprodutoOSKESTRA SC                                                                  572.0239 \nprodutoPREVINIL                                                                     721.0239 \nprodutotrat_A20259                                                                  719.8024 \nprodutoTRIDIUM                                                                      471.8305 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                                 460.5998 \nas.factor(sev_check_class)Low                                                       708.8790 \nprodutoABACUS HC (Controle Positivo):as.factor(sev_check_class)Low                 -411.8255 \nprodutoFOX XPRO:as.factor(sev_check_class)Low                                       250.3905 \nprodutoOSKESTRA SC:as.factor(sev_check_class)Low                                     10.6437 \nprodutoPREVINIL:as.factor(sev_check_class)Low                                      -389.6027 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):as.factor(sev_check_class)Low  -120.1171 \n                                                                                         se \nintrcpt                                                                            320.4107 \nprodutoABACUS HC (Controle Positivo)                                               241.0311 \nprodutoBELYAN  (Controle Positivo)                                                 131.5896 \nprodutoFOX XPRO                                                                    378.5255 \nprodutoOSKESTRA SC                                                                 378.5255 \nprodutoPREVINIL                                                                    378.5255 \nprodutotrat_A20259                                                                 132.9918 \nprodutoTRIDIUM                                                                     133.5252 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                                262.5416 \nas.factor(sev_check_class)Low                                                      146.4907 \nprodutoABACUS HC (Controle Positivo):as.factor(sev_check_class)Low                 272.8249 \nprodutoFOX XPRO:as.factor(sev_check_class)Low                                      400.4628 \nprodutoOSKESTRA SC:as.factor(sev_check_class)Low                                   398.1262 \nprodutoPREVINIL:as.factor(sev_check_class)Low                                      422.5479 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):as.factor(sev_check_class)Low  320.8762 \n                                                                                      zval \nintrcpt                                                                            19.2248 \nprodutoABACUS HC (Controle Positivo)                                                3.2849 \nprodutoBELYAN  (Controle Positivo)                                                  5.2756 \nprodutoFOX XPRO                                                                     1.2034 \nprodutoOSKESTRA SC                                                                  1.5112 \nprodutoPREVINIL                                                                     1.9048 \nprodutotrat_A20259                                                                  5.4124 \nprodutoTRIDIUM                                                                      3.5336 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                                 1.7544 \nas.factor(sev_check_class)Low                                                       4.8391 \nprodutoABACUS HC (Controle Positivo):as.factor(sev_check_class)Low                 -1.5095 \nprodutoFOX XPRO:as.factor(sev_check_class)Low                                       0.6253 \nprodutoOSKESTRA SC:as.factor(sev_check_class)Low                                    0.0267 \nprodutoPREVINIL:as.factor(sev_check_class)Low                                      -0.9220 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):as.factor(sev_check_class)Low  -0.3743 \n                                                                                     pval \nintrcpt                                                                            &lt;.0001 \nprodutoABACUS HC (Controle Positivo)                                               0.0010 \nprodutoBELYAN  (Controle Positivo)                                                 &lt;.0001 \nprodutoFOX XPRO                                                                    0.2288 \nprodutoOSKESTRA SC                                                                 0.1307 \nprodutoPREVINIL                                                                    0.0568 \nprodutotrat_A20259                                                                 &lt;.0001 \nprodutoTRIDIUM                                                                     0.0004 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                                0.0794 \nas.factor(sev_check_class)Low                                                      &lt;.0001 \nprodutoABACUS HC (Controle Positivo):as.factor(sev_check_class)Low                 0.1312 \nprodutoFOX XPRO:as.factor(sev_check_class)Low                                      0.5318 \nprodutoOSKESTRA SC:as.factor(sev_check_class)Low                                   0.9787 \nprodutoPREVINIL:as.factor(sev_check_class)Low                                      0.3565 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):as.factor(sev_check_class)Low  0.7082 \n                                                                                        ci.lb \nintrcpt                                                                             5531.8443 \nprodutoABACUS HC (Controle Positivo)                                                 319.3486 \nprodutoBELYAN  (Controle Positivo)                                                   436.3065 \nprodutoFOX XPRO                                                                     -286.3724 \nprodutoOSKESTRA SC                                                                  -169.8724 \nprodutoPREVINIL                                                                      -20.8724 \nprodutotrat_A20259                                                                   459.1432 \nprodutoTRIDIUM                                                                       210.1259 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                                  -53.9723 \nas.factor(sev_check_class)Low                                                        421.7626 \nprodutoABACUS HC (Controle Positivo):as.factor(sev_check_class)Low                  -946.5525 \nprodutoFOX XPRO:as.factor(sev_check_class)Low                                       -534.5022 \nprodutoOSKESTRA SC:as.factor(sev_check_class)Low                                    -769.6693 \nprodutoPREVINIL:as.factor(sev_check_class)Low                                      -1217.7814 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):as.factor(sev_check_class)Low   -749.0230 \n                                                                                       ci.ub \nintrcpt                                                                            6787.8312 \nprodutoABACUS HC (Controle Positivo)                                               1264.1732 \nprodutoBELYAN  (Controle Positivo)                                                  952.1284 \nprodutoFOX XPRO                                                                    1197.4203 \nprodutoOSKESTRA SC                                                                 1313.9203 \nprodutoPREVINIL                                                                    1462.9203 \nprodutotrat_A20259                                                                  980.4616 \nprodutoTRIDIUM                                                                      733.5351 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                                 975.1719 \nas.factor(sev_check_class)Low                                                       995.9954 \nprodutoABACUS HC (Controle Positivo):as.factor(sev_check_class)Low                  122.9016 \nprodutoFOX XPRO:as.factor(sev_check_class)Low                                      1035.2832 \nprodutoOSKESTRA SC:as.factor(sev_check_class)Low                                    790.9567 \nprodutoPREVINIL:as.factor(sev_check_class)Low                                       438.5759 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):as.factor(sev_check_class)Low   508.7887 \n                                                                                       \nintrcpt                                                                            *** \nprodutoABACUS HC (Controle Positivo)                                                ** \nprodutoBELYAN  (Controle Positivo)                                                 *** \nprodutoFOX XPRO                                                                        \nprodutoOSKESTRA SC                                                                     \nprodutoPREVINIL                                                                      . \nprodutotrat_A20259                                                                 *** \nprodutoTRIDIUM                                                                     *** \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                                  . \nas.factor(sev_check_class)Low                                                      *** \nprodutoABACUS HC (Controle Positivo):as.factor(sev_check_class)Low                     \nprodutoFOX XPRO:as.factor(sev_check_class)Low                                          \nprodutoOSKESTRA SC:as.factor(sev_check_class)Low                                       \nprodutoPREVINIL:as.factor(sev_check_class)Low                                          \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):as.factor(sev_check_class)Low      \n\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n anova(mv_yld_bas, btt = 11:18)\n\n\nTest of Moderators (coefficients 11:15):\nQM(df = 5) = 4.2886, p-val = 0.5087\n\n\nDesign groups\n\nprod31 = prod3 %&gt;% \n  group_by(ensaio_1) %&gt;% \n  summarise(produto = paste(produto, collapse=';')) \n\nprod31 %&gt;% \n  tabyl(produto)\n\n                                                                                                                  produto\n              AACHECK;ABACUS HC (Controle Positivo);BELYAN  (Controle Positivo);FOX XPRO;OSKESTRA SC;PREVINIL;trat_A20259\n               AACHECK;ABACUS HC (Controle Positivo);BELYAN  (Controle Positivo);FOX XPRO;OSKESTRA SC;trat_A20259;TRIDIUM\n AACHECK;ABACUS HC (Controle Positivo);FOX XPRO;OSKESTRA SC;PREVINIL;TRIDIUM;UNIZEB GOLD (Controle Positivo, multissítio)\n                           AACHECK;ABACUS HC (Controle Positivo);OSKESTRA SC;UNIZEB GOLD (Controle Positivo, multissítio)\n                                                                                      AACHECK;BELYAN  (Controle Positivo)\n  n    percent\n  4 0.12903226\n 16 0.51612903\n  3 0.09677419\n  6 0.19354839\n  2 0.06451613\n\n\n#d1\n\nprod3 &lt;- prod3 %&gt;%\n  group_by(ensaio_1) %&gt;% \n  mutate(n2 = n()) %&gt;% \n  filter(n2 != 1)\n\ndesign1 = prod3 %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"BELYAN  (Controle Positivo)\", \"FOX XPRO\", \"OSKESTRA SC\", \"PREVINIL\", \"trat_A20259\" )) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(1, length(produto))) %&gt;% \n  filter(n2 == 7) %&gt;% \n  filter(n3 == 7)\ndesign1\n\n# A tibble: 28 × 14\n# Groups:   ensaio_1 [4]\n   municipio  regiao ensaio_1 produto        ano mean_prod mean_V mean_sev     n\n   &lt;chr&gt;      &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;        &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt; &lt;int&gt;\n 1 Cafelândia Sul    22       AACHECK       2018     8442. 2.67e5    21.6      4\n 2 Cafelândia Sul    22       ABACUS HC (…  2018     8700. 2.67e5    10.8      4\n 3 Cafelândia Sul    22       BELYAN  (Co…  2018     9693. 2.67e5     5.72     4\n 4 Cafelândia Sul    22       FOX XPRO      2018     9128. 2.67e5     9.5      4\n 5 Cafelândia Sul    22       OSKESTRA SC   2018     8799. 2.67e5     8.75     4\n 6 Cafelândia Sul    22       PREVINIL      2018     9136. 2.67e5     9.02     4\n 7 Cafelândia Sul    22       trat_A20259   2018     9166. 2.67e5     8.1      4\n 8 Cafelândia Sul    23       AACHECK       2018     6129. 1.46e5     5.55     4\n 9 Cafelândia Sul    23       ABACUS HC (…  2018     6697. 1.46e5     1.52     4\n10 Cafelândia Sul    23       BELYAN  (Co…  2018     6443. 1.46e5     0.6      4\n# ℹ 18 more rows\n# ℹ 5 more variables: vi_yld &lt;dbl&gt;, sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;,\n#   design &lt;dbl&gt;\n\n\n#D2\n\ndesign2 = prod3 %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"BELYAN  (Controle Positivo)\", \"FOX XPRO\", \"OSKESTRA SC\", \"TRIDIUM\", \"trat_A20259\" )) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(2, length(produto))) %&gt;% \n  filter(n2 == 7) %&gt;% \n  filter(n3 == 7)\ndesign2\n\n# A tibble: 112 × 14\n# Groups:   ensaio_1 [16]\n   municipio regiao       ensaio_1 produto   ano mean_prod mean_V mean_sev     n\n   &lt;chr&gt;     &lt;chr&gt;        &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt; &lt;int&gt;\n 1 Anápolis  Centro-Oeste 48       AACHECK  2020     6136. 1.62e5   33.2       4\n 2 Anápolis  Centro-Oeste 48       ABACUS…  2020     7824  1.62e5   12.2       4\n 3 Anápolis  Centro-Oeste 48       BELYAN…  2020     7844. 1.62e5   12         4\n 4 Anápolis  Centro-Oeste 48       FOX XP…  2020     8050  1.62e5   11.2       4\n 5 Anápolis  Centro-Oeste 48       OSKEST…  2020     8074  1.62e5   11         4\n 6 Anápolis  Centro-Oeste 48       trat_A…  2020     8020. 1.62e5   11.8       4\n 7 Anápolis  Centro-Oeste 48       TRIDIUM  2020     7408  1.62e5   14         4\n 8 Arapongas Sul          27       AACHECK  2019     5959. 2.84e5    4.85      4\n 9 Arapongas Sul          27       ABACUS…  2019     6633. 2.84e5    0.875     4\n10 Arapongas Sul          27       BELYAN…  2019     7048. 2.84e5    0.35      4\n# ℹ 102 more rows\n# ℹ 5 more variables: vi_yld &lt;dbl&gt;, sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;,\n#   design &lt;dbl&gt;\n\n\n#D3\n\ndesign3 = prod3 %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\",  \"FOX XPRO\", \"OSKESTRA SC\", \"PREVINIL\", \"TRIDIUM\", \"UNIZEB GOLD (Controle Positivo, multissítio)\" )) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(3, length(produto))) %&gt;% \n  filter(n2 == 7) %&gt;% \n  filter(n3 == 7)\ndesign3\n\n# A tibble: 21 × 14\n# Groups:   ensaio_1 [3]\n   municipio       regiao ensaio_1 produto   ano mean_prod mean_V mean_sev     n\n   &lt;chr&gt;           &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt; &lt;int&gt;\n 1 Capão Bonito    Sudes… 67       AACHECK  2023     5360. 2.09e5    12.0      4\n 2 Capão Bonito    Sudes… 67       ABACUS…  2023     6330. 2.09e5     7.45     4\n 3 Capão Bonito    Sudes… 67       FOX XP…  2023     7082. 2.09e5     4.65     4\n 4 Capão Bonito    Sudes… 67       OSKEST…  2023     6442. 2.09e5     4.65     4\n 5 Capão Bonito    Sudes… 67       PREVIN…  2023     6384. 2.09e5     5.1      4\n 6 Capão Bonito    Sudes… 67       TRIDIUM  2023     6477. 2.09e5     6.2      4\n 7 Capão Bonito    Sudes… 67       UNIZEB…  2023     6647. 2.09e5     7.4      4\n 8 Patrocínio Pau… Sudes… 68       AACHECK  2023     5490  2.45e4    29.3      4\n 9 Patrocínio Pau… Sudes… 68       ABACUS…  2023     6368. 2.45e4    18.5      4\n10 Patrocínio Pau… Sudes… 68       FOX XP…  2023     7256. 2.45e4    14.4      4\n# ℹ 11 more rows\n# ℹ 5 more variables: vi_yld &lt;dbl&gt;, sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;,\n#   design &lt;dbl&gt;\n\n\n#D4\n\ndesign4 = prod3 %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"OSKESTRA SC\",  \"UNIZEB GOLD (Controle Positivo, multissítio)\" )) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(4, length(produto))) %&gt;% \n  filter(n2 == 4) %&gt;% \n  filter(n3 == 4)\ndesign4\n\n# A tibble: 24 × 14\n# Groups:   ensaio_1 [6]\n   municipio    regiao ensaio_1 produto      ano mean_prod mean_V mean_sev     n\n   &lt;chr&gt;        &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;      &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt; &lt;int&gt;\n 1 Campo Mourão Sul    82       AACHECK     2017     5701. 2.11e5     30       3\n 2 Campo Mourão Sul    82       ABACUS HC…  2017     7053. 2.11e5     20       3\n 3 Campo Mourão Sul    82       OSKESTRA …  2017     8018. 2.11e5     17.7     3\n 4 Campo Mourão Sul    82       UNIZEB GO…  2017     6692. 2.11e5     26.7     3\n 5 Campo Mourão Sul    83       AACHECK     2017     4948. 7.00e5     30.3     3\n 6 Campo Mourão Sul    83       ABACUS HC…  2017     5774. 7.00e5     10       3\n 7 Campo Mourão Sul    83       OSKESTRA …  2017     4872. 7.00e5      8       3\n 8 Campo Mourão Sul    83       UNIZEB GO…  2017     4400. 7.00e5     19       3\n 9 Campo Mourão Sul    86       AACHECK     2016     6037. 1.22e5     25       3\n10 Campo Mourão Sul    86       ABACUS HC…  2016     6612. 1.22e5      4       3\n# ℹ 14 more rows\n# ℹ 5 more variables: vi_yld &lt;dbl&gt;, sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;,\n#   design &lt;dbl&gt;\n\n\n#D5\n\ndesign5 = prod3 %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"BELYAN  (Controle Positivo)\")) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(5, length(produto))) %&gt;% \n  filter(n2 == 2) %&gt;% \n  filter(n3 == 2)\ndesign4\n\n# A tibble: 24 × 14\n# Groups:   ensaio_1 [6]\n   municipio    regiao ensaio_1 produto      ano mean_prod mean_V mean_sev     n\n   &lt;chr&gt;        &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;      &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt; &lt;int&gt;\n 1 Campo Mourão Sul    82       AACHECK     2017     5701. 2.11e5     30       3\n 2 Campo Mourão Sul    82       ABACUS HC…  2017     7053. 2.11e5     20       3\n 3 Campo Mourão Sul    82       OSKESTRA …  2017     8018. 2.11e5     17.7     3\n 4 Campo Mourão Sul    82       UNIZEB GO…  2017     6692. 2.11e5     26.7     3\n 5 Campo Mourão Sul    83       AACHECK     2017     4948. 7.00e5     30.3     3\n 6 Campo Mourão Sul    83       ABACUS HC…  2017     5774. 7.00e5     10       3\n 7 Campo Mourão Sul    83       OSKESTRA …  2017     4872. 7.00e5      8       3\n 8 Campo Mourão Sul    83       UNIZEB GO…  2017     4400. 7.00e5     19       3\n 9 Campo Mourão Sul    86       AACHECK     2016     6037. 1.22e5     25       3\n10 Campo Mourão Sul    86       ABACUS HC…  2016     6612. 1.22e5      4       3\n# ℹ 14 more rows\n# ℹ 5 more variables: vi_yld &lt;dbl&gt;, sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;,\n#   design &lt;dbl&gt;\n\n\n#joining the designers\n\nyld_design = rbind(design1, design2, design3, design4, design5)\n\n\nyld_design %&gt;% \n  group_by(ensaio_1,design) %&gt;% \n  summarize() %&gt;% \n  tabyl(design)\n\n design  n    percent\n      1  4 0.12903226\n      2 16 0.51612903\n      3  3 0.09677419\n      4  6 0.19354839\n      5  2 0.06451613\n\n\nInconsistency\n\nmv_yld_design &lt;- rma.mv(mean_prod,\n  vi_yld,\n  mods = ~ produto * design,\n  random = list(~ 1 | ensaio_1 / design / produto),\n  struct = \"UN\",\n  method = \"ML\",\n  control = list(optimizer = \"nlm\"),\n  data = yld_design)\n\nmv_yld_design\n\n\nMultivariate Meta-Analysis Model (k = 189; method: ML)\n\nVariance Components:\n\n                  estim       sqrt  nlvls  fixed                   factor \nsigma^2.1  1162023.9402  1077.9721     31     no                 ensaio_1 \nsigma^2.2  1162023.9430  1077.9721     31     no          ensaio_1/design \nsigma^2.3    79415.6562   281.8078    189     no  ensaio_1/design/produto \n\nTest for Residual Heterogeneity:\nQE(df = 171) = 8866.9067, p-val &lt; .0001\n\nTest of Moderators (coefficients 2:18):\nQM(df = 17) = 191.8240, p-val &lt; .0001\n\nModel Results:\n\n                                                             estimate \nintrcpt                                                     8676.6757 \nprodutoABACUS HC (Controle Positivo)                         593.9737 \nprodutoBELYAN  (Controle Positivo)                           703.7115 \nprodutoFOX XPRO                                              483.3756 \nprodutoOSKESTRA SC                                           406.1211 \nprodutoPREVINIL                                              343.9575 \nprodutotrat_A20259                                          1049.9743 \nprodutoTRIDIUM                                              -559.7904 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)         2106.8579 \ndesign                                                      -857.1270 \nprodutoABACUS HC (Controle Positivo):design                   49.1625 \nprodutoBELYAN  (Controle Positivo):design                    137.1546 \nprodutoFOX XPRO:design                                       246.2493 \nprodutoOSKESTRA SC:design                                    210.6499 \nprodutoPREVINIL:design                                       180.6118 \nprodutotrat_A20259:design                                    -41.8523 \nprodutoTRIDIUM:design                                        630.7642 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):design  -376.0244 \n                                                                   se     zval \nintrcpt                                                      695.7311  12.4713 \nprodutoABACUS HC (Controle Positivo)                         268.9204   2.2087 \nprodutoBELYAN  (Controle Positivo)                           253.2115   2.7791 \nprodutoFOX XPRO                                              362.9555   1.3318 \nprodutoOSKESTRA SC                                           268.9204   1.5102 \nprodutoPREVINIL                                              386.8287   0.8892 \nprodutotrat_A20259                                           483.0808   2.1735 \nprodutoTRIDIUM                                               555.3254  -1.0080 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)         1022.8754   2.0597 \ndesign                                                       249.1597  -3.4401 \nprodutoABACUS HC (Controle Positivo):design                  102.7687   0.4784 \nprodutoBELYAN  (Controle Positivo):design                    101.9846   1.3449 \nprodutoFOX XPRO:design                                       166.7015   1.4772 \nprodutoOSKESTRA SC:design                                    102.7687   2.0497 \nprodutoPREVINIL:design                                       166.6902   1.0835 \nprodutotrat_A20259:design                                    251.9595  -0.1661 \nprodutoTRIDIUM:design                                        245.7871   2.5663 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):design   284.9971  -1.3194 \n                                                              pval       ci.lb \nintrcpt                                                     &lt;.0001   7313.0677 \nprodutoABACUS HC (Controle Positivo)                        0.0272     66.8994 \nprodutoBELYAN  (Controle Positivo)                          0.0055    207.4260 \nprodutoFOX XPRO                                             0.1829   -228.0041 \nprodutoOSKESTRA SC                                          0.1310   -120.9532 \nprodutoPREVINIL                                             0.3739   -414.2127 \nprodutotrat_A20259                                          0.0297    103.1532 \nprodutoTRIDIUM                                              0.3134  -1648.2082 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)         0.0394    102.0590 \ndesign                                                      0.0006  -1345.4711 \nprodutoABACUS HC (Controle Positivo):design                 0.6324   -152.2605 \nprodutoBELYAN  (Controle Positivo):design                   0.1787    -62.7315 \nprodutoFOX XPRO:design                                      0.1396    -80.4797 \nprodutoOSKESTRA SC:design                                   0.0404      9.2269 \nprodutoPREVINIL:design                                      0.2786   -146.0949 \nprodutotrat_A20259:design                                   0.8681   -535.6839 \nprodutoTRIDIUM:design                                       0.0103    149.0303 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):design  0.1870   -934.6085 \n                                                                 ci.ub      \nintrcpt                                                     10040.2836  *** \nprodutoABACUS HC (Controle Positivo)                         1121.0480    * \nprodutoBELYAN  (Controle Positivo)                           1199.9969   ** \nprodutoFOX XPRO                                              1194.7553      \nprodutoOSKESTRA SC                                            933.1955      \nprodutoPREVINIL                                              1102.1278      \nprodutotrat_A20259                                           1996.7953    * \nprodutoTRIDIUM                                                528.6273      \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)          4111.6568    * \ndesign                                                       -368.7830  *** \nprodutoABACUS HC (Controle Positivo):design                   250.5855      \nprodutoBELYAN  (Controle Positivo):design                     337.0407      \nprodutoFOX XPRO:design                                        572.9783      \nprodutoOSKESTRA SC:design                                     412.0729    * \nprodutoPREVINIL:design                                        507.3186      \nprodutotrat_A20259:design                                     451.9793      \nprodutoTRIDIUM:design                                        1112.4980    * \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):design    182.5596      \n\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nanova(mv_yld_design, btt = 11:18)\n\n\nTest of Moderators (coefficients 11:18):\nQM(df = 8) = 13.1680, p-val = 0.1062"
  },
  {
    "objectID": "yld.html#packages",
    "href": "yld.html#packages",
    "title": "Meta-analysis for the variable yield",
    "section": "",
    "text": "library(gsheet)\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(multcomp)\nlibrary(metafor)\nlibrary(tidyr)\nlibrary(emmeans)"
  },
  {
    "objectID": "yld.html#import-the-data",
    "href": "yld.html#import-the-data",
    "title": "Meta-analysis for the variable yield",
    "section": "",
    "text": "dat1 = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1joo0WaR7yNWZavGPbwQMjiFPpWHErtGL/edit?gid=1485993259#gid=1485993259\")\n\ndat1$bloco = as.factor(dat1$bloco)   # Block as a factor  \ndat1$produto = as.factor(dat1$produto)   # fungicide as a factor  \ndat1$ensaio_1 = as.factor(dat1$ensaio_1)\n\n\nprod &lt;- dat1 %&gt;% filter(!is.na(mean_prod))\n\nprod &lt;- dat1 %&gt;%\n  filter(!is.na(mean_prod)) %&gt;%\n  group_by(ensaio_1) %&gt;%\n  mutate(num_produtos = n()) %&gt;%\n  ungroup()\n\ntotal_ensaios &lt;- prod %&gt;%\n  summarise(total = n_distinct(ensaio_1))\n\n\ncontagem_por_produto &lt;- prod %&gt;%\n  group_by(produto) %&gt;%\n  summarise(\n    total_ensaios = n_distinct(ensaio_1),  # Count unique trials\n    total_anos = n_distinct(ano),         # Count unique years\n    anos = paste(sort(unique(ano)), collapse = \", \"), # List sorted years\n    ensaios = paste(sort(unique(ensaio_1)), collapse = \", \"), # List unique trials\n    .groups = \"drop\"\n  )\naacheck= prod |&gt;  filter(produto == \"AACHECK\")\nsummary(aacheck)\n\n  municipio         bloco     ensaio_1                           produto   \n Length:118         1:31   11     : 4   AACHECK                      :118  \n Class :character   2:31   12     : 4   ABACUS HC (Controle Positivo):  0  \n Mode  :character   3:31   21     : 4   BELYAN  (Controle Positivo)  :  0  \n                    4:25   22     : 4   FOX XPRO                     :  0  \n                           23     : 4   OSKESTRA SC                  :  0  \n                           24     : 4   PREVINIL                     :  0  \n                           (Other):94   (Other)                      :  0  \n      ano          estado             regiao             mean_sev    \n Min.   :2016   Length:118         Length:118         Min.   : 0.80  \n 1st Qu.:2018   Class :character   Class :character   1st Qu.: 6.00  \n Median :2020   Mode  :character   Mode  :character   Median :19.00  \n Mean   :2020                                         Mean   :21.47  \n 3rd Qu.:2020                                         3rd Qu.:30.23  \n Max.   :2023                                         Max.   :75.00  \n                                                                     \n   mean_prod      num_produtos \n Min.   : 3414   Min.   : 8.0  \n 1st Qu.: 5062   1st Qu.:28.0  \n Median : 6124   Median :28.0  \n Mean   : 6536   Mean   :24.2  \n 3rd Qu.: 7729   3rd Qu.:28.0  \n Max.   :12361   Max.   :28.0  \n                               \n\n#mediana 19"
  },
  {
    "objectID": "yld.html#anova-for-each-trialstudy",
    "href": "yld.html#anova-for-each-trialstudy",
    "title": "Meta-analysis for the variable yield",
    "section": "",
    "text": "#ANOVA\nprod2 &lt;- prod %&gt;%\n  filter(mean_prod != \"NA\") |&gt; \n  group_by(ensaio_1) %&gt;%\n  dplyr::select(ensaio_1, produto, bloco, mean_prod) %&gt;% # Ensure grouping column is selected\n  nest(data = c(produto, bloco, mean_prod)) %&gt;% # Nest data by group\n  dplyr::mutate(\n    aov_results = map(data, ~ tidy(aov(mean_prod ~ produto + bloco, data = .x)))\n  ) %&gt;%\n  unnest(aov_results) %&gt;%\n  filter(term == \"Residuals\") |&gt; \n  dplyr::select(1,6)"
  },
  {
    "objectID": "yld.html#calculating-the-mean-and-adjusted-variance",
    "href": "yld.html#calculating-the-mean-and-adjusted-variance",
    "title": "Meta-analysis for the variable yield",
    "section": "",
    "text": "#First: Merge the Original Spreadsheet (dat1) with the Spreadsheet Containing the ANOVA Results;\nprod3 &lt;- left_join(prod, prod2) |&gt; \n group_by(municipio,regiao, ensaio_1, produto, ano) %&gt;% \n  summarise(mean_prod = mean(mean_prod),\n            mean_V = mean(meansq),\n            mean_sev = mean(mean_sev),\n            n = n())\n\n#Calculating adjusted variance of severity\n\nprod3$vi_yld &lt;- with(prod3, mean_V/4)"
  },
  {
    "objectID": "yld.html#meta-analysis",
    "href": "yld.html#meta-analysis",
    "title": "Meta-analysis for the variable yield",
    "section": "",
    "text": "net_arm_UN_prod &lt;- rma.mv(\n  mean_prod,\n  vi_yld,\n   mods = ~ produto,\n   method = \"ML\",\n  random = list( ~ produto | factor(ensaio_1)),\n   struct = \"HCS\",\n  control = list(optimizer = \"nlm\", verbose = TRUE),\n   data = prod3)\n\n\nVariance Components in Model:\n\n          sigma2       tau21       tau22       tau23       tau24       tau25 \nincluded      No         Yes         Yes         Yes         Yes         Yes \nfixed        ---       FALSE       FALSE       FALSE       FALSE       FALSE \ninitial      --- 290480.0281 290480.0281 290480.0281 290480.0281 290480.0281 \nspecified    ---         ---         ---         ---         ---         --- \n                tau26       tau27       tau28       tau29   rho gamma2 phi \nincluded          Yes         Yes         Yes         Yes   Yes     No  No \nfixed           FALSE       FALSE       FALSE       FALSE FALSE    --- --- \ninitial   290480.0281 290480.0281 290480.0281 290480.0281   0.5    --- --- \nspecified         ---         ---         ---         ---   ---    --- --- \n\nIteration 0     ll = -1669.3677   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 1     ll = -1669.3677   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 2     ll = -1669.3677   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 3     ll = -1669.3673   tau2 = 290483.6821  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 4     ll = -1669.3673   tau2 = 290480.0281  290483.6821  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 5     ll = -1669.3674   tau2 = 290480.0281  290480.0281  290483.6821  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 6     ll = -1669.3673   tau2 = 290480.0281  290480.0281  290480.0281  290483.6821  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 7     ll = -1669.3673   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290483.6821  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 8     ll = -1669.3676   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290483.6821  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 9     ll = -1669.3675   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290483.6821  290480.0281  290480.0281  rho = 0.5000  \nIteration 10    ll = -1669.3676   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290483.6821  290480.0281  rho = 0.5000  \nIteration 11    ll = -1669.3676   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290483.6821  rho = 0.5000  \nIteration 12    ll = -1669.3675   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 13    ll = -1669.3677   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 14    ll = -1669.3677   tau2 = 290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  290480.0281  rho = 0.5000  \nIteration 15    ll =  -Inf   tau2 = 3014356512356146610246.0000  10502428825806919680.0000  10038002650921118.0000  120240161666010202112.0000  96923446079555092480.0000  77490412.6922  19783025232942.1797  128187006193.4250  13933949215.0546  rho = 1.0000  \nIteration 16    ll = -2243.5029   tau2 = 11607110.3048  6590731.5838  3288284.4648  8410263.5474  8230903.9696  507842.9729  1763737.3853  1065587.3362  853516.7971  rho = 1.0000  \nIteration 17    ll = -1833.2046   tau2 = 1809583.5577  1366647.7904  967988.2964  1542323.1547  1525918.7603  383232.4166  710679.1256  553500.0174  495804.8305  rho = 1.0000  \nIteration 18    ll = -1696.5590   tau2 = 605297.6525  540799.5354  470891.0068  567694.1327  565263.0242  324650.7482  415969.4307  376264.4151  360003.0168  rho = 1.0000  \nIteration 19    ll = -1655.3156   tau2 = 398477.6925  379607.8403  357644.2048  387624.0588  386908.4549  304728.2815  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 20    ll = -1655.3156   tau2 = 398477.6925  379607.8403  357644.2048  387624.0588  386908.4549  304728.2815  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 21    ll = -1655.3159   tau2 = 398482.8311  379607.8403  357644.2048  387624.0588  386908.4549  304728.2815  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 22    ll = -1655.3152   tau2 = 398477.6925  379612.7171  357644.2048  387624.0588  386908.4549  304728.2815  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 23    ll = -1655.3154   tau2 = 398477.6925  379607.8403  357648.7782  387624.0588  386908.4549  304728.2815  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 24    ll = -1655.3152   tau2 = 398477.6925  379607.8403  357644.2048  387629.0467  386908.4549  304728.2815  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 25    ll = -1655.3158   tau2 = 398477.6925  379607.8403  357644.2048  387624.0588  386913.4329  304728.2815  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 26    ll = -1655.3154   tau2 = 398477.6925  379607.8403  357644.2048  387624.0588  386908.4549  304732.1294  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 27    ll = -1655.3153   tau2 = 398477.6925  379607.8403  357644.2048  387624.0588  386908.4549  304728.2815  339052.3630  324714.8483  318596.3817  rho = 0.9919  \nIteration 28    ll = -1655.3154   tau2 = 398477.6925  379607.8403  357644.2048  387624.0588  386908.4549  304728.2815  339048.0456  324718.9692  318596.3817  rho = 0.9919  \nIteration 29    ll = -1655.3147   tau2 = 398477.6925  379607.8403  357644.2048  387624.0588  386908.4549  304728.2815  339048.0456  324714.8483  318600.4189  rho = 0.9919  \nIteration 30    ll = -1655.3157   tau2 = 398477.6925  379607.8403  357644.2048  387624.0588  386908.4549  304728.2815  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 31    ll = -1655.3156   tau2 = 398477.6925  379607.8403  357644.2048  387624.0588  386908.4549  304728.2815  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 32    ll = -1655.3156   tau2 = 398477.6925  379607.8403  357644.2048  387624.0588  386908.4549  304728.2815  339048.0456  324714.8483  318596.3817  rho = 0.9919  \nIteration 33    ll = -1621.0214   tau2 = 336538.7657  468188.4625  398194.4649  470514.9209  342902.4125  329620.9791  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 34    ll = -1621.0214   tau2 = 336538.7657  468188.4625  398194.4649  470514.9209  342902.4125  329620.9791  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 35    ll = -1621.0207   tau2 = 336543.0487  468188.4625  398194.4649  470514.9209  342902.4125  329620.9791  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 36    ll = -1621.0218   tau2 = 336538.7657  468194.5755  398194.4649  470514.9209  342902.4125  329620.9791  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 37    ll = -1621.0214   tau2 = 336538.7657  468188.4625  398199.5995  470514.9209  342902.4125  329620.9791  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 38    ll = -1621.0215   tau2 = 336538.7657  468188.4625  398194.4649  470521.0666  342902.4125  329620.9791  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 39    ll = -1621.0209   tau2 = 336538.7657  468188.4625  398194.4649  470514.9209  342906.7829  329620.9791  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 40    ll = -1621.0213   tau2 = 336538.7657  468188.4625  398194.4649  470514.9209  342902.4125  329625.1672  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 41    ll = -1621.0213   tau2 = 336538.7657  468188.4625  398194.4649  470514.9209  342902.4125  329620.9791  384523.4731  352411.5416  493642.0405  rho = 0.9883  \nIteration 42    ll = -1621.0213   tau2 = 336538.7657  468188.4625  398194.4649  470514.9209  342902.4125  329620.9791  384518.5282  352416.0428  493642.0405  rho = 0.9883  \nIteration 43    ll = -1621.0210   tau2 = 336538.7657  468188.4625  398194.4649  470514.9209  342902.4125  329620.9791  384518.5282  352411.5416  493648.5120  rho = 0.9883  \nIteration 44    ll = -1621.0216   tau2 = 336538.7657  468188.4625  398194.4649  470514.9209  342902.4125  329620.9791  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 45    ll = -1621.0214   tau2 = 336538.7657  468188.4625  398194.4649  470514.9209  342902.4125  329620.9791  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 46    ll = -1621.0214   tau2 = 336538.7657  468188.4625  398194.4649  470514.9209  342902.4125  329620.9791  384518.5282  352411.5416  493642.0405  rho = 0.9883  \nIteration 47    ll = -1555.5223   tau2 = 423523.5374  462439.7631  465432.1681  551756.5575  414058.9254  394859.8880  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 48    ll = -1555.5223   tau2 = 423523.5374  462439.7631  465432.1681  551756.5575  414058.9254  394859.8880  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 49    ll = -1555.5218   tau2 = 423529.0247  462439.7631  465432.1681  551756.5575  414058.9254  394859.8880  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 50    ll = -1555.5220   tau2 = 423523.5374  462445.7953  465432.1681  551756.5575  414058.9254  394859.8880  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 51    ll = -1555.5223   tau2 = 423523.5374  462439.7631  465438.2424  551756.5575  414058.9254  394859.8880  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 52    ll = -1555.5224   tau2 = 423523.5374  462439.7631  465432.1681  551763.8523  414058.9254  394859.8880  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 53    ll = -1555.5218   tau2 = 423523.5374  462439.7631  465432.1681  551756.5575  414064.2808  394859.8880  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 54    ll = -1555.5222   tau2 = 423523.5374  462439.7631  465432.1681  551756.5575  414058.9254  394864.9763  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 55    ll = -1555.5224   tau2 = 423523.5374  462439.7631  465432.1681  551756.5575  414058.9254  394859.8880  468761.6329  420619.3654  1110378.9104  rho = 0.9571  \nIteration 56    ll = -1555.5222   tau2 = 423523.5374  462439.7631  465432.1681  551756.5575  414058.9254  394859.8880  468755.5119  420624.8122  1110378.9104  rho = 0.9571  \nIteration 57    ll = -1555.5224   tau2 = 423523.5374  462439.7631  465432.1681  551756.5575  414058.9254  394859.8880  468755.5119  420619.3654  1110394.3672  rho = 0.9571  \nIteration 58    ll = -1555.5224   tau2 = 423523.5374  462439.7631  465432.1681  551756.5575  414058.9254  394859.8880  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 59    ll = -1555.5223   tau2 = 423523.5374  462439.7631  465432.1681  551756.5575  414058.9254  394859.8880  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 60    ll = -1555.5223   tau2 = 423523.5374  462439.7631  465432.1681  551756.5575  414058.9254  394859.8880  468755.5119  420619.3654  1110378.9104  rho = 0.9571  \nIteration 61    ll =  -Inf   tau2 = 939394.4610  901450.6786  750299.7164  833484.2509  933910.5091  668208.8206  750388.2782  734102.5099  6693097.0246  rho =-0.3939  \nIteration 62    ll = -1537.5476   tau2 = 458642.8164  494360.5993  488196.0202  574992.9143  449144.8888  416188.3667  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 63    ll = -1537.5476   tau2 = 458642.8164  494360.5993  488196.0202  574992.9143  449144.8888  416188.3667  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 64    ll = -1537.5472   tau2 = 458648.7954  494360.5993  488196.0202  574992.9143  449144.8888  416188.3667  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 65    ll = -1537.5473   tau2 = 458642.8164  494367.0809  488196.0202  574992.9143  449144.8888  416188.3667  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 66    ll = -1537.5475   tau2 = 458642.8164  494360.5993  488202.4148  574992.9143  449144.8888  416188.3667  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 67    ll = -1537.5476   tau2 = 458642.8164  494360.5993  488196.0202  575000.5399  449144.8888  416188.3667  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 68    ll = -1537.5471   tau2 = 458642.8164  494360.5993  488196.0202  574992.9143  449150.7345  416188.3667  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 69    ll = -1537.5475   tau2 = 458642.8164  494360.5993  488196.0202  574992.9143  449144.8888  416193.7517  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 70    ll = -1537.5476   tau2 = 458642.8164  494360.5993  488196.0202  574992.9143  449144.8888  416188.3667  491344.4380  444709.0917  1328883.1546  rho = 0.9326  \nIteration 71    ll = -1537.5475   tau2 = 458642.8164  494360.5993  488196.0202  574992.9143  449144.8888  416188.3667  491337.9990  444714.8753  1328883.1546  rho = 0.9326  \nIteration 72    ll = -1537.5477   tau2 = 458642.8164  494360.5993  488196.0202  574992.9143  449144.8888  416188.3667  491337.9990  444709.0917  1328901.8918  rho = 0.9326  \nIteration 73    ll = -1537.5477   tau2 = 458642.8164  494360.5993  488196.0202  574992.9143  449144.8888  416188.3667  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 74    ll = -1537.5476   tau2 = 458642.8164  494360.5993  488196.0202  574992.9143  449144.8888  416188.3667  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 75    ll = -1537.5476   tau2 = 458642.8164  494360.5993  488196.0202  574992.9143  449144.8888  416188.3667  491337.9990  444709.0917  1328883.1546  rho = 0.9326  \nIteration 76    ll = -1529.2643   tau2 = 664212.5965  649477.5515  667954.0929  788615.2676  674183.0097  530329.8026  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 77    ll = -1529.2643   tau2 = 664212.5965  649477.5515  667954.0929  788615.2676  674183.0097  530329.8026  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 78    ll = -1529.2642   tau2 = 664221.5012  649477.5515  667954.0929  788615.2676  674183.0097  530329.8026  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 79    ll = -1529.2642   tau2 = 664212.5965  649486.2441  667954.0929  788615.2676  674183.0097  530329.8026  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 80    ll = -1529.2643   tau2 = 664212.5965  649477.5515  667963.0515  788615.2676  674183.0097  530329.8026  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 81    ll = -1529.2643   tau2 = 664212.5965  649477.5515  667954.0929  788625.9755  674183.0097  530329.8026  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 82    ll = -1529.2642   tau2 = 664212.5965  649477.5515  667954.0929  788615.2676  674192.0581  530329.8026  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 83    ll = -1529.2643   tau2 = 664212.5965  649477.5515  667954.0929  788615.2676  674183.0097  530336.7930  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 84    ll = -1529.2643   tau2 = 664212.5965  649477.5515  667954.0929  788615.2676  674183.0097  530329.8026  652905.9211  607286.8611  2582963.7087  rho = 0.7005  \nIteration 85    ll = -1529.2643   tau2 = 664212.5965  649477.5515  667954.0929  788615.2676  674183.0097  530329.8026  652897.1793  607294.9482  2582963.7087  rho = 0.7005  \nIteration 86    ll = -1529.2644   tau2 = 664212.5965  649477.5515  667954.0929  788615.2676  674183.0097  530329.8026  652897.1793  607286.8611  2583001.8450  rho = 0.7005  \nIteration 87    ll = -1529.2643   tau2 = 664212.5965  649477.5515  667954.0929  788615.2676  674183.0097  530329.8026  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 88    ll = -1529.2643   tau2 = 664212.5965  649477.5515  667954.0929  788615.2676  674183.0097  530329.8026  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 89    ll = -1529.2643   tau2 = 664212.5965  649477.5515  667954.0929  788615.2676  674183.0097  530329.8026  652897.1793  607286.8611  2582963.7087  rho = 0.7005  \nIteration 90    ll = -1505.7193   tau2 = 671381.5588  688985.6347  639789.6305  732606.1961  677934.7796  514989.7363  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 91    ll = -1505.7193   tau2 = 671381.5588  688985.6347  639789.6305  732606.1961  677934.7796  514989.7363  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 92    ll = -1505.7192   tau2 = 671390.5668  688985.6347  639789.6305  732606.1961  677934.7796  514989.7363  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 93    ll = -1505.7192   tau2 = 671381.5588  688994.8967  639789.6305  732606.1961  677934.7796  514989.7363  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 94    ll = -1505.7192   tau2 = 671381.5588  688985.6347  639798.1838  732606.1961  677934.7796  514989.7363  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 95    ll = -1505.7192   tau2 = 671381.5588  688985.6347  639789.6305  732616.0895  677934.7796  514989.7363  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 96    ll = -1505.7192   tau2 = 671381.5588  688985.6347  639789.6305  732606.1961  677943.8821  514989.7363  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 97    ll = -1505.7192   tau2 = 671381.5588  688985.6347  639789.6305  732606.1961  677934.7796  514996.5095  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 98    ll = -1505.7192   tau2 = 671381.5588  688985.6347  639789.6305  732606.1961  677934.7796  514989.7363  618011.6722  585576.3404  2100216.9532  rho = 0.8715  \nIteration 99    ll = -1505.7192   tau2 = 671381.5588  688985.6347  639789.6305  732606.1961  677934.7796  514989.7363  618003.4315  585584.1171  2100216.9532  rho = 0.8715  \nIteration 100   ll = -1505.7194   tau2 = 671381.5588  688985.6347  639789.6305  732606.1961  677934.7796  514989.7363  618003.4315  585576.3404  2100247.5274  rho = 0.8715  \nIteration 101   ll = -1505.7193   tau2 = 671381.5588  688985.6347  639789.6305  732606.1961  677934.7796  514989.7363  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 102   ll = -1505.7193   tau2 = 671381.5588  688985.6347  639789.6305  732606.1961  677934.7796  514989.7363  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 103   ll = -1505.7193   tau2 = 671381.5588  688985.6347  639789.6305  732606.1961  677934.7796  514989.7363  618003.4315  585576.3404  2100216.9532  rho = 0.8715  \nIteration 104   ll = -1497.0682   tau2 = 789051.8641  796916.9055  724363.3243  815177.4100  790134.0147  572200.0655  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 105   ll = -1497.0682   tau2 = 789051.8641  796916.9055  724363.3243  815177.4100  790134.0147  572200.0655  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 106   ll = -1497.0681   tau2 = 789062.5784  796916.9055  724363.3243  815177.4100  790134.0147  572200.0655  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 107   ll = -1497.0681   tau2 = 789051.8641  796927.7345  724363.3243  815177.4100  790134.0147  572200.0655  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 108   ll = -1497.0681   tau2 = 789051.8641  796916.9055  724373.0982  815177.4100  790134.0147  572200.0655  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 109   ll = -1497.0681   tau2 = 789051.8641  796916.9055  724363.3243  815188.5056  790134.0147  572200.0655  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 110   ll = -1497.0681   tau2 = 789051.8641  796916.9055  724363.3243  815177.4100  790144.7448  572200.0655  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 111   ll = -1497.0681   tau2 = 789051.8641  796916.9055  724363.3243  815177.4100  790134.0147  572207.6514  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 112   ll = -1497.0681   tau2 = 789051.8641  796916.9055  724363.3243  815177.4100  790134.0147  572200.0655  695270.0988  669696.4442  2246904.7602  rho = 0.8947  \nIteration 113   ll = -1497.0681   tau2 = 789051.8641  796916.9055  724363.3243  815177.4100  790134.0147  572200.0655  695260.7461  669705.4279  2246904.7602  rho = 0.8947  \nIteration 114   ll = -1497.0683   tau2 = 789051.8641  796916.9055  724363.3243  815177.4100  790134.0147  572200.0655  695260.7461  669696.4442  2246937.6216  rho = 0.8947  \nIteration 115   ll = -1497.0682   tau2 = 789051.8641  796916.9055  724363.3243  815177.4100  790134.0147  572200.0655  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 116   ll = -1497.0682   tau2 = 789051.8641  796916.9055  724363.3243  815177.4100  790134.0147  572200.0655  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 117   ll = -1497.0682   tau2 = 789051.8641  796916.9055  724363.3243  815177.4100  790134.0147  572200.0655  695260.7461  669696.4442  2246904.7602  rho = 0.8947  \nIteration 118   ll = -1476.1105   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386187.4183  1433035.8176  943068.9617  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 119   ll = -1476.1105   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386187.4183  1433035.8176  943068.9617  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 120   ll = -1476.1106   tau2 = 1437113.9849  1344865.3248  1259548.8276  1386187.4183  1433035.8176  943068.9617  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 121   ll = -1476.1105   tau2 = 1437093.6095  1344884.3034  1259548.8276  1386187.4183  1433035.8176  943068.9617  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 122   ll = -1476.1104   tau2 = 1437093.6095  1344865.3248  1259566.5197  1386187.4183  1433035.8176  943068.9617  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 123   ll = -1476.1104   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386207.0220  1433035.8176  943068.9617  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 124   ll = -1476.1106   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386187.4183  1433056.1314  943068.9617  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 125   ll = -1476.1104   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386187.4183  1433035.8176  943081.9355  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 126   ll = -1476.1104   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386187.4183  1433035.8176  943068.9617  1205347.2440  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 127   ll = -1476.1105   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386187.4183  1433035.8176  943068.9617  1205330.3665  1204643.6229  3030865.7614  rho = 0.9382  \nIteration 128   ll = -1476.1106   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386187.4183  1433035.8176  943068.9617  1205330.3665  1204626.7560  3030910.9955  rho = 0.9382  \nIteration 129   ll = -1476.1105   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386187.4183  1433035.8176  943068.9617  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 130   ll = -1476.1105   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386187.4183  1433035.8176  943068.9617  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 131   ll = -1476.1105   tau2 = 1437093.6095  1344865.3248  1259548.8276  1386187.4183  1433035.8176  943068.9617  1205330.3665  1204626.7560  3030865.7614  rho = 0.9382  \nIteration 132   ll = -1469.2346   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045581.9615  2056599.5577  1403914.8960  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 133   ll = -1469.2346   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045581.9615  2056599.5577  1403914.8960  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 134   ll = -1469.2347   tau2 = 2066099.1395  1893105.1958  1853507.0258  2045581.9615  2056599.5577  1403914.8960  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 135   ll = -1469.2345   tau2 = 2066069.0962  1893132.5584  1853507.0258  2045581.9615  2056599.5577  1403914.8960  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 136   ll = -1469.2346   tau2 = 2066069.0962  1893105.1958  1853533.7769  2045581.9615  2056599.5577  1403914.8960  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 137   ll = -1469.2345   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045611.6865  2056599.5577  1403914.8960  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 138   ll = -1469.2347   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045581.9615  2056629.4538  1403914.8960  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 139   ll = -1469.2345   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045581.9615  2056599.5577  1403934.7682  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 140   ll = -1469.2345   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045581.9615  2056599.5577  1403914.8960  1801008.5280  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 141   ll = -1469.2346   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045581.9615  2056599.5577  1403914.8960  1800982.5868  1793521.2418  3642828.7002  rho = 0.9555  \nIteration 142   ll = -1469.2346   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045581.9615  2056599.5577  1403914.8960  1800982.5868  1793495.4158  3642883.7375  rho = 0.9555  \nIteration 143   ll = -1469.2346   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045581.9615  2056599.5577  1403914.8960  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 144   ll = -1469.2346   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045581.9615  2056599.5577  1403914.8960  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 145   ll = -1469.2346   tau2 = 2066069.0962  1893105.1958  1853507.0258  2045581.9615  2056599.5577  1403914.8960  1800982.5868  1793495.4158  3642828.7002  rho = 0.9555  \nIteration 146   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820822.2531  2717082.8553  2029225.0611  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 147   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820822.2531  2717082.8553  2029225.0611  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 148   ll = -1466.5575   tau2 = 2717503.4760  2545789.6894  2535081.5727  2820822.2531  2717082.8553  2029225.0611  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 149   ll = -1466.5573   tau2 = 2717463.2159  2545827.2400  2535081.5727  2820822.2531  2717082.8553  2029225.0611  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 150   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535118.9546  2820822.2531  2717082.8553  2029225.0611  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 151   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820864.1498  2717082.8553  2029225.0611  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 152   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820822.2531  2717123.1093  2029225.0611  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 153   ll = -1466.5573   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820822.2531  2717082.8553  2029254.5321  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 154   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820822.2531  2717082.8553  2029225.0611  2498721.0395  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 155   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820822.2531  2717082.8553  2029225.0611  2498684.2305  2455140.8856  4212526.4304  rho = 0.9668  \nIteration 156   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820822.2531  2717082.8553  2029225.0611  2498684.2305  2455104.7617  4212590.6869  rho = 0.9668  \nIteration 157   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820822.2531  2717082.8553  2029225.0611  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 158   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820822.2531  2717082.8553  2029225.0611  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 159   ll = -1466.5574   tau2 = 2717463.2159  2545789.6894  2535081.5727  2820822.2531  2717082.8553  2029225.0611  2498684.2305  2455104.7617  4212526.4304  rho = 0.9668  \nIteration 160   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252330.9296  3055947.6462  2449778.3876  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 161   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252330.9296  3055947.6462  2449778.3876  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 162   ll = -1466.0574   tau2 = 3040950.3601  2942904.9561  2900867.1772  3252330.9296  3055947.6462  2449778.3876  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 163   ll = -1466.0573   tau2 = 3040904.9661  2942948.7907  2900867.1772  3252330.9296  3055947.6462  2449778.3876  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 164   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900910.3440  3252330.9296  3055947.6462  2449778.3876  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 165   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252379.6983  3055947.6462  2449778.3876  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 166   ll = -1466.0574   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252330.9296  3055993.2798  2449778.3876  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 167   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252330.9296  3055947.6462  2449814.4278  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 168   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252330.9296  3055947.6462  2449778.3876  2867252.6704  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 169   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252330.9296  3055947.6462  2449778.3876  2867210.0380  2794882.1198  4557037.8785  rho = 0.9709  \nIteration 170   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252330.9296  3055947.6462  2449778.3876  2867210.0380  2794840.6349  4557107.7484  rho = 0.9709  \nIteration 171   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252330.9296  3055947.6462  2449778.3876  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 172   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252330.9296  3055947.6462  2449778.3876  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 173   ll = -1466.0573   tau2 = 3040904.9661  2942904.9561  2900867.1772  3252330.9296  3055947.6462  2449778.3876  2867210.0380  2794840.6349  4557037.8785  rho = 0.9709  \nIteration 174   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377306.5493  3144878.0339  2620245.6013  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 175   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377306.5493  3144878.0339  2620245.6013  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 176   ll = -1465.9658   tau2 = 3119993.4900  3080225.3957  2999554.6195  3377306.5493  3144878.0339  2620245.6013  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 177   ll = -1465.9658   tau2 = 3119946.8361  3080271.4162  2999554.6195  3377306.5493  3144878.0339  2620245.6013  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 178   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999599.3551  3377306.5493  3144878.0339  2620245.6013  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 179   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377357.3193  3144878.0339  2620245.6013  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 180   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377306.5493  3144925.0857  2620245.6013  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 181   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377306.5493  3144878.0339  2620284.3256  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 182   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377306.5493  3144878.0339  2620245.6013  2959599.5011  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 183   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377306.5493  3144878.0339  2620245.6013  2959555.4017  2878076.8933  4727253.9446  rho = 0.9719  \nIteration 184   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377306.5493  3144878.0339  2620245.6013  2959555.4017  2878034.0891  4727326.5976  rho = 0.9719  \nIteration 185   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377306.5493  3144878.0339  2620245.6013  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 186   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377306.5493  3144878.0339  2620245.6013  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 187   ll = -1465.9658   tau2 = 3119946.8361  3080225.3957  2999554.6195  3377306.5493  3144878.0339  2620245.6013  2959555.4017  2878034.0891  4727253.9446  rho = 0.9719  \nIteration 188   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383429.8567  3141467.8318  2678548.2930  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 189   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383429.8567  3141467.8318  2678548.2930  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 190   ll = -1465.9317   tau2 = 3112147.9661  3103215.3679  2998116.9710  3383429.8567  3141467.8318  2678548.2930  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 191   ll = -1465.9317   tau2 = 3112101.4373  3103261.7549  2998116.9710  3383429.8567  3141467.8318  2678548.2930  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 192   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998161.6838  3383429.8567  3141467.8318  2678548.2930  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 193   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383480.7249  3141467.8318  2678548.2930  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 194   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383429.8567  3141514.8292  2678548.2930  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 195   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383429.8567  3141467.8318  2678587.9379  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 196   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383429.8567  3141467.8318  2678548.2930  2952592.0697  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 197   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383429.8567  3141467.8318  2678548.2930  2952548.0818  2870123.7007  4826159.6052  rho = 0.9720  \nIteration 198   ll = -1465.9316   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383429.8567  3141467.8318  2678548.2930  2952548.0818  2870081.0227  4826233.8783  rho = 0.9720  \nIteration 199   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383429.8567  3141467.8318  2678548.2930  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 200   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383429.8567  3141467.8318  2678548.2930  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 201   ll = -1465.9317   tau2 = 3112101.4373  3103215.3679  2998116.9710  3383429.8567  3141467.8318  2678548.2930  2952548.0818  2870081.0227  4826159.6052  rho = 0.9720  \nIteration 202   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350364.0943  3111040.7409  2685555.4536  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 203   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350364.0943  3111040.7409  2685555.4536  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 204   ll = -1465.9145   tau2 = 3081436.6436  3078595.3416  2966193.5696  3350364.0943  3111040.7409  2685555.4536  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 205   ll = -1465.9145   tau2 = 3081390.6045  3078641.3361  2966193.5696  3350364.0943  3111040.7409  2685555.4536  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 206   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966237.7745  3350364.0943  3111040.7409  2685555.4536  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 207   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350414.4325  3111040.7409  2685555.4536  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 208   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350364.0943  3111087.2528  2685555.4536  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 209   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350364.0943  3111040.7409  2685595.2092  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 210   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350364.0943  3111040.7409  2685555.4536  2918609.7725  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 211   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350364.0943  3111040.7409  2685555.4536  2918566.3246  2837570.9507  4896685.7326  rho = 0.9720  \nIteration 212   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350364.0943  3111040.7409  2685555.4536  2918566.3246  2837528.7891  4896761.1621  rho = 0.9720  \nIteration 213   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350364.0943  3111040.7409  2685555.4536  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 214   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350364.0943  3111040.7409  2685555.4536  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 215   ll = -1465.9145   tau2 = 3081390.6045  3078595.3416  2966193.5696  3350364.0943  3111040.7409  2685555.4536  2918566.3246  2837528.7891  4896685.7326  rho = 0.9720  \nIteration 216   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329605.6263  3095814.0629  2679919.0393  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 217   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329605.6263  3095814.0629  2679919.0393  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 218   ll = -1465.9063   tau2 = 3068076.7291  3055472.0780  2948231.6163  3329605.6263  3095814.0629  2679919.0393  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 219   ll = -1465.9063   tau2 = 3068030.9029  3055517.7040  2948231.6163  3329605.6263  3095814.0629  2679919.0393  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 220   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948275.5356  3329605.6263  3095814.0629  2679919.0393  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 221   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329655.6319  3095814.0629  2679919.0393  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 222   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329605.6263  3095860.3319  2679919.0393  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 223   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329605.6263  3095814.0629  2679958.7058  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 224   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329605.6263  3095814.0629  2679919.0393  2901760.8121  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 225   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329605.6263  3095814.0629  2679919.0393  2901717.6319  2821442.8303  4955287.4617  rho = 0.9720  \nIteration 226   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329605.6263  3095814.0629  2679919.0393  2901717.6319  2821400.9244  4955363.8528  rho = 0.9720  \nIteration 227   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329605.6263  3095814.0629  2679919.0393  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 228   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329605.6263  3095814.0629  2679919.0393  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 229   ll = -1465.9063   tau2 = 3068030.9029  3055472.0780  2948231.6163  3329605.6263  3095814.0629  2679919.0393  2901717.6319  2821400.9244  4955287.4617  rho = 0.9720  \nIteration 230   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334661.3752  3104969.0636  2682934.0046  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 231   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334661.3752  3104969.0636  2682934.0046  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 232   ll = -1465.9013   tau2 = 3079346.8211  3053150.6554  2954184.2867  3334661.3752  3104969.0636  2682934.0046  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 233   ll = -1465.9013   tau2 = 3079300.8154  3053196.2444  2954184.2867  3334661.3752  3104969.0636  2682934.0046  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 234   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954228.3007  3334661.3752  3104969.0636  2682934.0046  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 235   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334711.4618  3104969.0636  2682934.0046  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 236   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334661.3752  3105015.4786  2682934.0046  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 237   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334661.3752  3104969.0636  2682973.7188  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 238   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334661.3752  3104969.0636  2682934.0046  2909764.3276  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 239   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334661.3752  3104969.0636  2682934.0046  2909721.0202  2828987.0703  5024522.6928  rho = 0.9721  \nIteration 240   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334661.3752  3104969.0636  2682934.0046  2909721.0202  2828945.0448  5024600.2210  rho = 0.9721  \nIteration 241   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334661.3752  3104969.0636  2682934.0046  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 242   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334661.3752  3104969.0636  2682934.0046  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 243   ll = -1465.9013   tau2 = 3079300.8154  3053150.6554  2954184.2867  3334661.3752  3104969.0636  2682934.0046  2909721.0202  2828945.0448  5024522.6928  rho = 0.9721  \nIteration 244   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360225.2305  3131571.9461  2695788.5359  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 245   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360225.2305  3131571.9461  2695788.5359  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 246   ll = -1465.8984   tau2 = 3107074.9043  3072195.8935  2978085.7431  3360225.2305  3131571.9461  2695788.5359  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 247   ll = -1465.8984   tau2 = 3107028.4564  3072241.7860  2978085.7431  3360225.2305  3131571.9461  2695788.5359  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 248   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978130.1371  3360225.2305  3131571.9461  2695788.5359  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 249   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360275.7267  3131571.9461  2695788.5359  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 250   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360225.2305  3131618.7855  2695788.5359  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 251   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360225.2305  3131571.9461  2695828.4533  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 252   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360225.2305  3131571.9461  2695788.5359  2934881.4214  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 253   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360225.2305  3131571.9461  2695788.5359  2934837.7150  2853085.7600  5094110.7842  rho = 0.9724  \nIteration 254   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360225.2305  3131571.9461  2695788.5359  2934837.7150  2853043.3524  5094189.4562  rho = 0.9724  \nIteration 255   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360225.2305  3131571.9461  2695788.5359  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 256   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360225.2305  3131571.9461  2695788.5359  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 257   ll = -1465.8984   tau2 = 3107028.4564  3072195.8935  2978085.7431  3360225.2305  3131571.9461  2695788.5359  2934837.7150  2853043.3524  5094110.7842  rho = 0.9724  \nIteration 258   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385055.6450  3155052.3746  2707643.0458  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 259   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385055.6450  3155052.3746  2707643.0458  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 260   ll = -1465.8973   tau2 = 3130395.1538  3095219.1158  3000413.5848  3385055.6450  3155052.3746  2707643.0458  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 261   ll = -1465.8973   tau2 = 3130348.3339  3095265.3753  3000413.5848  3385055.6450  3155052.3746  2707643.0458  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 262   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000458.3341  3385055.6450  3155052.3746  2707643.0458  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 263   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385106.5393  3155052.3746  2707643.0458  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 264   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385055.6450  3155099.5887  2707643.0458  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 265   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385055.6450  3155052.3746  2707683.1506  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 266   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385055.6450  3155052.3746  2707643.0458  2956967.6044  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 267   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385055.6450  3155052.3746  2707643.0458  2956923.5469  2874574.5887  5138465.5297  rho = 0.9726  \nIteration 268   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385055.6450  3155052.3746  2707643.0458  2956923.5469  2874531.8401  5138544.9313  rho = 0.9726  \nIteration 269   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385055.6450  3155052.3746  2707643.0458  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 270   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385055.6450  3155052.3746  2707643.0458  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 271   ll = -1465.8973   tau2 = 3130348.3339  3095219.1158  3000413.5848  3385055.6450  3155052.3746  2707643.0458  2956923.5469  2874531.8401  5138465.5297  rho = 0.9726  \nIteration 272   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3394999.8549  3163394.3469  2711122.2723  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 273   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3394999.8549  3163394.3469  2711122.2723  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 274   ll = -1465.8970   tau2 = 3138149.8759  3106444.0951  3008946.7312  3394999.8549  3163394.3469  2711122.2723  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 275   ll = -1465.8970   tau2 = 3138102.9323  3106490.5336  3008946.7312  3394999.8549  3163394.3469  2711122.2723  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 276   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008991.6163  3394999.8549  3163394.3469  2711122.2723  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 277   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3395050.9086  3163394.3469  2711122.2723  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 278   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3394999.8549  3163441.6943  2711122.2723  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 279   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3394999.8549  3163394.3469  2711162.4321  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 280   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3394999.8549  3163394.3469  2711122.2723  2964773.2171  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 281   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3394999.8549  3163394.3469  2711122.2723  2964729.0355  2882406.3835  5152565.6901  rho = 0.9726  \nIteration 282   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3394999.8549  3163394.3469  2711122.2723  2964729.0355  2882363.5106  5152645.3237  rho = 0.9726  \nIteration 283   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3394999.8549  3163394.3469  2711122.2723  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 284   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3394999.8549  3163394.3469  2711122.2723  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 285   ll = -1465.8970   tau2 = 3138102.9323  3106444.0951  3008946.7312  3394999.8549  3163394.3469  2711122.2723  2964729.0355  2882363.5106  5152565.6901  rho = 0.9726  \nIteration 286   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395395.4521  3162928.8208  2709710.4431  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 287   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395395.4521  3162928.8208  2709710.4431  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 288   ll = -1465.8969   tau2 = 3137346.3835  3108058.7772  3009012.2968  3395395.4521  3162928.8208  2709710.4431  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 289   ll = -1465.8969   tau2 = 3137299.4527  3108105.2415  3009012.2968  3395395.4521  3162928.8208  2709710.4431  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 290   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009057.1830  3395395.4521  3162928.8208  2709710.4431  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 291   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395446.5122  3162928.8208  2709710.4431  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 292   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395395.4521  3162976.1607  2709710.4431  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 293   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395395.4521  3162928.8208  2709750.5805  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 294   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395395.4521  3162928.8208  2709710.4431  2964472.5282  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 295   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395395.4521  3162928.8208  2709710.4431  2964428.3514  2882282.5783  5153412.2182  rho = 0.9727  \nIteration 296   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395395.4521  3162928.8208  2709710.4431  2964428.3514  2882239.7073  5153491.8657  rho = 0.9727  \nIteration 297   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395395.4521  3162928.8208  2709710.4431  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 298   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395395.4521  3162928.8208  2709710.4431  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 299   ll = -1465.8969   tau2 = 3137299.4527  3108058.7772  3009012.2968  3395395.4521  3162928.8208  2709710.4431  2964428.3514  2882239.7073  5153412.2182  rho = 0.9727  \nIteration 300   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393901.4670  3161109.0254  2707936.7281  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 301   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393901.4670  3161109.0254  2707936.7281  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 302   ll = -1465.8969   tau2 = 3135439.0710  3106954.1689  3007559.9178  3393901.4670  3161109.0254  2707936.7281  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 303   ll = -1465.8969   tau2 = 3135392.1706  3107000.6156  3007559.9178  3393901.4670  3161109.0254  2707936.7281  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 304   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007604.7808  3393901.4670  3161109.0254  2707936.7281  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 305   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393952.5031  3161109.0254  2707936.7281  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 306   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393901.4670  3161156.3363  2707936.7281  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 307   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393901.4670  3161109.0254  2707976.8375  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 308   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393901.4670  3161109.0254  2707936.7281  2962993.1212  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 309   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393901.4670  3161109.0254  2707936.7281  2962948.9679  2880881.1619  5152261.7831  rho = 0.9726  \nIteration 310   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393901.4670  3161109.0254  2707936.7281  2962948.9679  2880838.3132  5152341.4116  rho = 0.9726  \nIteration 311   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393901.4670  3161109.0254  2707936.7281  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 312   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393901.4670  3161109.0254  2707936.7281  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 313   ll = -1465.8969   tau2 = 3135392.1706  3106954.1689  3007559.9178  3393901.4670  3161109.0254  2707936.7281  2962948.9679  2880838.3132  5152261.7831  rho = 0.9726  \nIteration 314   ll = -1465.8969   tau2 = 3134655.6719  3106256.3433  3006951.7597  3393243.7892  3160365.7228  2707267.3040  2962407.3469  2880290.8655  5151862.3115  rho = 0.9726  \nIteration 315   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393612.3930  3160782.3124  2707642.4868  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 316   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393612.3930  3160782.3124  2707642.4868  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 317   ll = -1465.8969   tau2 = 3135115.3434  3106647.4459  3007292.6090  3393612.3930  3160782.3124  2707642.4868  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 318   ll = -1465.8969   tau2 = 3135068.4482  3106693.8877  3007292.6090  3393612.3930  3160782.3124  2707642.4868  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 319   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007337.4678  3393612.3930  3160782.3124  2707642.4868  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 320   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393663.4245  3160782.3124  2707642.4868  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 321   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393612.3930  3160829.6180  2707642.4868  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 322   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393612.3930  3160782.3124  2707682.5916  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 323   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393612.3930  3160782.3124  2707642.4868  2962755.0555  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 324   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393612.3930  3160782.3124  2707642.4868  2962710.9060  2880640.5347  5152086.2061  rho = 0.9726  \nIteration 325   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393612.3930  3160782.3124  2707642.4868  2962710.9060  2880597.6897  5152165.8318  rho = 0.9726  \nIteration 326   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393612.3930  3160782.3124  2707642.4868  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 327   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393612.3930  3160782.3124  2707642.4868  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 328   ll = -1465.8969   tau2 = 3135068.4482  3106647.4459  3007292.6090  3393612.3930  3160782.3124  2707642.4868  2962710.9060  2880597.6897  5152086.2061  rho = 0.9726  \nIteration 329   ll = -1465.8969   tau2 = 3134579.4939  3106134.9236  3006895.9165  3393181.7033  3160281.2455  2707190.7787  2962384.6447  2880253.2453  5151865.7623  rho = 0.9726  \nIteration 330   ll = -1465.8969   tau2 = 3134898.8441  3106469.6662  3007155.0089  3393463.0006  3160608.5066  2707485.8018  2962597.7371  2880478.2134  5152009.7434  rho = 0.9726  \nIteration 331   ll = -1465.8969   tau2 = 3135000.7264  3106576.4595  3007237.6663  3393552.7418  3160712.9128  2707579.9234  2962665.7186  2880549.9838  5152055.6754  rho = 0.9726  \nIteration 332   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393586.4428  3160752.1213  2707615.2696  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 333   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393586.4428  3160752.1213  2707615.2696  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 334   ll = -1465.8969   tau2 = 3135085.8817  3106616.5645  3007268.7071  3393586.4428  3160752.1213  2707615.2696  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 335   ll = -1465.8969   tau2 = 3135038.9870  3106663.0058  3007268.7071  3393586.4428  3160752.1213  2707615.2696  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 336   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007313.5655  3393586.4428  3160752.1213  2707615.2696  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 337   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393637.4739  3160752.1213  2707615.2696  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 338   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393586.4428  3160799.4265  2707615.2696  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 339   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393586.4428  3160752.1213  2707655.3740  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 340   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393586.4428  3160752.1213  2707615.2696  2962735.3972  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 341   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393586.4428  3160752.1213  2707615.2696  2962691.2480  2880619.7807  5152072.9243  rho = 0.9726  \nIteration 342   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393586.4428  3160752.1213  2707615.2696  2962691.2480  2880576.9361  5152152.5497  rho = 0.9726  \nIteration 343   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393586.4428  3160752.1213  2707615.2696  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 344   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393586.4428  3160752.1213  2707615.2696  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 345   ll = -1465.8969   tau2 = 3135038.9870  3106616.5645  3007268.7071  3393586.4428  3160752.1213  2707615.2696  2962691.2480  2880576.9361  5152072.9243  rho = 0.9726  \nIteration 346   ll = -1465.8969   tau2 = 3134593.9463  3106141.7794  3006913.5685  3393201.8054  3160294.7866  2707202.8560  2962408.5183  2880272.6912  5151885.4907  rho = 0.9726  \nIteration 347   ll = -1465.8969   tau2 = 3134885.4318  3106452.7458  3007146.1724  3393453.7302  3160594.3241  2707472.9715  2962593.6975  2880471.9618  5152008.2552  rho = 0.9726  \nIteration 348   ll = -1465.8969   tau2 = 3134977.7631  3106551.2484  3007219.8515  3393533.5292  3160689.2061  2707558.5340  2962652.3539  2880535.0820  5152047.1404  rho = 0.9726  \nIteration 349   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 350   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 351   ll = -1465.8969   tau2 = 3135059.2777  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 352   ll = -1465.8969   tau2 = 3135012.3834  3106634.6235  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 353   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007292.3360  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 354   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393614.4810  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 355   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160772.0875  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 356   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707630.7202  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 357   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962718.4963  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 358   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880601.5936  5152061.7205  rho = 0.9726  \nIteration 359   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152141.3457  rho = 0.9726  \nIteration 360   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 361   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 362   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 363   ll = -1465.8969   tau2 = 3134598.2146  3106145.0120  3006919.0679  3393208.1993  3160298.9248  2707207.0704  2962415.6085  2880278.5175  5151887.9694  rho = 0.9726  \nIteration 364   ll = -1465.8969   tau2 = 3134873.8007  3106439.8953  3007137.5913  3393444.5829  3160582.2887  2707462.2798  2962587.7735  2880464.9836  5152003.5845  rho = 0.9726  \nIteration 365   ll = -1465.8969   tau2 = 3134959.1981  3106531.2728  3007205.3057  3393517.8315  3160670.0963  2707541.3632  2962641.1222  2880522.7640  5152039.4093  rho = 0.9726  \nIteration 366   ll = -1465.8969   tau2 = 3134990.2616  3106564.5117  3007229.9369  3393544.4757  3160702.0366  2707570.1301  2962660.5278  2880543.7817  5152052.4404  rho = 0.9726  \nIteration 367   ll = -1465.8969   tau2 = 3135002.9247  3106578.0616  3007239.9779  3393555.3373  3160715.0571  2707581.8569  2962668.4385  2880552.3495  5152057.7526  rho = 0.9726  \nIteration 368   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 369   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 370   ll = -1465.8971   tau2 = 3139705.2889  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 371   ll = -1465.8971   tau2 = 3130326.4923  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 372   ll = -1465.8971   tau2 = 3135012.3834  3111235.7053  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 373   ll = -1465.8971   tau2 = 3135012.3834  3101947.6024  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 374   ll = -1465.8970   tau2 = 3135012.3834  3106588.1826  3011736.5966  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 375   ll = -1465.8970   tau2 = 3135012.3834  3106588.1826  3002765.0504  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 376   ll = -1465.8971   tau2 = 3135012.3834  3106588.1826  3007247.4779  3398670.3231  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 377   ll = -1465.8971   tau2 = 3135012.3834  3106588.1826  3007247.4779  3388464.2511  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 378   ll = -1465.8971   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3165458.7636  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 379   ll = -1465.8971   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3155997.8815  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 380   ll = -1465.8970   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2711603.9545  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 381   ll = -1465.8970   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2703583.2181  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 382   ll = -1465.8970   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2967092.4981  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 383   ll = -1465.8970   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2958262.7755  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 384   ll = -1465.8970   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2884846.3346  5152061.7205  rho = 0.9726  \nIteration 385   ll = -1465.8970   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2876277.5363  5152061.7205  rho = 0.9726  \nIteration 386   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5160030.3403  rho = 0.9726  \nIteration 387   ll = -1465.8970   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5144105.4065  rho = 0.9726  \nIteration 388   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9727  \nIteration 389   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 390   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 391   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 392   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 393   ll = -1465.8969   tau2 = 3135012.3834  3106588.1826  3007247.4779  3393563.4503  3160724.7827  2707590.6163  2962674.3474  2880558.7493  5152061.7205  rho = 0.9726  \nIteration 394   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 395   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 396   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 397   ll = -1465.8971   tau2 = 3140329.6354  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 398   ll = -1465.8971   tau2 = 3130948.8492  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 399   ll = -1465.8971   tau2 = 3135635.7343  3111833.7566  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 400   ll = -1465.8971   tau2 = 3135635.7343  3102543.7490  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 401   ll = -1465.8970   tau2 = 3135635.7343  3107185.2809  3012382.1712  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 402   ll = -1465.8970   tau2 = 3135635.7343  3107185.2809  3003408.5732  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 403   ll = -1465.8971   tau2 = 3135635.7343  3107185.2809  3007892.0258  3399412.6063  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 404   ll = -1465.8971   tau2 = 3135635.7343  3107185.2809  3007892.0258  3389204.1573  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 405   ll = -1465.8971   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3166084.0807  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 406   ll = -1465.8971   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3156621.2050  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 407   ll = -1465.8970   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2712104.0359  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 408   ll = -1465.8970   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2704081.7206  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 409   ll = -1465.8970   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2967774.6559  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 410   ll = -1465.8970   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2958942.7673  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 411   ll = -1465.8970   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2885492.1406  5153573.2676  rho = 0.9726  \nIteration 412   ll = -1465.8970   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2876921.2953  5153573.2676  rho = 0.9726  \nIteration 413   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5161544.3768  rho = 0.9726  \nIteration 414   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5145614.4684  rho = 0.9726  \nIteration 415   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9727  \nIteration 416   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 417   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 418   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 419   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 420   ll = -1465.8969   tau2 = 3135635.7343  3107185.2809  3007892.0258  3394304.5440  3161349.1022  2708089.9076  2963355.4213  2881203.5309  5153573.2676  rho = 0.9726  \nIteration 421   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 422   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 423   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 424   ll = -1465.8971   tau2 = 3140477.6713  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 425   ll = -1465.8971   tau2 = 3131096.4134  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 426   ll = -1465.8971   tau2 = 3135783.5341  3111969.9873  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 427   ll = -1465.8971   tau2 = 3135783.5341  3102679.5459  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 428   ll = -1465.8970   tau2 = 3135783.5341  3107321.2945  3012543.8817  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 429   ll = -1465.8970   tau2 = 3135783.5341  3107321.2945  3003569.7697  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 430   ll = -1465.8971   tau2 = 3135783.5341  3107321.2945  3008053.4790  3399600.5152  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 431   ll = -1465.8971   tau2 = 3135783.5341  3107321.2945  3008053.4790  3389391.4644  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 432   ll = -1465.8971   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3166231.4477  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 433   ll = -1465.8971   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3156768.1021  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 434   ll = -1465.8970   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2712239.7651  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 435   ll = -1465.8970   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2704217.0213  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 436   ll = -1465.8970   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2967954.2376  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 437   ll = -1465.8970   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2959121.7787  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 438   ll = -1465.8970   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2885658.1293  5153863.6315  rho = 0.9726  \nIteration 439   ll = -1465.8970   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2877086.7579  5153863.6315  rho = 0.9726  \nIteration 440   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5161835.2189  rho = 0.9726  \nIteration 441   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5145904.3549  rho = 0.9726  \nIteration 442   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9727  \nIteration 443   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 444   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 445   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 446   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 447   ll = -1465.8969   tau2 = 3135783.5341  3107321.2945  3008053.4790  3394492.1518  3161496.2341  2708225.4224  2963534.7176  2881369.2564  5153863.6315  rho = 0.9726  \nIteration 448   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 449   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 450   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 451   ll = -1465.8971   tau2 = 3140479.6125  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 452   ll = -1465.8971   tau2 = 3131098.3484  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 453   ll = -1465.8971   tau2 = 3135785.4722  3111972.1435  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 454   ll = -1465.8971   tau2 = 3135785.4722  3102681.6952  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 455   ll = -1465.8970   tau2 = 3135785.4722  3107323.4472  3012549.0795  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 456   ll = -1465.8970   tau2 = 3135785.4722  3107323.4472  3003574.9510  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 457   ll = -1465.8971   tau2 = 3135785.4722  3107323.4472  3008058.6686  3399607.1764  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 458   ll = -1465.8971   tau2 = 3135785.4722  3107323.4472  3008058.6686  3389398.1043  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 459   ll = -1465.8971   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3166233.6879  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 460   ll = -1465.8971   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3156770.3351  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 461   ll = -1465.8970   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2712246.2583  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 462   ll = -1465.8970   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2704223.4939  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 463   ll = -1465.8970   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2967962.1843  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 464   ll = -1465.8970   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2959129.7002  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 465   ll = -1465.8970   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2885664.7326  5153848.1914  rho = 0.9726  \nIteration 466   ll = -1465.8970   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2877093.3403  5153848.1914  rho = 0.9726  \nIteration 467   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5161819.7533  rho = 0.9726  \nIteration 468   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5145888.9402  rho = 0.9726  \nIteration 469   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9727  \nIteration 470   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 471   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 472   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 473   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \nIteration 474   ll = -1465.8969   tau2 = 3135785.4722  3107323.4472  3008058.6686  3394498.8023  3161498.4706  2708231.9053  2963542.6517  2881375.8492  5153848.1914  rho = 0.9726  \n\n summary(net_arm_UN_prod)\n\n\nMultivariate Meta-Analysis Model (k = 189; method: ML)\n\n    logLik    Deviance         AIC         BIC        AICc   \n-1465.8969    515.8930   2969.7939   3031.3871   2974.2909   \n\nVariance Components:\n\nouter factor: factor(ensaio_1) (nlvls = 31)\ninner factor: produto          (nlvls = 9)\n\n                  estim       sqrt  k.lvl  fixed \ntau^2.1    3135785.4722  1770.8149     31     no \ntau^2.2    3107323.4472  1762.7602     29     no \ntau^2.3    3008058.6686  1734.3756     22     no \ntau^2.4    3394498.8023  1842.4166     23     no \ntau^2.5    3161498.4706  1778.0603     29     no \ntau^2.6    2708231.9053  1645.6707      7     no \ntau^2.7    2963542.6517  1721.4943     20     no \ntau^2.8    2881375.8492  1697.4616     19     no \ntau^2.9    5153848.1914  2270.2088      9     no \nrho              0.9726                       no \n                                                  level \ntau^2.1                                         AACHECK \ntau^2.2                   ABACUS HC (Controle Positivo) \ntau^2.3                     BELYAN  (Controle Positivo) \ntau^2.4                                        FOX XPRO \ntau^2.5                                     OSKESTRA SC \ntau^2.6                                        PREVINIL \ntau^2.7                                     trat_A20259 \ntau^2.8                                         TRIDIUM \ntau^2.9    UNIZEB GOLD (Controle Positivo, multissítio) \nrho                                                     \n\nTest for Residual Heterogeneity:\nQE(df = 180) = 10958.5055, p-val &lt; .0001\n\nTest of Moderators (coefficients 2:9):\nQM(df = 8) = 164.4560, p-val &lt; .0001\n\nModel Results:\n\n                                                      estimate        se \nintrcpt                                              6478.9324  321.1645 \nprodutoABACUS HC (Controle Positivo)                  730.8315   99.6665 \nprodutoBELYAN  (Controle Positivo)                   1071.2983  108.9289 \nprodutoFOX XPRO                                      1021.6410  110.1111 \nprodutoOSKESTRA SC                                    934.1849   99.9557 \nprodutoPREVINIL                                       694.4442  159.9600 \nprodutotrat_A20259                                   1080.6851  113.7802 \nprodutoTRIDIUM                                        855.5617  112.2920 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)   926.6813  196.8640 \n                                                        zval    pval      ci.lb \nintrcpt                                              20.1732  &lt;.0001  5849.4615 \nprodutoABACUS HC (Controle Positivo)                  7.3328  &lt;.0001   535.4888 \nprodutoBELYAN  (Controle Positivo)                    9.8348  &lt;.0001   857.8016 \nprodutoFOX XPRO                                       9.2783  &lt;.0001   805.8272 \nprodutoOSKESTRA SC                                    9.3460  &lt;.0001   738.2753 \nprodutoPREVINIL                                       4.3414  &lt;.0001   380.9285 \nprodutotrat_A20259                                    9.4980  &lt;.0001   857.6800 \nprodutoTRIDIUM                                        7.6191  &lt;.0001   635.4734 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)   4.7072  &lt;.0001   540.8351 \n                                                         ci.ub      \nintrcpt                                              7108.4033  *** \nprodutoABACUS HC (Controle Positivo)                  926.1742  *** \nprodutoBELYAN  (Controle Positivo)                   1284.7950  *** \nprodutoFOX XPRO                                      1237.4548  *** \nprodutoOSKESTRA SC                                   1130.0944  *** \nprodutoPREVINIL                                      1007.9600  *** \nprodutotrat_A20259                                   1303.6901  *** \nprodutoTRIDIUM                                       1075.6501  *** \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)  1312.5276  *** \n\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\nyield_res &lt;- data.frame(cbind(net_arm_UN_prod$b, \n                              net_arm_UN_prod$ci.lb,\n                              net_arm_UN_prod$ci.ub,\n                               net_arm_UN_prod$se)) %&gt;%\n  mutate(fungicide = c(\"check\", \"ABACUSHC\", \"BAS75302F\", \"FOX XPRO\", \"OSKESTRASC\", \n                       \"PREVINIL\", \"A20259\", \"TRIDIUM\", \"UNIZEBGOLD\")) %&gt;%\n  filter(fungicide != \"check\")\n\nnames(yield_res) &lt;- c(\"yld\", \"yld_lower\", \"yld_upper\", \"fungicide\", \"se\")\n\nyield_res\n\n                                                          yld yld_lower\nprodutoABACUS HC (Controle Positivo)                 730.8315  535.4888\nprodutoBELYAN  (Controle Positivo)                  1071.2983  857.8016\nprodutoFOX XPRO                                     1021.6410  805.8272\nprodutoOSKESTRA SC                                   934.1849  738.2753\nprodutoPREVINIL                                      694.4442  380.9285\nprodutotrat_A20259                                  1080.6851  857.6800\nprodutoTRIDIUM                                       855.5617  635.4734\nprodutoUNIZEB GOLD (Controle Positivo, multissítio)  926.6813  540.8351\n                                                    yld_upper fungicide\nprodutoABACUS HC (Controle Positivo)                 926.1742  99.66649\nprodutoBELYAN  (Controle Positivo)                  1284.7950 108.92887\nprodutoFOX XPRO                                     1237.4548 110.11110\nprodutoOSKESTRA SC                                  1130.0944  99.95567\nprodutoPREVINIL                                     1007.9600 159.95995\nprodutotrat_A20259                                  1303.6901 113.78018\nprodutoTRIDIUM                                      1075.6501 112.29204\nprodutoUNIZEB GOLD (Controle Positivo, multissítio) 1312.5276 196.86397\n                                                            se\nprodutoABACUS HC (Controle Positivo)                  ABACUSHC\nprodutoBELYAN  (Controle Positivo)                   BAS75302F\nprodutoFOX XPRO                                       FOX XPRO\nprodutoOSKESTRA SC                                  OSKESTRASC\nprodutoPREVINIL                                       PREVINIL\nprodutotrat_A20259                                      A20259\nprodutoTRIDIUM                                         TRIDIUM\nprodutoUNIZEB GOLD (Controle Positivo, multissítio) UNIZEBGOLD\n\n#write_xlsx(yield_res, \"yield_res.xlsx\")\n\n\n\n\n\nnet_arm_UN_comp &lt;-\n summary(glht(\n    model = net_arm_UN_prod,\n     linfct = cbind(contrMat(rep(1, 9), type = \"Tukey\"))))\n\nnet_arm_UN_comp\n\n\n     Simultaneous Tests for General Linear Hypotheses\n\nFit: rma.mv(yi = mean_prod, V = vi_yld, mods = ~produto, random = list(~produto | \n    factor(ensaio_1)), struct = \"HCS\", data = prod3, method = \"ML\", \n    control = list(optimizer = \"nlm\", verbose = TRUE))\n\nLinear Hypotheses:\n            Estimate Std. Error z value Pr(&gt;|z|)    \n2 - 1 == 0 -5748.101    351.281 -16.363    &lt;0.01 ***\n3 - 1 == 0 -5407.634    358.357 -15.090    &lt;0.01 ***\n4 - 1 == 0 -5457.291    341.664 -15.973    &lt;0.01 ***\n5 - 1 == 0 -5544.748    348.936 -15.890    &lt;0.01 ***\n6 - 1 == 0 -5784.488    389.854 -14.838    &lt;0.01 ***\n7 - 1 == 0 -5398.247    362.018 -14.912    &lt;0.01 ***\n8 - 1 == 0 -5623.371    365.090 -15.403    &lt;0.01 ***\n9 - 1 == 0 -5552.251    309.386 -17.946    &lt;0.01 ***\n3 - 2 == 0   340.467    112.561   3.025   0.0523 .  \n4 - 2 == 0   290.809    111.161   2.616   0.1554    \n5 - 2 == 0   203.353    100.850   2.016   0.4909    \n6 - 2 == 0   -36.387    160.349  -0.227   1.0000    \n7 - 2 == 0   349.854    114.702   3.050   0.0486 *  \n8 - 2 == 0   124.730    113.094   1.103   0.9678    \n9 - 2 == 0   195.850    197.393   0.992   0.9833    \n4 - 3 == 0   -49.657    119.675  -0.415   1.0000    \n5 - 3 == 0  -137.113    112.976  -1.214   0.9438    \n6 - 3 == 0  -376.854    168.306  -2.239   0.3426    \n7 - 3 == 0     9.387    120.307   0.078   1.0000    \n8 - 3 == 0  -215.737    120.754  -1.787   0.6542    \n9 - 3 == 0  -144.617    213.538  -0.677   0.9988    \n5 - 4 == 0   -87.456    111.098  -0.787   0.9964    \n6 - 4 == 0  -327.197    167.305  -1.956   0.5338    \n7 - 4 == 0    59.044    121.687   0.485   0.9999    \n8 - 4 == 0  -166.079    121.038  -1.372   0.8910    \n9 - 4 == 0   -94.960    202.032  -0.470   0.9999    \n6 - 5 == 0  -239.741    160.896  -1.490   0.8370    \n7 - 5 == 0   146.500    115.146   1.272   0.9269    \n8 - 5 == 0   -78.623    113.647  -0.692   0.9986    \n9 - 5 == 0    -7.504    196.314  -0.038   1.0000    \n7 - 6 == 0   386.241    169.612   2.277   0.3194    \n8 - 6 == 0   161.117    167.497   0.962   0.9863    \n9 - 6 == 0   232.237    240.048   0.967   0.9858    \n8 - 7 == 0  -225.123    122.456  -1.838   0.6183    \n9 - 7 == 0  -154.004    215.727  -0.714   0.9982    \n9 - 8 == 0    71.120    213.360   0.333   1.0000    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n(Adjusted p values reported -- single-step method)\n\nplot(net_arm_UN_comp)\n\n\n\n\n\n\n\nmv_yld_means &lt;- emmprep(net_arm_UN_prod)\n\n\n mv_yld_emmeans &lt;- emmeans(mv_yld_means, ~ produto)\n pwpm(mv_yld_emmeans)\n\n                                              AACHECK\nAACHECK                                        [6479]\nABACUS HC (Controle Positivo)                 -730.83\nBELYAN  (Controle Positivo)                  -1071.30\nFOX XPRO                                     -1021.64\nOSKESTRA SC                                   -934.18\nPREVINIL                                      -694.44\ntrat_A20259                                  -1080.69\nTRIDIUM                                       -855.56\nUNIZEB GOLD (Controle Positivo, multissítio)  -926.68\n                                             ABACUS HC (Controle Positivo)\nAACHECK                                                             &lt;.0001\nABACUS HC (Controle Positivo)                                       [7210]\nBELYAN  (Controle Positivo)                                        -340.47\nFOX XPRO                                                           -290.81\nOSKESTRA SC                                                        -203.35\nPREVINIL                                                             36.39\ntrat_A20259                                                        -349.85\nTRIDIUM                                                            -124.73\nUNIZEB GOLD (Controle Positivo, multissítio)                       -195.85\n                                             BELYAN  (Controle Positivo)\nAACHECK                                                           &lt;.0001\nABACUS HC (Controle Positivo)                                     0.0626\nBELYAN  (Controle Positivo)                                       [7550]\nFOX XPRO                                                           49.66\nOSKESTRA SC                                                       137.11\nPREVINIL                                                          376.85\ntrat_A20259                                                        -9.39\nTRIDIUM                                                           215.74\nUNIZEB GOLD (Controle Positivo, multissítio)                      144.62\n                                             FOX XPRO OSKESTRA SC PREVINIL\nAACHECK                                        &lt;.0001      &lt;.0001   0.0005\nABACUS HC (Controle Positivo)                  0.1797      0.5317   1.0000\nBELYAN  (Controle Positivo)                    1.0000      0.9538   0.3801\nFOX XPRO                                       [7501]      0.9972   0.5746\nOSKESTRA SC                                     87.46      [7413]   0.8606\nPREVINIL                                       327.20      239.74   [7173]\ntrat_A20259                                    -59.04     -146.50  -386.24\nTRIDIUM                                        166.08       78.62  -161.12\nUNIZEB GOLD (Controle Positivo, multissítio)    94.96        7.50  -232.24\n                                             trat_A20259  TRIDIUM\nAACHECK                                           &lt;.0001   &lt;.0001\nABACUS HC (Controle Positivo)                     0.0582   0.9740\nBELYAN  (Controle Positivo)                       1.0000   0.6913\nFOX XPRO                                          0.9999   0.9085\nOSKESTRA SC                                       0.9394   0.9989\nPREVINIL                                          0.3560   0.9891\ntrat_A20259                                       [7560]   0.6564\nTRIDIUM                                           225.12   [7334]\nUNIZEB GOLD (Controle Positivo, multissítio)      154.00   -71.12\n                                             UNIZEB GOLD (Controle Positivo, multissítio)\nAACHECK                                                                            &lt;.0001\nABACUS HC (Controle Positivo)                                                      0.9867\nBELYAN  (Controle Positivo)                                                        0.9991\nFOX XPRO                                                                           0.9999\nOSKESTRA SC                                                                        1.0000\nPREVINIL                                                                           0.9887\ntrat_A20259                                                                        0.9986\nTRIDIUM                                                                            1.0000\nUNIZEB GOLD (Controle Positivo, multissítio)                                       [7406]\n\nRow and column labels: produto\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean) \nLower triangle: Comparisons (estimate)   earlier vs. later\n\n\n\nlibrary(tidyverse)\nefficacy_res &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1sXr3kLjpKCZA-WUqqXrerkMBa1D61bwT/edit?gid=947435541#gid=947435541\")\nyield_res &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1WKDA30xXJHkD57osKPp6ylRQPUobc0cS/edit?gid=1424387508#gid=1424387508\")\n\nsev_yld = full_join(efficacy_res, yield_res)\n\n#write_csv(sev_yld, \"sev_yld.csv\")\n\n#Disease pressure\n\nsummary(prod3$mean_sev) \n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.150   1.150   5.333   8.875  12.250  64.500 \n\nprod3 &lt;- prod3 %&gt;%\n  mutate(\n    sev_check_class = case_when(\n      mean_sev &lt; 19 ~ \"Low\",\n      mean_sev &gt;= 19 ~ \"High\"))\n\nlibrary(janitor) \nprod3 %&gt;%\n  tabyl(produto, sev_check_class)\n\n                                      produto High Low\n                                      AACHECK   16  15\n                ABACUS HC (Controle Positivo)    3  26\n                  BELYAN  (Controle Positivo)    0  22\n                                     FOX XPRO    1  22\n                                  OSKESTRA SC    1  28\n                                     PREVINIL    1   6\n                                  trat_A20259    0  20\n                                      TRIDIUM    0  19\n UNIZEB GOLD (Controle Positivo, multissítio)    3   6\n\n\n##Meta-analysis\n\nmv_yld_bas &lt;- rma.mv(\n  mean_prod,\n  vi_yld,\n   mods = ~ produto * as.factor(sev_check_class),\n   method = \"ML\",\n  random = list( ~ produto | factor(ensaio_1)),\n   struct = \"CS\",\n  control = list(optimizer = \"nlm\"),\n   data = prod3)\n\n summary(mv_yld_bas)\n\n\nMultivariate Meta-Analysis Model (k = 189; method: ML)\n\n    logLik    Deviance         AIC         BIC        AICc   \n-1455.6135    495.3261   2945.2269   3000.3366   2948.8059   \n\nVariance Components:\n\nouter factor: factor(ensaio_1) (nlvls = 31)\ninner factor: produto          (nlvls = 9)\n\n                  estim       sqrt  fixed \ntau^2      2986820.7303  1728.2421     no \nrho              0.9758                no \n\nTest for Residual Heterogeneity:\nQE(df = 174) = 10418.3077, p-val &lt; .0001\n\nTest of Moderators (coefficients 2:15):\nQM(df = 14) = 208.0571, p-val &lt; .0001\n\nModel Results:\n\n                                                                                    estimate \nintrcpt                                                                            6159.8377 \nprodutoABACUS HC (Controle Positivo)                                                791.7609 \nprodutoBELYAN  (Controle Positivo)                                                  694.2175 \nprodutoFOX XPRO                                                                     455.5239 \nprodutoOSKESTRA SC                                                                  572.0239 \nprodutoPREVINIL                                                                     721.0239 \nprodutotrat_A20259                                                                  719.8024 \nprodutoTRIDIUM                                                                      471.8305 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                                 460.5998 \nas.factor(sev_check_class)Low                                                       708.8790 \nprodutoABACUS HC (Controle Positivo):as.factor(sev_check_class)Low                 -411.8255 \nprodutoFOX XPRO:as.factor(sev_check_class)Low                                       250.3905 \nprodutoOSKESTRA SC:as.factor(sev_check_class)Low                                     10.6437 \nprodutoPREVINIL:as.factor(sev_check_class)Low                                      -389.6027 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):as.factor(sev_check_class)Low  -120.1171 \n                                                                                         se \nintrcpt                                                                            320.4107 \nprodutoABACUS HC (Controle Positivo)                                               241.0311 \nprodutoBELYAN  (Controle Positivo)                                                 131.5896 \nprodutoFOX XPRO                                                                    378.5255 \nprodutoOSKESTRA SC                                                                 378.5255 \nprodutoPREVINIL                                                                    378.5255 \nprodutotrat_A20259                                                                 132.9918 \nprodutoTRIDIUM                                                                     133.5252 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                                262.5416 \nas.factor(sev_check_class)Low                                                      146.4907 \nprodutoABACUS HC (Controle Positivo):as.factor(sev_check_class)Low                 272.8249 \nprodutoFOX XPRO:as.factor(sev_check_class)Low                                      400.4628 \nprodutoOSKESTRA SC:as.factor(sev_check_class)Low                                   398.1262 \nprodutoPREVINIL:as.factor(sev_check_class)Low                                      422.5479 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):as.factor(sev_check_class)Low  320.8762 \n                                                                                      zval \nintrcpt                                                                            19.2248 \nprodutoABACUS HC (Controle Positivo)                                                3.2849 \nprodutoBELYAN  (Controle Positivo)                                                  5.2756 \nprodutoFOX XPRO                                                                     1.2034 \nprodutoOSKESTRA SC                                                                  1.5112 \nprodutoPREVINIL                                                                     1.9048 \nprodutotrat_A20259                                                                  5.4124 \nprodutoTRIDIUM                                                                      3.5336 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                                 1.7544 \nas.factor(sev_check_class)Low                                                       4.8391 \nprodutoABACUS HC (Controle Positivo):as.factor(sev_check_class)Low                 -1.5095 \nprodutoFOX XPRO:as.factor(sev_check_class)Low                                       0.6253 \nprodutoOSKESTRA SC:as.factor(sev_check_class)Low                                    0.0267 \nprodutoPREVINIL:as.factor(sev_check_class)Low                                      -0.9220 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):as.factor(sev_check_class)Low  -0.3743 \n                                                                                     pval \nintrcpt                                                                            &lt;.0001 \nprodutoABACUS HC (Controle Positivo)                                               0.0010 \nprodutoBELYAN  (Controle Positivo)                                                 &lt;.0001 \nprodutoFOX XPRO                                                                    0.2288 \nprodutoOSKESTRA SC                                                                 0.1307 \nprodutoPREVINIL                                                                    0.0568 \nprodutotrat_A20259                                                                 &lt;.0001 \nprodutoTRIDIUM                                                                     0.0004 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                                0.0794 \nas.factor(sev_check_class)Low                                                      &lt;.0001 \nprodutoABACUS HC (Controle Positivo):as.factor(sev_check_class)Low                 0.1312 \nprodutoFOX XPRO:as.factor(sev_check_class)Low                                      0.5318 \nprodutoOSKESTRA SC:as.factor(sev_check_class)Low                                   0.9787 \nprodutoPREVINIL:as.factor(sev_check_class)Low                                      0.3565 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):as.factor(sev_check_class)Low  0.7082 \n                                                                                        ci.lb \nintrcpt                                                                             5531.8443 \nprodutoABACUS HC (Controle Positivo)                                                 319.3486 \nprodutoBELYAN  (Controle Positivo)                                                   436.3065 \nprodutoFOX XPRO                                                                     -286.3724 \nprodutoOSKESTRA SC                                                                  -169.8724 \nprodutoPREVINIL                                                                      -20.8724 \nprodutotrat_A20259                                                                   459.1432 \nprodutoTRIDIUM                                                                       210.1259 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                                  -53.9723 \nas.factor(sev_check_class)Low                                                        421.7626 \nprodutoABACUS HC (Controle Positivo):as.factor(sev_check_class)Low                  -946.5525 \nprodutoFOX XPRO:as.factor(sev_check_class)Low                                       -534.5022 \nprodutoOSKESTRA SC:as.factor(sev_check_class)Low                                    -769.6693 \nprodutoPREVINIL:as.factor(sev_check_class)Low                                      -1217.7814 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):as.factor(sev_check_class)Low   -749.0230 \n                                                                                       ci.ub \nintrcpt                                                                            6787.8312 \nprodutoABACUS HC (Controle Positivo)                                               1264.1732 \nprodutoBELYAN  (Controle Positivo)                                                  952.1284 \nprodutoFOX XPRO                                                                    1197.4203 \nprodutoOSKESTRA SC                                                                 1313.9203 \nprodutoPREVINIL                                                                    1462.9203 \nprodutotrat_A20259                                                                  980.4616 \nprodutoTRIDIUM                                                                      733.5351 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                                 975.1719 \nas.factor(sev_check_class)Low                                                       995.9954 \nprodutoABACUS HC (Controle Positivo):as.factor(sev_check_class)Low                  122.9016 \nprodutoFOX XPRO:as.factor(sev_check_class)Low                                      1035.2832 \nprodutoOSKESTRA SC:as.factor(sev_check_class)Low                                    790.9567 \nprodutoPREVINIL:as.factor(sev_check_class)Low                                       438.5759 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):as.factor(sev_check_class)Low   508.7887 \n                                                                                       \nintrcpt                                                                            *** \nprodutoABACUS HC (Controle Positivo)                                                ** \nprodutoBELYAN  (Controle Positivo)                                                 *** \nprodutoFOX XPRO                                                                        \nprodutoOSKESTRA SC                                                                     \nprodutoPREVINIL                                                                      . \nprodutotrat_A20259                                                                 *** \nprodutoTRIDIUM                                                                     *** \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                                  . \nas.factor(sev_check_class)Low                                                      *** \nprodutoABACUS HC (Controle Positivo):as.factor(sev_check_class)Low                     \nprodutoFOX XPRO:as.factor(sev_check_class)Low                                          \nprodutoOSKESTRA SC:as.factor(sev_check_class)Low                                       \nprodutoPREVINIL:as.factor(sev_check_class)Low                                          \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):as.factor(sev_check_class)Low      \n\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n anova(mv_yld_bas, btt = 11:18)\n\n\nTest of Moderators (coefficients 11:15):\nQM(df = 5) = 4.2886, p-val = 0.5087\n\n\nDesign groups\n\nprod31 = prod3 %&gt;% \n  group_by(ensaio_1) %&gt;% \n  summarise(produto = paste(produto, collapse=';')) \n\nprod31 %&gt;% \n  tabyl(produto)\n\n                                                                                                                  produto\n              AACHECK;ABACUS HC (Controle Positivo);BELYAN  (Controle Positivo);FOX XPRO;OSKESTRA SC;PREVINIL;trat_A20259\n               AACHECK;ABACUS HC (Controle Positivo);BELYAN  (Controle Positivo);FOX XPRO;OSKESTRA SC;trat_A20259;TRIDIUM\n AACHECK;ABACUS HC (Controle Positivo);FOX XPRO;OSKESTRA SC;PREVINIL;TRIDIUM;UNIZEB GOLD (Controle Positivo, multissítio)\n                           AACHECK;ABACUS HC (Controle Positivo);OSKESTRA SC;UNIZEB GOLD (Controle Positivo, multissítio)\n                                                                                      AACHECK;BELYAN  (Controle Positivo)\n  n    percent\n  4 0.12903226\n 16 0.51612903\n  3 0.09677419\n  6 0.19354839\n  2 0.06451613\n\n\n#d1\n\nprod3 &lt;- prod3 %&gt;%\n  group_by(ensaio_1) %&gt;% \n  mutate(n2 = n()) %&gt;% \n  filter(n2 != 1)\n\ndesign1 = prod3 %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"BELYAN  (Controle Positivo)\", \"FOX XPRO\", \"OSKESTRA SC\", \"PREVINIL\", \"trat_A20259\" )) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(1, length(produto))) %&gt;% \n  filter(n2 == 7) %&gt;% \n  filter(n3 == 7)\ndesign1\n\n# A tibble: 28 × 14\n# Groups:   ensaio_1 [4]\n   municipio  regiao ensaio_1 produto        ano mean_prod mean_V mean_sev     n\n   &lt;chr&gt;      &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;        &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt; &lt;int&gt;\n 1 Cafelândia Sul    22       AACHECK       2018     8442. 2.67e5    21.6      4\n 2 Cafelândia Sul    22       ABACUS HC (…  2018     8700. 2.67e5    10.8      4\n 3 Cafelândia Sul    22       BELYAN  (Co…  2018     9693. 2.67e5     5.72     4\n 4 Cafelândia Sul    22       FOX XPRO      2018     9128. 2.67e5     9.5      4\n 5 Cafelândia Sul    22       OSKESTRA SC   2018     8799. 2.67e5     8.75     4\n 6 Cafelândia Sul    22       PREVINIL      2018     9136. 2.67e5     9.02     4\n 7 Cafelândia Sul    22       trat_A20259   2018     9166. 2.67e5     8.1      4\n 8 Cafelândia Sul    23       AACHECK       2018     6129. 1.46e5     5.55     4\n 9 Cafelândia Sul    23       ABACUS HC (…  2018     6697. 1.46e5     1.52     4\n10 Cafelândia Sul    23       BELYAN  (Co…  2018     6443. 1.46e5     0.6      4\n# ℹ 18 more rows\n# ℹ 5 more variables: vi_yld &lt;dbl&gt;, sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;,\n#   design &lt;dbl&gt;\n\n\n#D2\n\ndesign2 = prod3 %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"BELYAN  (Controle Positivo)\", \"FOX XPRO\", \"OSKESTRA SC\", \"TRIDIUM\", \"trat_A20259\" )) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(2, length(produto))) %&gt;% \n  filter(n2 == 7) %&gt;% \n  filter(n3 == 7)\ndesign2\n\n# A tibble: 112 × 14\n# Groups:   ensaio_1 [16]\n   municipio regiao       ensaio_1 produto   ano mean_prod mean_V mean_sev     n\n   &lt;chr&gt;     &lt;chr&gt;        &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt; &lt;int&gt;\n 1 Anápolis  Centro-Oeste 48       AACHECK  2020     6136. 1.62e5   33.2       4\n 2 Anápolis  Centro-Oeste 48       ABACUS…  2020     7824  1.62e5   12.2       4\n 3 Anápolis  Centro-Oeste 48       BELYAN…  2020     7844. 1.62e5   12         4\n 4 Anápolis  Centro-Oeste 48       FOX XP…  2020     8050  1.62e5   11.2       4\n 5 Anápolis  Centro-Oeste 48       OSKEST…  2020     8074  1.62e5   11         4\n 6 Anápolis  Centro-Oeste 48       trat_A…  2020     8020. 1.62e5   11.8       4\n 7 Anápolis  Centro-Oeste 48       TRIDIUM  2020     7408  1.62e5   14         4\n 8 Arapongas Sul          27       AACHECK  2019     5959. 2.84e5    4.85      4\n 9 Arapongas Sul          27       ABACUS…  2019     6633. 2.84e5    0.875     4\n10 Arapongas Sul          27       BELYAN…  2019     7048. 2.84e5    0.35      4\n# ℹ 102 more rows\n# ℹ 5 more variables: vi_yld &lt;dbl&gt;, sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;,\n#   design &lt;dbl&gt;\n\n\n#D3\n\ndesign3 = prod3 %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\",  \"FOX XPRO\", \"OSKESTRA SC\", \"PREVINIL\", \"TRIDIUM\", \"UNIZEB GOLD (Controle Positivo, multissítio)\" )) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(3, length(produto))) %&gt;% \n  filter(n2 == 7) %&gt;% \n  filter(n3 == 7)\ndesign3\n\n# A tibble: 21 × 14\n# Groups:   ensaio_1 [3]\n   municipio       regiao ensaio_1 produto   ano mean_prod mean_V mean_sev     n\n   &lt;chr&gt;           &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt; &lt;int&gt;\n 1 Capão Bonito    Sudes… 67       AACHECK  2023     5360. 2.09e5    12.0      4\n 2 Capão Bonito    Sudes… 67       ABACUS…  2023     6330. 2.09e5     7.45     4\n 3 Capão Bonito    Sudes… 67       FOX XP…  2023     7082. 2.09e5     4.65     4\n 4 Capão Bonito    Sudes… 67       OSKEST…  2023     6442. 2.09e5     4.65     4\n 5 Capão Bonito    Sudes… 67       PREVIN…  2023     6384. 2.09e5     5.1      4\n 6 Capão Bonito    Sudes… 67       TRIDIUM  2023     6477. 2.09e5     6.2      4\n 7 Capão Bonito    Sudes… 67       UNIZEB…  2023     6647. 2.09e5     7.4      4\n 8 Patrocínio Pau… Sudes… 68       AACHECK  2023     5490  2.45e4    29.3      4\n 9 Patrocínio Pau… Sudes… 68       ABACUS…  2023     6368. 2.45e4    18.5      4\n10 Patrocínio Pau… Sudes… 68       FOX XP…  2023     7256. 2.45e4    14.4      4\n# ℹ 11 more rows\n# ℹ 5 more variables: vi_yld &lt;dbl&gt;, sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;,\n#   design &lt;dbl&gt;\n\n\n#D4\n\ndesign4 = prod3 %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"OSKESTRA SC\",  \"UNIZEB GOLD (Controle Positivo, multissítio)\" )) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(4, length(produto))) %&gt;% \n  filter(n2 == 4) %&gt;% \n  filter(n3 == 4)\ndesign4\n\n# A tibble: 24 × 14\n# Groups:   ensaio_1 [6]\n   municipio    regiao ensaio_1 produto      ano mean_prod mean_V mean_sev     n\n   &lt;chr&gt;        &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;      &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt; &lt;int&gt;\n 1 Campo Mourão Sul    82       AACHECK     2017     5701. 2.11e5     30       3\n 2 Campo Mourão Sul    82       ABACUS HC…  2017     7053. 2.11e5     20       3\n 3 Campo Mourão Sul    82       OSKESTRA …  2017     8018. 2.11e5     17.7     3\n 4 Campo Mourão Sul    82       UNIZEB GO…  2017     6692. 2.11e5     26.7     3\n 5 Campo Mourão Sul    83       AACHECK     2017     4948. 7.00e5     30.3     3\n 6 Campo Mourão Sul    83       ABACUS HC…  2017     5774. 7.00e5     10       3\n 7 Campo Mourão Sul    83       OSKESTRA …  2017     4872. 7.00e5      8       3\n 8 Campo Mourão Sul    83       UNIZEB GO…  2017     4400. 7.00e5     19       3\n 9 Campo Mourão Sul    86       AACHECK     2016     6037. 1.22e5     25       3\n10 Campo Mourão Sul    86       ABACUS HC…  2016     6612. 1.22e5      4       3\n# ℹ 14 more rows\n# ℹ 5 more variables: vi_yld &lt;dbl&gt;, sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;,\n#   design &lt;dbl&gt;\n\n\n#D5\n\ndesign5 = prod3 %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"BELYAN  (Controle Positivo)\")) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(5, length(produto))) %&gt;% \n  filter(n2 == 2) %&gt;% \n  filter(n3 == 2)\ndesign4\n\n# A tibble: 24 × 14\n# Groups:   ensaio_1 [6]\n   municipio    regiao ensaio_1 produto      ano mean_prod mean_V mean_sev     n\n   &lt;chr&gt;        &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;      &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt; &lt;int&gt;\n 1 Campo Mourão Sul    82       AACHECK     2017     5701. 2.11e5     30       3\n 2 Campo Mourão Sul    82       ABACUS HC…  2017     7053. 2.11e5     20       3\n 3 Campo Mourão Sul    82       OSKESTRA …  2017     8018. 2.11e5     17.7     3\n 4 Campo Mourão Sul    82       UNIZEB GO…  2017     6692. 2.11e5     26.7     3\n 5 Campo Mourão Sul    83       AACHECK     2017     4948. 7.00e5     30.3     3\n 6 Campo Mourão Sul    83       ABACUS HC…  2017     5774. 7.00e5     10       3\n 7 Campo Mourão Sul    83       OSKESTRA …  2017     4872. 7.00e5      8       3\n 8 Campo Mourão Sul    83       UNIZEB GO…  2017     4400. 7.00e5     19       3\n 9 Campo Mourão Sul    86       AACHECK     2016     6037. 1.22e5     25       3\n10 Campo Mourão Sul    86       ABACUS HC…  2016     6612. 1.22e5      4       3\n# ℹ 14 more rows\n# ℹ 5 more variables: vi_yld &lt;dbl&gt;, sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;,\n#   design &lt;dbl&gt;\n\n\n#joining the designers\n\nyld_design = rbind(design1, design2, design3, design4, design5)\n\n\nyld_design %&gt;% \n  group_by(ensaio_1,design) %&gt;% \n  summarize() %&gt;% \n  tabyl(design)\n\n design  n    percent\n      1  4 0.12903226\n      2 16 0.51612903\n      3  3 0.09677419\n      4  6 0.19354839\n      5  2 0.06451613\n\n\nInconsistency\n\nmv_yld_design &lt;- rma.mv(mean_prod,\n  vi_yld,\n  mods = ~ produto * design,\n  random = list(~ 1 | ensaio_1 / design / produto),\n  struct = \"UN\",\n  method = \"ML\",\n  control = list(optimizer = \"nlm\"),\n  data = yld_design)\n\nmv_yld_design\n\n\nMultivariate Meta-Analysis Model (k = 189; method: ML)\n\nVariance Components:\n\n                  estim       sqrt  nlvls  fixed                   factor \nsigma^2.1  1162023.9402  1077.9721     31     no                 ensaio_1 \nsigma^2.2  1162023.9430  1077.9721     31     no          ensaio_1/design \nsigma^2.3    79415.6562   281.8078    189     no  ensaio_1/design/produto \n\nTest for Residual Heterogeneity:\nQE(df = 171) = 8866.9067, p-val &lt; .0001\n\nTest of Moderators (coefficients 2:18):\nQM(df = 17) = 191.8240, p-val &lt; .0001\n\nModel Results:\n\n                                                             estimate \nintrcpt                                                     8676.6757 \nprodutoABACUS HC (Controle Positivo)                         593.9737 \nprodutoBELYAN  (Controle Positivo)                           703.7115 \nprodutoFOX XPRO                                              483.3756 \nprodutoOSKESTRA SC                                           406.1211 \nprodutoPREVINIL                                              343.9575 \nprodutotrat_A20259                                          1049.9743 \nprodutoTRIDIUM                                              -559.7904 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)         2106.8579 \ndesign                                                      -857.1270 \nprodutoABACUS HC (Controle Positivo):design                   49.1625 \nprodutoBELYAN  (Controle Positivo):design                    137.1546 \nprodutoFOX XPRO:design                                       246.2493 \nprodutoOSKESTRA SC:design                                    210.6499 \nprodutoPREVINIL:design                                       180.6118 \nprodutotrat_A20259:design                                    -41.8523 \nprodutoTRIDIUM:design                                        630.7642 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):design  -376.0244 \n                                                                   se     zval \nintrcpt                                                      695.7311  12.4713 \nprodutoABACUS HC (Controle Positivo)                         268.9204   2.2087 \nprodutoBELYAN  (Controle Positivo)                           253.2115   2.7791 \nprodutoFOX XPRO                                              362.9555   1.3318 \nprodutoOSKESTRA SC                                           268.9204   1.5102 \nprodutoPREVINIL                                              386.8287   0.8892 \nprodutotrat_A20259                                           483.0808   2.1735 \nprodutoTRIDIUM                                               555.3254  -1.0080 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)         1022.8754   2.0597 \ndesign                                                       249.1597  -3.4401 \nprodutoABACUS HC (Controle Positivo):design                  102.7687   0.4784 \nprodutoBELYAN  (Controle Positivo):design                    101.9846   1.3449 \nprodutoFOX XPRO:design                                       166.7015   1.4772 \nprodutoOSKESTRA SC:design                                    102.7687   2.0497 \nprodutoPREVINIL:design                                       166.6902   1.0835 \nprodutotrat_A20259:design                                    251.9595  -0.1661 \nprodutoTRIDIUM:design                                        245.7871   2.5663 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):design   284.9971  -1.3194 \n                                                              pval       ci.lb \nintrcpt                                                     &lt;.0001   7313.0677 \nprodutoABACUS HC (Controle Positivo)                        0.0272     66.8994 \nprodutoBELYAN  (Controle Positivo)                          0.0055    207.4260 \nprodutoFOX XPRO                                             0.1829   -228.0041 \nprodutoOSKESTRA SC                                          0.1310   -120.9532 \nprodutoPREVINIL                                             0.3739   -414.2127 \nprodutotrat_A20259                                          0.0297    103.1532 \nprodutoTRIDIUM                                              0.3134  -1648.2082 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)         0.0394    102.0590 \ndesign                                                      0.0006  -1345.4711 \nprodutoABACUS HC (Controle Positivo):design                 0.6324   -152.2605 \nprodutoBELYAN  (Controle Positivo):design                   0.1787    -62.7315 \nprodutoFOX XPRO:design                                      0.1396    -80.4797 \nprodutoOSKESTRA SC:design                                   0.0404      9.2269 \nprodutoPREVINIL:design                                      0.2786   -146.0949 \nprodutotrat_A20259:design                                   0.8681   -535.6839 \nprodutoTRIDIUM:design                                       0.0103    149.0303 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):design  0.1870   -934.6085 \n                                                                 ci.ub      \nintrcpt                                                     10040.2836  *** \nprodutoABACUS HC (Controle Positivo)                         1121.0480    * \nprodutoBELYAN  (Controle Positivo)                           1199.9969   ** \nprodutoFOX XPRO                                              1194.7553      \nprodutoOSKESTRA SC                                            933.1955      \nprodutoPREVINIL                                              1102.1278      \nprodutotrat_A20259                                           1996.7953    * \nprodutoTRIDIUM                                                528.6273      \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)          4111.6568    * \ndesign                                                       -368.7830  *** \nprodutoABACUS HC (Controle Positivo):design                   250.5855      \nprodutoBELYAN  (Controle Positivo):design                     337.0407      \nprodutoFOX XPRO:design                                        572.9783      \nprodutoOSKESTRA SC:design                                     412.0729    * \nprodutoPREVINIL:design                                        507.3186      \nprodutotrat_A20259:design                                     451.9793      \nprodutoTRIDIUM:design                                        1112.4980    * \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):design    182.5596      \n\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nanova(mv_yld_design, btt = 11:18)\n\n\nTest of Moderators (coefficients 11:18):\nQM(df = 8) = 13.1680, p-val = 0.1062"
  },
  {
    "objectID": "sev.html",
    "href": "sev.html",
    "title": "Meta-analysis for the variable severity",
    "section": "",
    "text": "library(gsheet)\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(tidyr)\nlibrary(metafor)\nlibrary(multcomp)\n library(emmeans)\n\n\n\n\n\ndat1 = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1joo0WaR7yNWZavGPbwQMjiFPpWHErtGL/edit?gid=1485993259#gid=1485993259\")\n\ndat1 |&gt; ggplot(aes(produto, mean_sev)) +\n  geom_boxplot()\n\n\n\n\n\n\n\noutliers &lt;- dat1 %&gt;%\n  filter(produto == \"trat_A20259\") %&gt;%\n  group_by(produto, bloco) %&gt;%\n  mutate(outlier = mean_sev &lt; quantile(mean_sev, 0.25) - 1.5 * IQR(mean_sev) | \n                   mean_sev &gt; quantile(mean_sev, 0.75) + 1.5 * IQR(mean_sev)) %&gt;%\n  filter(outlier) %&gt;%\n  dplyr::select(ensaio_1, mean_sev)\n\nprint(outliers)\n\n# A tibble: 7 × 4\n# Groups:   produto, bloco [4]\n  produto     bloco ensaio_1 mean_sev\n  &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 trat_A20259     3       25     13.6\n2 trat_A20259     4       25     16.5\n3 trat_A20259     1       43     19.8\n4 trat_A20259     2       43     21.4\n5 trat_A20259     3       43     22.3\n6 trat_A20259     4       43     22.3\n7 trat_A20259     3       50     15.5\n\n\n\n\n\n\n# Converting variables to factors  \ndat1$bloco = as.factor(dat1$bloco)   # Block as a factor  \ndat1$produto = as.factor(dat1$produto)   # fungicide as a factor  \ndat1$ensaio_1 = as.factor(dat1$ensaio_1)  # Trial as a factor  \n\nstr(dat1)\n\nspc_tbl_ [1,748 × 9] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ municipio: chr [1:1748] \"Anápolis\" \"Anápolis\" \"Anápolis\" \"Anápolis\" ...\n $ bloco    : Factor w/ 4 levels \"1\",\"2\",\"3\",\"4\": 1 1 1 1 1 1 1 2 2 2 ...\n $ ensaio_1 : Factor w/ 78 levels \"5\",\"6\",\"7\",\"8\",..: 39 39 39 39 39 39 39 39 39 39 ...\n $ produto  : Factor w/ 9 levels \"AACHECK\",\"ABACUS HC (Controle Positivo)\",..: 1 2 3 4 5 8 7 1 2 3 ...\n $ ano      : num [1:1748] 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 ...\n $ estado   : chr [1:1748] \"GO\" \"GO\" \"GO\" \"GO\" ...\n $ regiao   : chr [1:1748] \"Centro-Oeste\" \"Centro-Oeste\" \"Centro-Oeste\" \"Centro-Oeste\" ...\n $ mean_sev : num [1:1748] 33 10 13 10 10 13 13 30 12 10 ...\n $ mean_prod: num [1:1748] 5910 7570 7510 8310 8450 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   municipio = col_character(),\n  ..   bloco = col_double(),\n  ..   ensaio_1 = col_double(),\n  ..   produto = col_character(),\n  ..   ano = col_double(),\n  ..   estado = col_character(),\n  ..   regiao = col_character(),\n  ..   mean_sev = col_double(),\n  ..   mean_prod = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n# Performing ANOVA to obtain Sum of Squares (Sq) and Mean Squares (MeanSq)\ndat2 &lt;- dat1 %&gt;%\n  filter(mean_sev != \"NA\")|&gt; \n  group_by(ensaio_1) %&gt;%\n  dplyr::select(ensaio_1, produto, bloco, mean_sev) %&gt;% \n  nest(data = c(produto, bloco, mean_sev)) %&gt;% \n  dplyr::mutate(\n    aov_results = map(data, ~ tidy(aov(mean_sev ~ produto + bloco, data = .x)))\n  ) %&gt;%\n  unnest(aov_results) %&gt;%\n  filter(term == \"Residuals\")|&gt; \n  dplyr::select(1,6)\n\n\n\n\n\n#First: Merge the Original Spreadsheet (dat1) with the Spreadsheet Containing the ANOVA Results; \ndat3 &lt;- left_join(dat1, dat2) |&gt; \n group_by(municipio,regiao, ensaio_1, produto, ano) %&gt;% \n  summarise(mean_sev = mean(mean_sev+0.1), #severity mean\n            mean_V = mean(meansq), #SQ mean\n            n = n()) |&gt; \n  mutate(log_sev = log(mean_sev)) #Mean of the transformed severity\n\n\n#Calculating adjusted variance of severity\n  dat3$vi_sev = with(dat3, mean_V / (n * mean_sev^2))\n\n\n\n\n\n\nDifferences in structures were tested, and the one that best fit was the unstructured. The others are commented out.\n\n net_arm_UN_first &lt;- rma.mv(\n   log_sev,\n   vi_sev,\n   mods = ~ produto,\n   method = \"ML\",\n   random = list( ~ produto | factor(ensaio_1)),\n   struct = \"HCS\",\n   control = list(optimizer = \"nlm\"),\n   data = dat3)\n summary(net_arm_UN_first)\n\n\nMultivariate Meta-Analysis Model (k = 445; method: ML)\n\n   logLik   Deviance        AIC        BIC       AICc   \n-306.4493  1613.2329   650.8986   728.7620   652.6868   \n\nVariance Components:\n\nouter factor: factor(ensaio_1) (nlvls = 78)\ninner factor: produto          (nlvls = 9)\n\n            estim    sqrt  k.lvl  fixed \ntau^2.1    0.7859  0.8865     78     no \ntau^2.2    0.8148  0.9027     65     no \ntau^2.3    1.0767  1.0376     33     no \ntau^2.4    0.9735  0.9867     49     no \ntau^2.5    0.9379  0.9685     60     no \ntau^2.6    0.9177  0.9580     34     no \ntau^2.7    0.9305  0.9646     35     no \ntau^2.8    0.8601  0.9274     53     no \ntau^2.9    0.6800  0.8246     38     no \nrho        0.9148                    no \n                                                  level \ntau^2.1                                         AACHECK \ntau^2.2                   ABACUS HC (Controle Positivo) \ntau^2.3                     BELYAN  (Controle Positivo) \ntau^2.4                                        FOX XPRO \ntau^2.5                                     OSKESTRA SC \ntau^2.6                                        PREVINIL \ntau^2.7                                     trat_A20259 \ntau^2.8                                         TRIDIUM \ntau^2.9    UNIZEB GOLD (Controle Positivo, multissítio) \nrho                                                     \n\nTest for Residual Heterogeneity:\nQE(df = 436) = 55256.5347, p-val &lt; .0001\n\nTest of Moderators (coefficients 2:9):\nQM(df = 8) = 823.1008, p-val &lt; .0001\n\nModel Results:\n\n                                                     estimate      se      zval \nintrcpt                                                2.8850  0.1007   28.6478 \nprodutoABACUS HC (Controle Positivo)                  -0.8804  0.0497  -17.7189 \nprodutoBELYAN  (Controle Positivo)                    -1.2339  0.0818  -15.0837 \nprodutoFOX XPRO                                       -1.1689  0.0633  -18.4557 \nprodutoOSKESTRA SC                                    -1.1748  0.0576  -20.4106 \nprodutoPREVINIL                                       -0.9230  0.0681  -13.5446 \nprodutotrat_A20259                                    -1.2486  0.0736  -16.9612 \nprodutoTRIDIUM                                        -1.0853  0.0563  -19.2910 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)   -0.7601  0.0583  -13.0287 \n                                                       pval    ci.lb    ci.ub \nintrcpt                                              &lt;.0001   2.6876   3.0823 \nprodutoABACUS HC (Controle Positivo)                 &lt;.0001  -0.9778  -0.7830 \nprodutoBELYAN  (Controle Positivo)                   &lt;.0001  -1.3942  -1.0736 \nprodutoFOX XPRO                                      &lt;.0001  -1.2931  -1.0448 \nprodutoOSKESTRA SC                                   &lt;.0001  -1.2876  -1.0620 \nprodutoPREVINIL                                      &lt;.0001  -1.0566  -0.7895 \nprodutotrat_A20259                                   &lt;.0001  -1.3929  -1.1043 \nprodutoTRIDIUM                                       &lt;.0001  -1.1955  -0.9750 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)  &lt;.0001  -0.8745  -0.6458 \n                                                         \nintrcpt                                              *** \nprodutoABACUS HC (Controle Positivo)                 *** \nprodutoBELYAN  (Controle Positivo)                   *** \nprodutoFOX XPRO                                      *** \nprodutoOSKESTRA SC                                   *** \nprodutoPREVINIL                                      *** \nprodutotrat_A20259                                   *** \nprodutoTRIDIUM                                       *** \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)  *** \n\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n #salvando\n m1 &lt;- data.frame(cbind(\n   (net_arm_UN_first$b),\n   (net_arm_UN_first$ci.lb),\n   (net_arm_UN_first$ci.ub),\n   (net_arm_UN_first$se)))\n \n m1 = m1\n   names (m1) = c(\"log_sev\", \"sev_lw\", \"sev_up\", \"se\")\n   \n  m1 &lt;- m1 |&gt;\n mutate(fungicide = c(\"check\", \"ABACUSHC\", \"BAS75302F\", \"FOX XPRO\", \"OSKESTRASC\", \"PREVINIL\", \"A20259\", \"TRIDIUM\", \"UNIZEBGOLD\")) \nm1 &lt;- m1 |&gt;  \n    dplyr::select(fungicide, log_sev, sev_lw, sev_up,se)\nlibrary(writexl)\n#write_xlsx(m1, \"results_log_Sev.xlsx\")\n\n\n\n\n\n#The glht() function is used to perform multiple comparisons between the groups adjusted by the model\n net_arm_UN_comp &lt;-\n   summary(glht(\n   model = net_arm_UN_first,\n   linfct = cbind(contrMat(rep(1, 9), type = \"Tukey\")) ))\n\n  net_arm_UN_comp\n\n\n     Simultaneous Tests for General Linear Hypotheses\n\nFit: rma.mv(yi = log_sev, V = vi_sev, mods = ~produto, random = list(~produto | \n    factor(ensaio_1)), struct = \"HCS\", data = dat3, method = \"ML\", \n    control = list(optimizer = \"nlm\"))\n\nLinear Hypotheses:\n            Estimate Std. Error z value Pr(&gt;|z|)    \n2 - 1 == 0 -3.765334   0.118775 -31.701   &lt;0.001 ***\n3 - 1 == 0 -4.118857   0.124592 -33.059   &lt;0.001 ***\n4 - 1 == 0 -4.053876   0.117879 -34.390   &lt;0.001 ***\n5 - 1 == 0 -4.059782   0.116520 -34.842   &lt;0.001 ***\n6 - 1 == 0 -3.807976   0.123028 -30.952   &lt;0.001 ***\n7 - 1 == 0 -4.133568   0.125541 -32.926   &lt;0.001 ***\n8 - 1 == 0 -3.970207   0.119517 -33.219   &lt;0.001 ***\n9 - 1 == 0 -3.645086   0.129101 -28.234   &lt;0.001 ***\n3 - 2 == 0 -0.353524   0.085017  -4.158   &lt;0.001 ***\n4 - 2 == 0 -0.288542   0.065770  -4.387   &lt;0.001 ***\n5 - 2 == 0 -0.294449   0.060432  -4.872   &lt;0.001 ***\n6 - 2 == 0 -0.042642   0.071895  -0.593   0.9996    \n7 - 2 == 0 -0.368234   0.075921  -4.850   &lt;0.001 ***\n8 - 2 == 0 -0.204873   0.059376  -3.450   0.0150 *  \n9 - 2 == 0  0.120247   0.063046   1.907   0.5910    \n4 - 3 == 0  0.064981   0.092164   0.705   0.9986    \n5 - 3 == 0  0.059075   0.088075   0.671   0.9990    \n6 - 3 == 0  0.310882   0.096471   3.223   0.0322 *  \n7 - 3 == 0 -0.014710   0.098800  -0.149   1.0000    \n8 - 3 == 0  0.148651   0.088234   1.685   0.7412    \n9 - 3 == 0  0.473771   0.093309   5.077   &lt;0.001 ***\n5 - 4 == 0 -0.005906   0.070507  -0.084   1.0000    \n6 - 4 == 0  0.245900   0.080772   3.044   0.0548 .  \n7 - 4 == 0 -0.079692   0.082645  -0.964   0.9878    \n8 - 4 == 0  0.083669   0.069501   1.204   0.9518    \n9 - 4 == 0  0.408789   0.075987   5.380   &lt;0.001 ***\n6 - 5 == 0  0.251806   0.076846   3.277   0.0267 *  \n7 - 5 == 0 -0.073785   0.079906  -0.923   0.9908    \n8 - 5 == 0  0.089576   0.065480   1.368   0.9024    \n9 - 5 == 0  0.414696   0.069942   5.929   &lt;0.001 ***\n7 - 6 == 0 -0.325592   0.091728  -3.550   0.0108 *  \n8 - 6 == 0 -0.162231   0.075747  -2.142   0.4257    \n9 - 6 == 0  0.162889   0.075678   2.152   0.4191    \n8 - 7 == 0  0.163361   0.079439   2.056   0.4855    \n9 - 7 == 0  0.488481   0.086675   5.636   &lt;0.001 ***\n9 - 8 == 0  0.325120   0.068855   4.722   &lt;0.001 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n(Adjusted p values reported -- single-step method)\n\n plot(net_arm_UN_comp)\n\n\n\n\n\n\n\n library(emmeans)\nlibrary(multcomp)\nmeta &lt;- emmprep(net_arm_UN_first)\nemmeans_meta &lt;- emmeans(meta, ~ produto, type = \"response\")\ncld_result &lt;- data.frame(cld(emmeans_meta, decreasing = TRUE, Letters = LETTERS))\ncld_result\n\n                                       produto   emmean        SE  df asymp.LCL\n7                                      AACHECK 2.884954 0.1007043 Inf  2.687577\n3 UNIZEB GOLD (Controle Positivo, multissítio) 2.124821 0.1020948 Inf  1.924719\n5                ABACUS HC (Controle Positivo) 2.004574 0.1054163 Inf  1.797962\n4                                     PREVINIL 1.961932 0.1201447 Inf  1.726452\n8                                      TRIDIUM 1.799701 0.1110315 Inf  1.582083\n6                                     FOX XPRO 1.716032 0.1200428 Inf  1.480752\n2                                  OSKESTRA SC 1.710125 0.1154649 Inf  1.483818\n9                  BELYAN  (Controle Positivo) 1.651050 0.1346971 Inf  1.387049\n1                                  trat_A20259 1.636340 0.1239388 Inf  1.393424\n  asymp.UCL .group\n7  3.082331   A   \n3  2.324923    B  \n5  2.211186    B  \n4  2.197411    BC \n8  2.017319     CD\n6  1.951311     CD\n2  1.936432      D\n9  1.915052      D\n1  1.879255      D\n\n\n\n efficacy_index &lt;- data.frame(cbind(\n   (1 - exp(net_arm_UN_first$b)) * 100,\n   (1 - exp(net_arm_UN_first$ci.lb)) * 100,\n   (1 - exp(net_arm_UN_first$ci.ub)) * 100))\n\n# #Organize the data.frame\n efficacy_index = efficacy_index\n   names (efficacy_index) = c(\"efficacy\", \"efficacy_up\", \"efficacy_lw\")\n  \nefficacy_index &lt;- efficacy_index |&gt;\n  mutate(fungicide = c(\"check\", \"ABACUSHC\", \"BAS75302F\", \"FOX XPRO\", \"OSKESTRASC\", \"PREVINIL\", \"A20259\", \"TRIDIUM\", \"UNIZEBGOLD\")) |&gt;\n  filter(fungicide != \"check\") |&gt;\n  dplyr::select(fungicide, efficacy, efficacy_lw, efficacy_up)\n\nefficacy_index\n\n                                                     fungicide efficacy\nprodutoABACUS HC (Controle Positivo)                  ABACUSHC 58.53746\nprodutoBELYAN  (Controle Positivo)                   BAS75302F 70.88462\nprodutoFOX XPRO                                       FOX XPRO 68.92984\nprodutoOSKESTRA SC                                  OSKESTRASC 69.11280\nprodutoPREVINIL                                       PREVINIL 60.26834\nprodutotrat_A20259                                      A20259 71.30978\nprodutoTRIDIUM                                         TRIDIUM 66.21836\nprodutoUNIZEB GOLD (Controle Positivo, multissítio) UNIZEBGOLD 53.23956\n                                                    efficacy_lw efficacy_up\nprodutoABACUS HC (Controle Positivo)                   54.29658    62.38482\nprodutoBELYAN  (Controle Positivo)                     65.82143    75.19775\nprodutoFOX XPRO                                        64.82324    72.55702\nprodutoOSKESTRA SC                                     65.42410    72.40798\nprodutoPREVINIL                                        54.59083    65.23600\nprodutotrat_A20259                                     66.85670    75.16455\nprodutoTRIDIUM                                         62.28042    69.74518\nprodutoUNIZEB GOLD (Controle Positivo, multissítio)    47.57479    58.29224\n\nlibrary(readr)\n\nwrite_xlsx(efficacy_index, \"efficacy_res.xlsx\")\n\nDisease pressure\nMedian\n\n#linha de base\nlibrary(janitor)\nAACHECK = dat1 |&gt; filter(produto == \"AACHECK\")\nsummary(AACHECK)\n\n  municipio         bloco     ensaio_1                            produto   \n Length:304         1:78   5      :  4   AACHECK                      :304  \n Class :character   2:78   6      :  4   ABACUS HC (Controle Positivo):  0  \n Mode  :character   3:78   7      :  4   BELYAN  (Controle Positivo)  :  0  \n                    4:70   8      :  4   FOX XPRO                     :  0  \n                           9      :  4   OSKESTRA SC                  :  0  \n                           10     :  4   PREVINIL                     :  0  \n                           (Other):280   (Other)                      :  0  \n      ano          estado             regiao             mean_sev    \n Min.   :2016   Length:304         Length:304         Min.   : 0.60  \n 1st Qu.:2019   Class :character   Class :character   1st Qu.:12.68  \n Median :2021   Mode  :character   Mode  :character   Median :21.35  \n Mean   :2021                                         Mean   :23.45  \n 3rd Qu.:2022                                         3rd Qu.:30.50  \n Max.   :2024                                         Max.   :80.00  \n                                                                     \n   mean_prod    \n Min.   : 3414  \n 1st Qu.: 5062  \n Median : 6124  \n Mean   : 6536  \n 3rd Qu.: 7729  \n Max.   :12361  \n NA's   :186    \n\nmed_sev &lt;- dat3 %&gt;%\n  mutate(sev_check_class = case_when(\n      mean_sev &lt; 21 ~ \"low\",\n      mean_sev &gt;= 21 ~ \"high\"))\nmed_sev %&gt;%\n  tabyl(produto, sev_check_class)\n\n                                      produto high low\n                                      AACHECK   43  35\n                ABACUS HC (Controle Positivo)    7  58\n                  BELYAN  (Controle Positivo)    1  32\n                                     FOX XPRO    3  46\n                                  OSKESTRA SC    2  58\n                                     PREVINIL    3  31\n                                  trat_A20259    1  34\n                                      TRIDIUM    3  50\n UNIZEB GOLD (Controle Positivo, multissítio)    5  33\n\nmodel_mm &lt;- rma.mv(\n   log_sev ,\n   vi_sev,\n   mods = ~ produto * factor(sev_check_class),\n   method = \"ML\",\n   random = list( ~ produto | factor(ensaio_1)),\n   struct = \"HCS\",\n   control = list(optimizer = \"nlm\"),\n   data = med_sev)\nanova(model_mm, btt = 5:6) \n\n\nTest of Moderators (coefficients 5:6):\nQM(df = 2) = 16.9409, p-val = 0.0002\n\n summary(model_mm)\n\n\nMultivariate Meta-Analysis Model (k = 445; method: ML)\n\n   logLik   Deviance        AIC        BIC       AICc   \n-282.6962  1565.7268   621.3925   736.1385   625.2963   \n\nVariance Components:\n\nouter factor: factor(ensaio_1) (nlvls = 78)\ninner factor: produto          (nlvls = 9)\n\n            estim    sqrt  k.lvl  fixed \ntau^2.1    0.6387  0.7992     78     no \ntau^2.2    0.6848  0.8275     65     no \ntau^2.3    0.9652  0.9825     33     no \ntau^2.4    0.8226  0.9070     49     no \ntau^2.5    0.8405  0.9168     60     no \ntau^2.6    0.8680  0.9317     34     no \ntau^2.7    0.7967  0.8926     35     no \ntau^2.8    0.7927  0.8903     53     no \ntau^2.9    0.6040  0.7772     38     no \nrho        0.9155                    no \n                                                  level \ntau^2.1                                         AACHECK \ntau^2.2                   ABACUS HC (Controle Positivo) \ntau^2.3                     BELYAN  (Controle Positivo) \ntau^2.4                                        FOX XPRO \ntau^2.5                                     OSKESTRA SC \ntau^2.6                                        PREVINIL \ntau^2.7                                     trat_A20259 \ntau^2.8                                         TRIDIUM \ntau^2.9    UNIZEB GOLD (Controle Positivo, multissítio) \nrho                                                     \n\nTest for Residual Heterogeneity:\nQE(df = 427) = 29490.0831, p-val &lt; .0001\n\nTest of Moderators (coefficients 2:18):\nQM(df = 17) = 970.5456, p-val &lt; .0001\n\nModel Results:\n\n                                                                                estimate \nintrcpt                                                                           2.9976 \nprodutoABACUS HC (Controle Positivo)                                             -0.4736 \nprodutoBELYAN  (Controle Positivo)                                               -0.6112 \nprodutoFOX XPRO                                                                  -0.5566 \nprodutoOSKESTRA SC                                                               -0.6313 \nprodutoPREVINIL                                                                  -0.6308 \nprodutotrat_A20259                                                               -0.5461 \nprodutoTRIDIUM                                                                   -0.7534 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                              -0.4902 \nfactor(sev_check_class)low                                                       -0.2493 \nprodutoABACUS HC (Controle Positivo):factor(sev_check_class)low                  -0.3280 \nprodutoBELYAN  (Controle Positivo):factor(sev_check_class)low                    -0.5213 \nprodutoFOX XPRO:factor(sev_check_class)low                                       -0.5292 \nprodutoOSKESTRA SC:factor(sev_check_class)low                                    -0.4323 \nprodutoPREVINIL:factor(sev_check_class)low                                       -0.1815 \nprodutotrat_A20259:factor(sev_check_class)low                                    -0.6202 \nprodutoTRIDIUM:factor(sev_check_class)low                                        -0.2120 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):factor(sev_check_class)low   -0.1662 \n                                                                                    se \nintrcpt                                                                         0.0954 \nprodutoABACUS HC (Controle Positivo)                                            0.1181 \nprodutoBELYAN  (Controle Positivo)                                              0.3341 \nprodutoFOX XPRO                                                                 0.1774 \nprodutoOSKESTRA SC                                                              0.2217 \nprodutoPREVINIL                                                                 0.1858 \nprodutotrat_A20259                                                              0.2918 \nprodutoTRIDIUM                                                                  0.1807 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                             0.1351 \nfactor(sev_check_class)low                                                      0.0664 \nprodutoABACUS HC (Controle Positivo):factor(sev_check_class)low                 0.1330 \nprodutoBELYAN  (Controle Positivo):factor(sev_check_class)low                   0.3449 \nprodutoFOX XPRO:factor(sev_check_class)low                                      0.1908 \nprodutoOSKESTRA SC:factor(sev_check_class)low                                   0.2310 \nprodutoPREVINIL:factor(sev_check_class)low                                      0.2015 \nprodutotrat_A20259:factor(sev_check_class)low                                   0.3022 \nprodutoTRIDIUM:factor(sev_check_class)low                                       0.1923 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):factor(sev_check_class)low  0.1523 \n                                                                                   zval \nintrcpt                                                                         31.4095 \nprodutoABACUS HC (Controle Positivo)                                            -4.0090 \nprodutoBELYAN  (Controle Positivo)                                              -1.8294 \nprodutoFOX XPRO                                                                 -3.1372 \nprodutoOSKESTRA SC                                                              -2.8470 \nprodutoPREVINIL                                                                 -3.3951 \nprodutotrat_A20259                                                              -1.8715 \nprodutoTRIDIUM                                                                  -4.1700 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                             -3.6286 \nfactor(sev_check_class)low                                                      -3.7566 \nprodutoABACUS HC (Controle Positivo):factor(sev_check_class)low                 -2.4666 \nprodutoBELYAN  (Controle Positivo):factor(sev_check_class)low                   -1.5116 \nprodutoFOX XPRO:factor(sev_check_class)low                                      -2.7732 \nprodutoOSKESTRA SC:factor(sev_check_class)low                                   -1.8716 \nprodutoPREVINIL:factor(sev_check_class)low                                      -0.9006 \nprodutotrat_A20259:factor(sev_check_class)low                                   -2.0525 \nprodutoTRIDIUM:factor(sev_check_class)low                                       -1.1026 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):factor(sev_check_class)low  -1.0910 \n                                                                                  pval \nintrcpt                                                                         &lt;.0001 \nprodutoABACUS HC (Controle Positivo)                                            &lt;.0001 \nprodutoBELYAN  (Controle Positivo)                                              0.0673 \nprodutoFOX XPRO                                                                 0.0017 \nprodutoOSKESTRA SC                                                              0.0044 \nprodutoPREVINIL                                                                 0.0007 \nprodutotrat_A20259                                                              0.0613 \nprodutoTRIDIUM                                                                  &lt;.0001 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                             0.0003 \nfactor(sev_check_class)low                                                      0.0002 \nprodutoABACUS HC (Controle Positivo):factor(sev_check_class)low                 0.0136 \nprodutoBELYAN  (Controle Positivo):factor(sev_check_class)low                   0.1306 \nprodutoFOX XPRO:factor(sev_check_class)low                                      0.0056 \nprodutoOSKESTRA SC:factor(sev_check_class)low                                   0.0613 \nprodutoPREVINIL:factor(sev_check_class)low                                      0.3678 \nprodutotrat_A20259:factor(sev_check_class)low                                   0.0401 \nprodutoTRIDIUM:factor(sev_check_class)low                                       0.2702 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):factor(sev_check_class)low  0.2753 \n                                                                                  ci.lb \nintrcpt                                                                          2.8105 \nprodutoABACUS HC (Controle Positivo)                                            -0.7051 \nprodutoBELYAN  (Controle Positivo)                                              -1.2661 \nprodutoFOX XPRO                                                                 -0.9043 \nprodutoOSKESTRA SC                                                              -1.0658 \nprodutoPREVINIL                                                                 -0.9950 \nprodutotrat_A20259                                                              -1.1180 \nprodutoTRIDIUM                                                                  -1.1075 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                             -0.7550 \nfactor(sev_check_class)low                                                      -0.3794 \nprodutoABACUS HC (Controle Positivo):factor(sev_check_class)low                 -0.5886 \nprodutoBELYAN  (Controle Positivo):factor(sev_check_class)low                   -1.1973 \nprodutoFOX XPRO:factor(sev_check_class)low                                      -0.9031 \nprodutoOSKESTRA SC:factor(sev_check_class)low                                   -0.8851 \nprodutoPREVINIL:factor(sev_check_class)low                                      -0.5765 \nprodutotrat_A20259:factor(sev_check_class)low                                   -1.2125 \nprodutoTRIDIUM:factor(sev_check_class)low                                       -0.5890 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):factor(sev_check_class)low  -0.4646 \n                                                                                  ci.ub \nintrcpt                                                                          3.1846 \nprodutoABACUS HC (Controle Positivo)                                            -0.2421 \nprodutoBELYAN  (Controle Positivo)                                               0.0436 \nprodutoFOX XPRO                                                                 -0.2089 \nprodutoOSKESTRA SC                                                              -0.1967 \nprodutoPREVINIL                                                                 -0.2667 \nprodutotrat_A20259                                                               0.0258 \nprodutoTRIDIUM                                                                  -0.3993 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                             -0.2254 \nfactor(sev_check_class)low                                                      -0.1192 \nprodutoABACUS HC (Controle Positivo):factor(sev_check_class)low                 -0.0674 \nprodutoBELYAN  (Controle Positivo):factor(sev_check_class)low                    0.1546 \nprodutoFOX XPRO:factor(sev_check_class)low                                      -0.1552 \nprodutoOSKESTRA SC:factor(sev_check_class)low                                    0.0204 \nprodutoPREVINIL:factor(sev_check_class)low                                       0.2135 \nprodutotrat_A20259:factor(sev_check_class)low                                   -0.0280 \nprodutoTRIDIUM:factor(sev_check_class)low                                        0.1649 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):factor(sev_check_class)low   0.1323 \n                                                                                    \nintrcpt                                                                         *** \nprodutoABACUS HC (Controle Positivo)                                            *** \nprodutoBELYAN  (Controle Positivo)                                                . \nprodutoFOX XPRO                                                                  ** \nprodutoOSKESTRA SC                                                               ** \nprodutoPREVINIL                                                                 *** \nprodutotrat_A20259                                                                . \nprodutoTRIDIUM                                                                  *** \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                             *** \nfactor(sev_check_class)low                                                      *** \nprodutoABACUS HC (Controle Positivo):factor(sev_check_class)low                   * \nprodutoBELYAN  (Controle Positivo):factor(sev_check_class)low                       \nprodutoFOX XPRO:factor(sev_check_class)low                                       ** \nprodutoOSKESTRA SC:factor(sev_check_class)low                                     . \nprodutoPREVINIL:factor(sev_check_class)low                                          \nprodutotrat_A20259:factor(sev_check_class)low                                     * \nprodutoTRIDIUM:factor(sev_check_class)low                                           \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):factor(sev_check_class)low      \n\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\ntable(med_sev$produto, med_sev$sev_check_class)\n\n                                              \n                                               high low\n  AACHECK                                        43  35\n  ABACUS HC (Controle Positivo)                   7  58\n  BELYAN  (Controle Positivo)                     1  32\n  FOX XPRO                                        3  46\n  OSKESTRA SC                                     2  58\n  PREVINIL                                        3  31\n  trat_A20259                                     1  34\n  TRIDIUM                                         3  50\n  UNIZEB GOLD (Controle Positivo, multissítio)    5  33\n\n#openxlsx::write.xlsx(efficacy_index, here(\"efficacy_class.xlsx\"), colNames = TRUE)\n\n#organizando a saida do modelo\n\nlibrary(here)\nreg1 = data.frame(model_mm$beta, model_mm$se, model_mm$ci.lb, model_mm$ci.ub) %&gt;%\n  rownames_to_column(\"trat\") %&gt;%\n  separate(trat, into = c(\"lado1\", \"lado2\"), sep = \":\") %&gt;%\n  separate(lado2, into = c(\"lixo\",\"lado3\"),sep = \"sev_check_class\") %&gt;% \n  dplyr::select(-lixo) %&gt;%\n  separate(lado1, into = c(\"lixo\",\"lado1\"),sep = \"produto\" ) %&gt;%\n  dplyr::select(-lixo) %&gt;%\n  filter(lado1 != \"NA\") %&gt;%\n  mutate(n = seq(1:16))\n\nnames(reg1) = c(\"fungicide\", \"class\", \"mean\", \"se\", \"ci.lb\", \"ci.ub\", \"n\")  \n\nreg2 = reg1 %&gt;%\n  filter(n &lt; 9) %&gt;% \n  mutate(class = rep(\"High\", length(fungicide)))\n\nreg3 = reg1 %&gt;% \n  filter(n &gt; 8) %&gt;% \n  mutate(class = rep(\"Low\", length(fungicide)))\n\nreg4 = rbind(reg2,reg3)  \n\n#aqui teve que calcular o lower por que o modelo da o lower com base no hight\n\nmean = reg4%&gt;% \n  group_by(fungicide) %&gt;% \n  dplyr::select(1:3) %&gt;% \n  spread(class, mean) %&gt;% \n  mutate(mean = High + Low) %&gt;% \n  dplyr::select(1,4)\n\nse = reg4%&gt;% \n  group_by(fungicide) %&gt;% \n  dplyr::select(1,2,4) %&gt;% \n  spread(class, se) %&gt;% \n  mutate(se = High + Low) %&gt;% \n  dplyr::select(1,4)\n\n\nlower = reg4%&gt;% \n  group_by(fungicide) %&gt;% \n  dplyr::select(1,2,5) %&gt;% \n  spread(class, ci.lb) %&gt;% \n  mutate(lower = High + Low) %&gt;%  \n  dplyr::select(1,4)\n\nupper = reg4%&gt;% \n  group_by(fungicide) %&gt;% \n  dplyr::select(1,2,6) %&gt;% \n  spread(class, ci.ub) %&gt;% \n  mutate(upper = High + Low) %&gt;% \n  dplyr::select(1,4)\n\n\n\nreg5 = left_join(mean, lower, by= c(\"fungicide\")) %&gt;% \n  left_join(upper, by = c(\"fungicide\")) %&gt;% \n  left_join(se, by = c(\"fungicide\")) %&gt;%\n  mutate(class = rep(\"Low\", length(\"fungicide\"))) %&gt;% \n  dplyr::select(\"fungicide\", \"class\", \"mean\", \"lower\", \"upper\", \"se\")\n\n\nHigh = reg4 %&gt;% \n  filter(class == \"High\") %&gt;% \n  dplyr::select(1:6)\nnames(High) = c(\"fungicide\", \"class\", \"mean\",\"se\", \"lower\", \"upper\") \n\n\nreg6 = full_join(High,reg5)\n#openxlsx::write.xlsx(reg6, here(\"sev_baseline.xlsx\"), colNames = TRUE)\n efficacy_index &lt;- data.frame(cbind(\n   (1 - exp(reg6$mean)) * 100,\n   (1 - exp(reg6$lower)) * 100,\n   (1 - exp(reg6$upper)) * 100),\n   (reg6$class),(reg6$fungicide))\n#openxlsx::write.xlsx(efficacy_index, here(\"efficacy_class.xlsx\"), colNames = TRUE)\n\nDesign groups\n\nlibrary(janitor)\nmed_sev1 = med_sev %&gt;% \n  group_by(ensaio_1) %&gt;% \n  summarise(produto = paste(produto, collapse=';'))\n\nmed_sev1 %&gt;% \n  tabyl(produto)\n\n                                                                                                                                     produto\n                                 AACHECK;ABACUS HC (Controle Positivo);BELYAN  (Controle Positivo);FOX XPRO;OSKESTRA SC;PREVINIL;trat_A20259\n                                  AACHECK;ABACUS HC (Controle Positivo);BELYAN  (Controle Positivo);FOX XPRO;OSKESTRA SC;trat_A20259;TRIDIUM\n AACHECK;ABACUS HC (Controle Positivo);BELYAN  (Controle Positivo);OSKESTRA SC;PREVINIL;TRIDIUM;UNIZEB GOLD (Controle Positivo, multissítio)\n                    AACHECK;ABACUS HC (Controle Positivo);FOX XPRO;OSKESTRA SC;PREVINIL;TRIDIUM;UNIZEB GOLD (Controle Positivo, multissítio)\n                                                              AACHECK;ABACUS HC (Controle Positivo);FOX XPRO;OSKESTRA SC;trat_A20259;TRIDIUM\n                                AACHECK;ABACUS HC (Controle Positivo);FOX XPRO;PREVINIL;TRIDIUM;UNIZEB GOLD (Controle Positivo, multissítio)\n                                              AACHECK;ABACUS HC (Controle Positivo);OSKESTRA SC;UNIZEB GOLD (Controle Positivo, multissítio)\n                                                                                                         AACHECK;BELYAN  (Controle Positivo)\n                                                                               AACHECK;PREVINIL;UNIZEB GOLD (Controle Positivo, multissítio)\n  n    percent\n  4 0.05128205\n 16 0.20512821\n  8 0.10256410\n  9 0.11538462\n 15 0.19230769\n  5 0.06410256\n  8 0.10256410\n  5 0.06410256\n  8 0.10256410\n\ntable(med_sev1$produto)\n\n\n                                AACHECK;ABACUS HC (Controle Positivo);BELYAN  (Controle Positivo);FOX XPRO;OSKESTRA SC;PREVINIL;trat_A20259 \n                                                                                                                                          4 \n                                 AACHECK;ABACUS HC (Controle Positivo);BELYAN  (Controle Positivo);FOX XPRO;OSKESTRA SC;trat_A20259;TRIDIUM \n                                                                                                                                         16 \nAACHECK;ABACUS HC (Controle Positivo);BELYAN  (Controle Positivo);OSKESTRA SC;PREVINIL;TRIDIUM;UNIZEB GOLD (Controle Positivo, multissítio) \n                                                                                                                                          8 \n                   AACHECK;ABACUS HC (Controle Positivo);FOX XPRO;OSKESTRA SC;PREVINIL;TRIDIUM;UNIZEB GOLD (Controle Positivo, multissítio) \n                                                                                                                                          9 \n                                                             AACHECK;ABACUS HC (Controle Positivo);FOX XPRO;OSKESTRA SC;trat_A20259;TRIDIUM \n                                                                                                                                         15 \n                               AACHECK;ABACUS HC (Controle Positivo);FOX XPRO;PREVINIL;TRIDIUM;UNIZEB GOLD (Controle Positivo, multissítio) \n                                                                                                                                          5 \n                                             AACHECK;ABACUS HC (Controle Positivo);OSKESTRA SC;UNIZEB GOLD (Controle Positivo, multissítio) \n                                                                                                                                          8 \n                                                                                                        AACHECK;BELYAN  (Controle Positivo) \n                                                                                                                                          5 \n                                                                              AACHECK;PREVINIL;UNIZEB GOLD (Controle Positivo, multissítio) \n                                                                                                                                          8 \n\n#repete 7 vezes\n\n#D1 #conferido\n\nmed_sev &lt;- med_sev %&gt;%\n  group_by(ensaio_1) %&gt;% \n  mutate(n2 = n()) %&gt;% \n  filter(n2 != 1)\n\n\n\ndesign1 = med_sev %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"BELYAN  (Controle Positivo)\", \"FOX XPRO\", \"OSKESTRA SC\", \"PREVINIL\", \"trat_A20259\")) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(1, length(produto))) %&gt;% \n  filter(n2 == 7) %&gt;% \n  filter(n3 == 7)\ndesign1\n\n# A tibble: 28 × 14\n# Groups:   ensaio_1 [4]\n   municipio regiao ensaio_1 produto   ano mean_sev mean_V     n log_sev  vi_sev\n   &lt;chr&gt;     &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 Cafelând… Sul    22       AACHECK  2018    21.7   9.01      4   3.08  0.00478\n 2 Cafelând… Sul    22       ABACUS…  2018    10.9   9.01      4   2.39  0.0191 \n 3 Cafelând… Sul    22       BELYAN…  2018     5.82  9.01      4   1.76  0.0664 \n 4 Cafelând… Sul    22       FOX XP…  2018     9.6   9.01      4   2.26  0.0244 \n 5 Cafelând… Sul    22       OSKEST…  2018     8.85  9.01      4   2.18  0.0288 \n 6 Cafelând… Sul    22       PREVIN…  2018     9.12  9.01      4   2.21  0.0271 \n 7 Cafelând… Sul    22       trat_A…  2018     8.2   9.01      4   2.10  0.0335 \n 8 Cafelând… Sul    23       AACHECK  2018     5.65  0.178     4   1.73  0.00140\n 9 Cafelând… Sul    23       ABACUS…  2018     1.62  0.178     4   0.486 0.0169 \n10 Cafelând… Sul    23       BELYAN…  2018     0.7   0.178     4  -0.357 0.0910 \n# ℹ 18 more rows\n# ℹ 4 more variables: sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;, design &lt;dbl&gt;\n\n\n#D2 #conferido\n\ndesign2 = med_sev %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"BELYAN  (Controle Positivo)\", \"FOX XPRO\", \"OSKESTRA SC\", \"TRIDIUM\", \"trat_A20259\")) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(2, length(produto))) %&gt;% \n  filter(n2 == 7) %&gt;% \n  filter(n3 == 7)\ndesign2\n\n# A tibble: 112 × 14\n# Groups:   ensaio_1 [16]\n   municipio regiao ensaio_1 produto   ano mean_sev mean_V     n log_sev  vi_sev\n   &lt;chr&gt;     &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 Anápolis  Centr… 48       AACHECK  2020   33.4   2.73       4  3.51   6.14e-4\n 2 Anápolis  Centr… 48       ABACUS…  2020   12.4   2.73       4  2.51   4.48e-3\n 3 Anápolis  Centr… 48       BELYAN…  2020   12.1   2.73       4  2.49   4.66e-3\n 4 Anápolis  Centr… 48       FOX XP…  2020   11.4   2.73       4  2.43   5.30e-3\n 5 Anápolis  Centr… 48       OSKEST…  2020   11.1   2.73       4  2.41   5.54e-3\n 6 Anápolis  Centr… 48       trat_A…  2020   11.8   2.73       4  2.47   4.86e-3\n 7 Anápolis  Centr… 48       TRIDIUM  2020   14.1   2.73       4  2.65   3.43e-3\n 8 Arapongas Sul    27       AACHECK  2019    4.95  0.0929     4  1.60   9.47e-4\n 9 Arapongas Sul    27       ABACUS…  2019    0.975 0.0929     4 -0.0253 2.44e-2\n10 Arapongas Sul    27       BELYAN…  2019    0.45  0.0929     4 -0.799  1.15e-1\n# ℹ 102 more rows\n# ℹ 4 more variables: sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;, design &lt;dbl&gt;\n\n\n#D3 #conferido\n\ndesign3 = med_sev %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"FOX XPRO\", \"OSKESTRA SC\", \"PREVINIL\",\"TRIDIUM\", \"UNIZEB GOLD (Controle Positivo, multissítio)\")) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(3, length(produto))) %&gt;% \n  filter(n2 == 7) %&gt;% \n  filter(n3 == 7)\ndesign3\n\n# A tibble: 63 × 14\n# Groups:   ensaio_1 [9]\n   municipio regiao ensaio_1 produto   ano mean_sev mean_V     n log_sev  vi_sev\n   &lt;chr&gt;     &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 Cafelând… Sul    66       AACHECK  2023    13.4    3.54     4   2.59  4.97e-3\n 2 Cafelând… Sul    66       ABACUS…  2023     3.85   3.54     4   1.35  5.98e-2\n 3 Cafelând… Sul    66       FOX XP…  2023     5.1    3.54     4   1.63  3.41e-2\n 4 Cafelând… Sul    66       OSKEST…  2023     3.1    3.54     4   1.13  9.22e-2\n 5 Cafelând… Sul    66       PREVIN…  2023     4.1    3.54     4   1.41  5.27e-2\n 6 Cafelând… Sul    66       TRIDIUM  2023     4.1    3.54     4   1.41  5.27e-2\n 7 Cafelând… Sul    66       UNIZEB…  2023     2.6    3.54     4   0.956 1.31e-1\n 8 Campo Mo… Sul    65       AACHECK  2023    40.5    2.93     4   3.70  4.47e-4\n 9 Campo Mo… Sul    65       ABACUS…  2023    10.1    2.93     4   2.31  7.18e-3\n10 Campo Mo… Sul    65       FOX XP…  2023    11.6    2.93     4   2.45  5.47e-3\n# ℹ 53 more rows\n# ℹ 4 more variables: sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;, design &lt;dbl&gt;\n\n\n#D4 #conferido\n\ndesign4 = med_sev %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"FOX XPRO\", \"PREVINIL\",\"TRIDIUM\", \"UNIZEB GOLD (Controle Positivo, multissítio)\")) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(4, length(produto))) %&gt;% \n  filter(n2 == 6) %&gt;% \n  filter(n3 == 6)\ndesign4\n\n# A tibble: 30 × 14\n# Groups:   ensaio_1 [5]\n   municipio regiao ensaio_1 produto   ano mean_sev mean_V     n log_sev  vi_sev\n   &lt;chr&gt;     &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 Guarapua… Sul    73       AACHECK  2024    17.6    11.9     4    2.87 0.00962\n 2 Guarapua… Sul    73       ABACUS…  2024     5.38   11.9     4    1.68 0.103  \n 3 Guarapua… Sul    73       FOX XP…  2024     3.12   11.9     4    1.14 0.305  \n 4 Guarapua… Sul    73       PREVIN…  2024     6.62   11.9     4    1.89 0.0679 \n 5 Guarapua… Sul    73       TRIDIUM  2024     6.5    11.9     4    1.87 0.0706 \n 6 Guarapua… Sul    73       UNIZEB…  2024     7.62   11.9     4    2.03 0.0513 \n 7 Lavras    Sudes… 75       AACHECK  2024    10.1    17.9     4    2.31 0.0439 \n 8 Lavras    Sudes… 75       ABACUS…  2024    10.1    17.9     4    2.31 0.0439 \n 9 Lavras    Sudes… 75       FOX XP…  2024     5.1    17.9     4    1.63 0.172  \n10 Lavras    Sudes… 75       PREVIN…  2024     7.6    17.9     4    2.03 0.0775 \n# ℹ 20 more rows\n# ℹ 4 more variables: sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;, design &lt;dbl&gt;\n\n\n#D5 conferido\n\ndesign5 = med_sev %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\",\"BELYAN  (Controle Positivo)\", \"OSKESTRA SC\", \"PREVINIL\",\"TRIDIUM\", \"UNIZEB GOLD (Controle Positivo, multissítio)\")) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(5, length(produto))) %&gt;% \n  filter(n2 == 7) %&gt;% \n  filter(n3 == 7)\ndesign5\n\n# A tibble: 56 × 14\n# Groups:   ensaio_1 [8]\n   municipio regiao ensaio_1 produto   ano mean_sev mean_V     n log_sev  vi_sev\n   &lt;chr&gt;     &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 Cafelând… Sul    58       AACHECK  2022    26.4    1.79     4    3.27 6.44e-4\n 2 Cafelând… Sul    58       ABACUS…  2022    13.4    1.79     4    2.59 2.51e-3\n 3 Cafelând… Sul    58       BELYAN…  2022     7.6    1.79     4    2.03 7.75e-3\n 4 Cafelând… Sul    58       OSKEST…  2022     8.85   1.79     4    2.18 5.71e-3\n 5 Cafelând… Sul    58       PREVIN…  2022    12.6    1.79     4    2.53 2.82e-3\n 6 Cafelând… Sul    58       TRIDIUM  2022    12.4    1.79     4    2.51 2.93e-3\n 7 Cafelând… Sul    58       UNIZEB…  2022    12.8    1.79     4    2.55 2.71e-3\n 8 Campo Mo… Sul    57       AACHECK  2022    18.6   16.6      4    2.92 1.21e-2\n 9 Campo Mo… Sul    57       ABACUS…  2022    14.5   16.6      4    2.68 1.97e-2\n10 Campo Mo… Sul    57       BELYAN…  2022    16.4   16.6      4    2.80 1.54e-2\n# ℹ 46 more rows\n# ℹ 4 more variables: sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;, design &lt;dbl&gt;\n\n\n#D6 #conferido\n\ndesign6 = med_sev %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"OSKESTRA SC\", \"UNIZEB GOLD (Controle Positivo, multissítio)\")) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(6, length(produto))) %&gt;% \n  filter(n2 == 4) %&gt;% \n  filter(n3 == 4)\ndesign6\n\n# A tibble: 32 × 14\n# Groups:   ensaio_1 [8]\n   municipio regiao ensaio_1 produto   ano mean_sev mean_V     n log_sev  vi_sev\n   &lt;chr&gt;     &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 Campo Mo… Sul    82       AACHECK  2017     30.1  26.9      3    3.40 0.00988\n 2 Campo Mo… Sul    82       ABACUS…  2017     20.1  26.9      3    3.00 0.0222 \n 3 Campo Mo… Sul    82       OSKEST…  2017     17.8  26.9      3    2.88 0.0284 \n 4 Campo Mo… Sul    82       UNIZEB…  2017     26.8  26.9      3    3.29 0.0125 \n 5 Campo Mo… Sul    83       AACHECK  2017     30.4   8.67     3    3.42 0.00312\n 6 Campo Mo… Sul    83       ABACUS…  2017     10.1   8.67     3    2.31 0.0283 \n 7 Campo Mo… Sul    83       OSKEST…  2017      8.1   8.67     3    2.09 0.0440 \n 8 Campo Mo… Sul    83       UNIZEB…  2017     19.1   8.67     3    2.95 0.00792\n 9 Campo Mo… Sul    86       AACHECK  2016     25.1   6.25     3    3.22 0.00331\n10 Campo Mo… Sul    86       ABACUS…  2016      4.1   6.25     3    1.41 0.124  \n# ℹ 22 more rows\n# ℹ 4 more variables: sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;, design &lt;dbl&gt;\n\n\n#D7 #Conferido\n\ndesign7 = med_sev %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"PREVINIL\", \"UNIZEB GOLD (Controle Positivo, multissítio)\")) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(7, length(produto))) %&gt;% \n  filter(n2 == 3) %&gt;% \n  filter(n3 == 3)\ndesign7\n\n# A tibble: 24 × 14\n# Groups:   ensaio_1 [8]\n   municipio regiao ensaio_1 produto   ano mean_sev mean_V     n log_sev  vi_sev\n   &lt;chr&gt;     &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 Arapongas Sul    6        AACHECK  2021    3.72   0.498     4   1.32  0.00897\n 2 Arapongas Sul    6        PREVIN…  2021    0.425  0.498     4  -0.856 0.689  \n 3 Arapongas Sul    6        UNIZEB…  2021    0.225  0.498     4  -1.49  2.46   \n 4 Bandeira… Centr… 9        AACHECK  2021    6.6    1.48      4   1.89  0.00852\n 5 Bandeira… Centr… 9        PREVIN…  2021    0.5    1.48      4  -0.693 1.48   \n 6 Bandeira… Centr… 9        UNIZEB…  2021    0.725  1.48      4  -0.322 0.706  \n 7 Bandeira… Sul    7        AACHECK  2021   31.4   40.6       4   3.45  0.0103 \n 8 Bandeira… Sul    7        PREVIN…  2021   14.1   40.6       4   2.65  0.0511 \n 9 Bandeira… Sul    7        UNIZEB…  2021   12.1   40.6       4   2.49  0.0694 \n10 Capão Bo… Sudes… 8        AACHECK  2021   20.0    5.18      4   3.00  0.00323\n# ℹ 14 more rows\n# ℹ 4 more variables: sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;, design &lt;dbl&gt;\n\n\n#D8 #Conferido\n\ndesign8 = med_sev %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"BELYAN  (Controle Positivo)\")) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(8, length(produto))) %&gt;% \n  filter(n2 == 2) %&gt;% \n  filter(n3 == 2)\ndesign8\n\n# A tibble: 10 × 14\n# Groups:   ensaio_1 [5]\n   municipio regiao ensaio_1 produto   ano mean_sev mean_V     n log_sev  vi_sev\n   &lt;chr&gt;     &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 Lavras    Sudes… 13       AACHECK  2023    22.1   64.1      4    3.10 0.0328 \n 2 Lavras    Sudes… 13       BELYAN…  2023     3.3   64.1      4    1.19 1.47   \n 3 Patrocín… Sudes… 12       AACHECK  2023    30.7    6.90     4    3.43 0.00183\n 4 Patrocín… Sudes… 12       BELYAN…  2023    16.5    6.90     4    2.80 0.00632\n 5 Ponta Gr… Sul    11       AACHECK  2023    64.6   67.1      4    4.17 0.00402\n 6 Ponta Gr… Sul    11       BELYAN…  2023    16.8   67.1      4    2.82 0.0591 \n 7 Rio Verde Centr… 14       AACHECK  2023    14.0    1.65     4    2.64 0.00210\n 8 Rio Verde Centr… 14       BELYAN…  2023     6.48   1.65     4    1.87 0.00987\n 9 São Migu… Centr… 15       AACHECK  2023    26.7   16.9      4    3.29 0.00590\n10 São Migu… Centr… 15       BELYAN…  2023    13.8   16.9      4    2.63 0.0220 \n# ℹ 4 more variables: sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;, design &lt;dbl&gt;\n\n\n#D9 #Conferido\n\ndesign9 = med_sev %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c('AACHECK', 'ABACUS HC (Controle Positivo)','FOX XPRO', 'OSKESTRA SC','trat_A20259', 'TRIDIUM'))%&gt;%\n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(9, length(produto))) %&gt;% \n  filter(n2 == 6) %&gt;% \n  filter(n3 == 6)\ndesign9\n\n# A tibble: 90 × 14\n# Groups:   ensaio_1 [15]\n   municipio regiao ensaio_1 produto   ano mean_sev mean_V     n log_sev  vi_sev\n   &lt;chr&gt;     &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 Araponga… Sul    41       AACHECK  2020   22.8   4.53       4   3.13  0.00218\n 2 Araponga… Sul    41       ABACUS…  2020    1.98  4.53       4   0.681 0.290  \n 3 Araponga… Sul    41       FOX XP…  2020    1.42  4.53       4   0.354 0.558  \n 4 Araponga… Sul    41       OSKEST…  2020    2.58  4.53       4   0.946 0.171  \n 5 Araponga… Sul    41       trat_A…  2020    2.62  4.53       4   0.965 0.164  \n 6 Araponga… Sul    41       TRIDIUM  2020    2.72  4.53       4   1.00  0.153  \n 7 Assaí     Sul    34       AACHECK  2019    0.85  0.0168     4  -0.163 0.00581\n 8 Assaí     Sul    34       ABACUS…  2019    0.725 0.0168     4  -0.322 0.00798\n 9 Assaí     Sul    34       FOX XP…  2019    0.55  0.0168     4  -0.598 0.0139 \n10 Assaí     Sul    34       OSKEST…  2019    0.6   0.0168     4  -0.511 0.0117 \n# ℹ 80 more rows\n# ℹ 4 more variables: sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;, design &lt;dbl&gt;\n\n\n#juntando os design\n\nsev_design = rbind(design1, design2, design3, design4, design5, design6, design7, design8, design9)\n\n\nsev_design %&gt;% \n  group_by(ensaio_1, design) %&gt;% \n  summarize() %&gt;% \n  tabyl(design)\n\n design  n    percent\n      1  4 0.05128205\n      2 16 0.20512821\n      3  9 0.11538462\n      4  5 0.06410256\n      5  8 0.10256410\n      6  8 0.10256410\n      7  8 0.10256410\n      8  5 0.06410256\n      9 15 0.19230769\n\n\nInconsistency\n\nmv_sev_design &lt;- rma.mv(log_sev, vi_sev,\n  mods = ~produto * design,\n  random = list(~ 1 | ensaio_1 / design / produto),\n  struct = \"HCS\",\n  method = \"ML\",\n  control = list(optimizer = \"nlm\"),\n  data = sev_design)\n\nmv_sev_design\n\n\nMultivariate Meta-Analysis Model (k = 445; method: ML)\n\nVariance Components:\n\n            estim    sqrt  nlvls  fixed                   factor \nsigma^2.1  0.3760  0.6132     78     no                 ensaio_1 \nsigma^2.2  0.3760  0.6132     78     no          ensaio_1/design \nsigma^2.3  0.0720  0.2683    445     no  ensaio_1/design/produto \n\nTest for Residual Heterogeneity:\nQE(df = 427) = 53237.7194, p-val &lt; .0001\n\nTest of Moderators (coefficients 2:18):\nQM(df = 17) = 847.1330, p-val &lt; .0001\n\nModel Results:\n\n                                                            estimate      se \nintrcpt                                                       2.6490  0.2216 \nprodutoABACUS HC (Controle Positivo)                         -0.9941  0.1023 \nprodutoBELYAN  (Controle Positivo)                           -1.5331  0.1444 \nprodutoFOX XPRO                                              -1.2373  0.1119 \nprodutoOSKESTRA SC                                           -1.1980  0.1126 \nprodutoPREVINIL                                              -1.0670  0.1700 \nprodutotrat_A20259                                           -1.2715  0.1277 \nprodutoTRIDIUM                                               -1.0051  0.1145 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)          -0.9437  0.2124 \ndesign                                                        0.0456  0.0381 \nprodutoABACUS HC (Controle Positivo):design                   0.0217  0.0186 \nprodutoBELYAN  (Controle Positivo):design                     0.0862  0.0325 \nprodutoFOX XPRO:design                                        0.0135  0.0204 \nprodutoOSKESTRA SC:design                                     0.0051  0.0203 \nprodutoPREVINIL:design                                        0.0376  0.0376 \nprodutotrat_A20259:design                                     0.0002  0.0211 \nprodutoTRIDIUM:design                                        -0.0183  0.0205 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):design    0.0265  0.0422 \n                                                                zval    pval \nintrcpt                                                      11.9542  &lt;.0001 \nprodutoABACUS HC (Controle Positivo)                         -9.7127  &lt;.0001 \nprodutoBELYAN  (Controle Positivo)                          -10.6169  &lt;.0001 \nprodutoFOX XPRO                                             -11.0562  &lt;.0001 \nprodutoOSKESTRA SC                                          -10.6388  &lt;.0001 \nprodutoPREVINIL                                              -6.2753  &lt;.0001 \nprodutotrat_A20259                                           -9.9558  &lt;.0001 \nprodutoTRIDIUM                                               -8.7785  &lt;.0001 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)          -4.4440  &lt;.0001 \ndesign                                                        1.1976  0.2311 \nprodutoABACUS HC (Controle Positivo):design                   1.1676  0.2430 \nprodutoBELYAN  (Controle Positivo):design                     2.6536  0.0080 \nprodutoFOX XPRO:design                                        0.6626  0.5076 \nprodutoOSKESTRA SC:design                                     0.2510  0.8018 \nprodutoPREVINIL:design                                        1.0001  0.3172 \nprodutotrat_A20259:design                                     0.0113  0.9910 \nprodutoTRIDIUM:design                                        -0.8922  0.3723 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):design    0.6276  0.5303 \n                                                              ci.lb    ci.ub \nintrcpt                                                      2.2147   3.0833 \nprodutoABACUS HC (Controle Positivo)                        -1.1947  -0.7935 \nprodutoBELYAN  (Controle Positivo)                          -1.8162  -1.2501 \nprodutoFOX XPRO                                             -1.4566  -1.0179 \nprodutoOSKESTRA SC                                          -1.4188  -0.9773 \nprodutoPREVINIL                                             -1.4002  -0.7337 \nprodutotrat_A20259                                          -1.5218  -1.0211 \nprodutoTRIDIUM                                              -1.2295  -0.7807 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)         -1.3600  -0.5275 \ndesign                                                      -0.0290   0.1202 \nprodutoABACUS HC (Controle Positivo):design                 -0.0147   0.0582 \nprodutoBELYAN  (Controle Positivo):design                    0.0225   0.1498 \nprodutoFOX XPRO:design                                      -0.0264   0.0534 \nprodutoOSKESTRA SC:design                                   -0.0346   0.0448 \nprodutoPREVINIL:design                                      -0.0361   0.1112 \nprodutotrat_A20259:design                                   -0.0410   0.0415 \nprodutoTRIDIUM:design                                       -0.0585   0.0219 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):design  -0.0562   0.1091 \n                                                                \nintrcpt                                                     *** \nprodutoABACUS HC (Controle Positivo)                        *** \nprodutoBELYAN  (Controle Positivo)                          *** \nprodutoFOX XPRO                                             *** \nprodutoOSKESTRA SC                                          *** \nprodutoPREVINIL                                             *** \nprodutotrat_A20259                                          *** \nprodutoTRIDIUM                                              *** \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)         *** \ndesign                                                          \nprodutoABACUS HC (Controle Positivo):design                     \nprodutoBELYAN  (Controle Positivo):design                    ** \nprodutoFOX XPRO:design                                          \nprodutoOSKESTRA SC:design                                       \nprodutoPREVINIL:design                                          \nprodutotrat_A20259:design                                       \nprodutoTRIDIUM:design                                           \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):design      \n\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nanova(mv_sev_design, btt = 11:18)\n\n\nTest of Moderators (coefficients 11:18):\nQM(df = 8) = 11.4389, p-val = 0.1780"
  },
  {
    "objectID": "sev.html#packages",
    "href": "sev.html#packages",
    "title": "Meta-analysis for the variable severity",
    "section": "",
    "text": "library(gsheet)\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(tidyr)\nlibrary(metafor)\nlibrary(multcomp)\n library(emmeans)"
  },
  {
    "objectID": "sev.html#import-the-data",
    "href": "sev.html#import-the-data",
    "title": "Meta-analysis for the variable severity",
    "section": "",
    "text": "dat1 = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1joo0WaR7yNWZavGPbwQMjiFPpWHErtGL/edit?gid=1485993259#gid=1485993259\")\n\ndat1 |&gt; ggplot(aes(produto, mean_sev)) +\n  geom_boxplot()\n\n\n\n\n\n\n\noutliers &lt;- dat1 %&gt;%\n  filter(produto == \"trat_A20259\") %&gt;%\n  group_by(produto, bloco) %&gt;%\n  mutate(outlier = mean_sev &lt; quantile(mean_sev, 0.25) - 1.5 * IQR(mean_sev) | \n                   mean_sev &gt; quantile(mean_sev, 0.75) + 1.5 * IQR(mean_sev)) %&gt;%\n  filter(outlier) %&gt;%\n  dplyr::select(ensaio_1, mean_sev)\n\nprint(outliers)\n\n# A tibble: 7 × 4\n# Groups:   produto, bloco [4]\n  produto     bloco ensaio_1 mean_sev\n  &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 trat_A20259     3       25     13.6\n2 trat_A20259     4       25     16.5\n3 trat_A20259     1       43     19.8\n4 trat_A20259     2       43     21.4\n5 trat_A20259     3       43     22.3\n6 trat_A20259     4       43     22.3\n7 trat_A20259     3       50     15.5"
  },
  {
    "objectID": "sev.html#anova-for-each-trialstudy",
    "href": "sev.html#anova-for-each-trialstudy",
    "title": "Meta-analysis for the variable severity",
    "section": "",
    "text": "# Converting variables to factors  \ndat1$bloco = as.factor(dat1$bloco)   # Block as a factor  \ndat1$produto = as.factor(dat1$produto)   # fungicide as a factor  \ndat1$ensaio_1 = as.factor(dat1$ensaio_1)  # Trial as a factor  \n\nstr(dat1)\n\nspc_tbl_ [1,748 × 9] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ municipio: chr [1:1748] \"Anápolis\" \"Anápolis\" \"Anápolis\" \"Anápolis\" ...\n $ bloco    : Factor w/ 4 levels \"1\",\"2\",\"3\",\"4\": 1 1 1 1 1 1 1 2 2 2 ...\n $ ensaio_1 : Factor w/ 78 levels \"5\",\"6\",\"7\",\"8\",..: 39 39 39 39 39 39 39 39 39 39 ...\n $ produto  : Factor w/ 9 levels \"AACHECK\",\"ABACUS HC (Controle Positivo)\",..: 1 2 3 4 5 8 7 1 2 3 ...\n $ ano      : num [1:1748] 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 ...\n $ estado   : chr [1:1748] \"GO\" \"GO\" \"GO\" \"GO\" ...\n $ regiao   : chr [1:1748] \"Centro-Oeste\" \"Centro-Oeste\" \"Centro-Oeste\" \"Centro-Oeste\" ...\n $ mean_sev : num [1:1748] 33 10 13 10 10 13 13 30 12 10 ...\n $ mean_prod: num [1:1748] 5910 7570 7510 8310 8450 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   municipio = col_character(),\n  ..   bloco = col_double(),\n  ..   ensaio_1 = col_double(),\n  ..   produto = col_character(),\n  ..   ano = col_double(),\n  ..   estado = col_character(),\n  ..   regiao = col_character(),\n  ..   mean_sev = col_double(),\n  ..   mean_prod = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n# Performing ANOVA to obtain Sum of Squares (Sq) and Mean Squares (MeanSq)\ndat2 &lt;- dat1 %&gt;%\n  filter(mean_sev != \"NA\")|&gt; \n  group_by(ensaio_1) %&gt;%\n  dplyr::select(ensaio_1, produto, bloco, mean_sev) %&gt;% \n  nest(data = c(produto, bloco, mean_sev)) %&gt;% \n  dplyr::mutate(\n    aov_results = map(data, ~ tidy(aov(mean_sev ~ produto + bloco, data = .x)))\n  ) %&gt;%\n  unnest(aov_results) %&gt;%\n  filter(term == \"Residuals\")|&gt; \n  dplyr::select(1,6)"
  },
  {
    "objectID": "sev.html#calculating-the-mean-and-adjusted-variance",
    "href": "sev.html#calculating-the-mean-and-adjusted-variance",
    "title": "Meta-analysis for the variable severity",
    "section": "",
    "text": "#First: Merge the Original Spreadsheet (dat1) with the Spreadsheet Containing the ANOVA Results; \ndat3 &lt;- left_join(dat1, dat2) |&gt; \n group_by(municipio,regiao, ensaio_1, produto, ano) %&gt;% \n  summarise(mean_sev = mean(mean_sev+0.1), #severity mean\n            mean_V = mean(meansq), #SQ mean\n            n = n()) |&gt; \n  mutate(log_sev = log(mean_sev)) #Mean of the transformed severity\n\n\n#Calculating adjusted variance of severity\n  dat3$vi_sev = with(dat3, mean_V / (n * mean_sev^2))"
  },
  {
    "objectID": "sev.html#meta-analysis",
    "href": "sev.html#meta-analysis",
    "title": "Meta-analysis for the variable severity",
    "section": "",
    "text": "Differences in structures were tested, and the one that best fit was the unstructured. The others are commented out.\n\n net_arm_UN_first &lt;- rma.mv(\n   log_sev,\n   vi_sev,\n   mods = ~ produto,\n   method = \"ML\",\n   random = list( ~ produto | factor(ensaio_1)),\n   struct = \"HCS\",\n   control = list(optimizer = \"nlm\"),\n   data = dat3)\n summary(net_arm_UN_first)\n\n\nMultivariate Meta-Analysis Model (k = 445; method: ML)\n\n   logLik   Deviance        AIC        BIC       AICc   \n-306.4493  1613.2329   650.8986   728.7620   652.6868   \n\nVariance Components:\n\nouter factor: factor(ensaio_1) (nlvls = 78)\ninner factor: produto          (nlvls = 9)\n\n            estim    sqrt  k.lvl  fixed \ntau^2.1    0.7859  0.8865     78     no \ntau^2.2    0.8148  0.9027     65     no \ntau^2.3    1.0767  1.0376     33     no \ntau^2.4    0.9735  0.9867     49     no \ntau^2.5    0.9379  0.9685     60     no \ntau^2.6    0.9177  0.9580     34     no \ntau^2.7    0.9305  0.9646     35     no \ntau^2.8    0.8601  0.9274     53     no \ntau^2.9    0.6800  0.8246     38     no \nrho        0.9148                    no \n                                                  level \ntau^2.1                                         AACHECK \ntau^2.2                   ABACUS HC (Controle Positivo) \ntau^2.3                     BELYAN  (Controle Positivo) \ntau^2.4                                        FOX XPRO \ntau^2.5                                     OSKESTRA SC \ntau^2.6                                        PREVINIL \ntau^2.7                                     trat_A20259 \ntau^2.8                                         TRIDIUM \ntau^2.9    UNIZEB GOLD (Controle Positivo, multissítio) \nrho                                                     \n\nTest for Residual Heterogeneity:\nQE(df = 436) = 55256.5347, p-val &lt; .0001\n\nTest of Moderators (coefficients 2:9):\nQM(df = 8) = 823.1008, p-val &lt; .0001\n\nModel Results:\n\n                                                     estimate      se      zval \nintrcpt                                                2.8850  0.1007   28.6478 \nprodutoABACUS HC (Controle Positivo)                  -0.8804  0.0497  -17.7189 \nprodutoBELYAN  (Controle Positivo)                    -1.2339  0.0818  -15.0837 \nprodutoFOX XPRO                                       -1.1689  0.0633  -18.4557 \nprodutoOSKESTRA SC                                    -1.1748  0.0576  -20.4106 \nprodutoPREVINIL                                       -0.9230  0.0681  -13.5446 \nprodutotrat_A20259                                    -1.2486  0.0736  -16.9612 \nprodutoTRIDIUM                                        -1.0853  0.0563  -19.2910 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)   -0.7601  0.0583  -13.0287 \n                                                       pval    ci.lb    ci.ub \nintrcpt                                              &lt;.0001   2.6876   3.0823 \nprodutoABACUS HC (Controle Positivo)                 &lt;.0001  -0.9778  -0.7830 \nprodutoBELYAN  (Controle Positivo)                   &lt;.0001  -1.3942  -1.0736 \nprodutoFOX XPRO                                      &lt;.0001  -1.2931  -1.0448 \nprodutoOSKESTRA SC                                   &lt;.0001  -1.2876  -1.0620 \nprodutoPREVINIL                                      &lt;.0001  -1.0566  -0.7895 \nprodutotrat_A20259                                   &lt;.0001  -1.3929  -1.1043 \nprodutoTRIDIUM                                       &lt;.0001  -1.1955  -0.9750 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)  &lt;.0001  -0.8745  -0.6458 \n                                                         \nintrcpt                                              *** \nprodutoABACUS HC (Controle Positivo)                 *** \nprodutoBELYAN  (Controle Positivo)                   *** \nprodutoFOX XPRO                                      *** \nprodutoOSKESTRA SC                                   *** \nprodutoPREVINIL                                      *** \nprodutotrat_A20259                                   *** \nprodutoTRIDIUM                                       *** \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)  *** \n\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n #salvando\n m1 &lt;- data.frame(cbind(\n   (net_arm_UN_first$b),\n   (net_arm_UN_first$ci.lb),\n   (net_arm_UN_first$ci.ub),\n   (net_arm_UN_first$se)))\n \n m1 = m1\n   names (m1) = c(\"log_sev\", \"sev_lw\", \"sev_up\", \"se\")\n   \n  m1 &lt;- m1 |&gt;\n mutate(fungicide = c(\"check\", \"ABACUSHC\", \"BAS75302F\", \"FOX XPRO\", \"OSKESTRASC\", \"PREVINIL\", \"A20259\", \"TRIDIUM\", \"UNIZEBGOLD\")) \nm1 &lt;- m1 |&gt;  \n    dplyr::select(fungicide, log_sev, sev_lw, sev_up,se)\nlibrary(writexl)\n#write_xlsx(m1, \"results_log_Sev.xlsx\")\n\n\n\n\n\n#The glht() function is used to perform multiple comparisons between the groups adjusted by the model\n net_arm_UN_comp &lt;-\n   summary(glht(\n   model = net_arm_UN_first,\n   linfct = cbind(contrMat(rep(1, 9), type = \"Tukey\")) ))\n\n  net_arm_UN_comp\n\n\n     Simultaneous Tests for General Linear Hypotheses\n\nFit: rma.mv(yi = log_sev, V = vi_sev, mods = ~produto, random = list(~produto | \n    factor(ensaio_1)), struct = \"HCS\", data = dat3, method = \"ML\", \n    control = list(optimizer = \"nlm\"))\n\nLinear Hypotheses:\n            Estimate Std. Error z value Pr(&gt;|z|)    \n2 - 1 == 0 -3.765334   0.118775 -31.701   &lt;0.001 ***\n3 - 1 == 0 -4.118857   0.124592 -33.059   &lt;0.001 ***\n4 - 1 == 0 -4.053876   0.117879 -34.390   &lt;0.001 ***\n5 - 1 == 0 -4.059782   0.116520 -34.842   &lt;0.001 ***\n6 - 1 == 0 -3.807976   0.123028 -30.952   &lt;0.001 ***\n7 - 1 == 0 -4.133568   0.125541 -32.926   &lt;0.001 ***\n8 - 1 == 0 -3.970207   0.119517 -33.219   &lt;0.001 ***\n9 - 1 == 0 -3.645086   0.129101 -28.234   &lt;0.001 ***\n3 - 2 == 0 -0.353524   0.085017  -4.158   &lt;0.001 ***\n4 - 2 == 0 -0.288542   0.065770  -4.387   &lt;0.001 ***\n5 - 2 == 0 -0.294449   0.060432  -4.872   &lt;0.001 ***\n6 - 2 == 0 -0.042642   0.071895  -0.593   0.9996    \n7 - 2 == 0 -0.368234   0.075921  -4.850   &lt;0.001 ***\n8 - 2 == 0 -0.204873   0.059376  -3.450   0.0150 *  \n9 - 2 == 0  0.120247   0.063046   1.907   0.5910    \n4 - 3 == 0  0.064981   0.092164   0.705   0.9986    \n5 - 3 == 0  0.059075   0.088075   0.671   0.9990    \n6 - 3 == 0  0.310882   0.096471   3.223   0.0322 *  \n7 - 3 == 0 -0.014710   0.098800  -0.149   1.0000    \n8 - 3 == 0  0.148651   0.088234   1.685   0.7412    \n9 - 3 == 0  0.473771   0.093309   5.077   &lt;0.001 ***\n5 - 4 == 0 -0.005906   0.070507  -0.084   1.0000    \n6 - 4 == 0  0.245900   0.080772   3.044   0.0548 .  \n7 - 4 == 0 -0.079692   0.082645  -0.964   0.9878    \n8 - 4 == 0  0.083669   0.069501   1.204   0.9518    \n9 - 4 == 0  0.408789   0.075987   5.380   &lt;0.001 ***\n6 - 5 == 0  0.251806   0.076846   3.277   0.0267 *  \n7 - 5 == 0 -0.073785   0.079906  -0.923   0.9908    \n8 - 5 == 0  0.089576   0.065480   1.368   0.9024    \n9 - 5 == 0  0.414696   0.069942   5.929   &lt;0.001 ***\n7 - 6 == 0 -0.325592   0.091728  -3.550   0.0108 *  \n8 - 6 == 0 -0.162231   0.075747  -2.142   0.4257    \n9 - 6 == 0  0.162889   0.075678   2.152   0.4191    \n8 - 7 == 0  0.163361   0.079439   2.056   0.4855    \n9 - 7 == 0  0.488481   0.086675   5.636   &lt;0.001 ***\n9 - 8 == 0  0.325120   0.068855   4.722   &lt;0.001 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n(Adjusted p values reported -- single-step method)\n\n plot(net_arm_UN_comp)\n\n\n\n\n\n\n\n library(emmeans)\nlibrary(multcomp)\nmeta &lt;- emmprep(net_arm_UN_first)\nemmeans_meta &lt;- emmeans(meta, ~ produto, type = \"response\")\ncld_result &lt;- data.frame(cld(emmeans_meta, decreasing = TRUE, Letters = LETTERS))\ncld_result\n\n                                       produto   emmean        SE  df asymp.LCL\n7                                      AACHECK 2.884954 0.1007043 Inf  2.687577\n3 UNIZEB GOLD (Controle Positivo, multissítio) 2.124821 0.1020948 Inf  1.924719\n5                ABACUS HC (Controle Positivo) 2.004574 0.1054163 Inf  1.797962\n4                                     PREVINIL 1.961932 0.1201447 Inf  1.726452\n8                                      TRIDIUM 1.799701 0.1110315 Inf  1.582083\n6                                     FOX XPRO 1.716032 0.1200428 Inf  1.480752\n2                                  OSKESTRA SC 1.710125 0.1154649 Inf  1.483818\n9                  BELYAN  (Controle Positivo) 1.651050 0.1346971 Inf  1.387049\n1                                  trat_A20259 1.636340 0.1239388 Inf  1.393424\n  asymp.UCL .group\n7  3.082331   A   \n3  2.324923    B  \n5  2.211186    B  \n4  2.197411    BC \n8  2.017319     CD\n6  1.951311     CD\n2  1.936432      D\n9  1.915052      D\n1  1.879255      D\n\n\n\n efficacy_index &lt;- data.frame(cbind(\n   (1 - exp(net_arm_UN_first$b)) * 100,\n   (1 - exp(net_arm_UN_first$ci.lb)) * 100,\n   (1 - exp(net_arm_UN_first$ci.ub)) * 100))\n\n# #Organize the data.frame\n efficacy_index = efficacy_index\n   names (efficacy_index) = c(\"efficacy\", \"efficacy_up\", \"efficacy_lw\")\n  \nefficacy_index &lt;- efficacy_index |&gt;\n  mutate(fungicide = c(\"check\", \"ABACUSHC\", \"BAS75302F\", \"FOX XPRO\", \"OSKESTRASC\", \"PREVINIL\", \"A20259\", \"TRIDIUM\", \"UNIZEBGOLD\")) |&gt;\n  filter(fungicide != \"check\") |&gt;\n  dplyr::select(fungicide, efficacy, efficacy_lw, efficacy_up)\n\nefficacy_index\n\n                                                     fungicide efficacy\nprodutoABACUS HC (Controle Positivo)                  ABACUSHC 58.53746\nprodutoBELYAN  (Controle Positivo)                   BAS75302F 70.88462\nprodutoFOX XPRO                                       FOX XPRO 68.92984\nprodutoOSKESTRA SC                                  OSKESTRASC 69.11280\nprodutoPREVINIL                                       PREVINIL 60.26834\nprodutotrat_A20259                                      A20259 71.30978\nprodutoTRIDIUM                                         TRIDIUM 66.21836\nprodutoUNIZEB GOLD (Controle Positivo, multissítio) UNIZEBGOLD 53.23956\n                                                    efficacy_lw efficacy_up\nprodutoABACUS HC (Controle Positivo)                   54.29658    62.38482\nprodutoBELYAN  (Controle Positivo)                     65.82143    75.19775\nprodutoFOX XPRO                                        64.82324    72.55702\nprodutoOSKESTRA SC                                     65.42410    72.40798\nprodutoPREVINIL                                        54.59083    65.23600\nprodutotrat_A20259                                     66.85670    75.16455\nprodutoTRIDIUM                                         62.28042    69.74518\nprodutoUNIZEB GOLD (Controle Positivo, multissítio)    47.57479    58.29224\n\nlibrary(readr)\n\nwrite_xlsx(efficacy_index, \"efficacy_res.xlsx\")\n\nDisease pressure\nMedian\n\n#linha de base\nlibrary(janitor)\nAACHECK = dat1 |&gt; filter(produto == \"AACHECK\")\nsummary(AACHECK)\n\n  municipio         bloco     ensaio_1                            produto   \n Length:304         1:78   5      :  4   AACHECK                      :304  \n Class :character   2:78   6      :  4   ABACUS HC (Controle Positivo):  0  \n Mode  :character   3:78   7      :  4   BELYAN  (Controle Positivo)  :  0  \n                    4:70   8      :  4   FOX XPRO                     :  0  \n                           9      :  4   OSKESTRA SC                  :  0  \n                           10     :  4   PREVINIL                     :  0  \n                           (Other):280   (Other)                      :  0  \n      ano          estado             regiao             mean_sev    \n Min.   :2016   Length:304         Length:304         Min.   : 0.60  \n 1st Qu.:2019   Class :character   Class :character   1st Qu.:12.68  \n Median :2021   Mode  :character   Mode  :character   Median :21.35  \n Mean   :2021                                         Mean   :23.45  \n 3rd Qu.:2022                                         3rd Qu.:30.50  \n Max.   :2024                                         Max.   :80.00  \n                                                                     \n   mean_prod    \n Min.   : 3414  \n 1st Qu.: 5062  \n Median : 6124  \n Mean   : 6536  \n 3rd Qu.: 7729  \n Max.   :12361  \n NA's   :186    \n\nmed_sev &lt;- dat3 %&gt;%\n  mutate(sev_check_class = case_when(\n      mean_sev &lt; 21 ~ \"low\",\n      mean_sev &gt;= 21 ~ \"high\"))\nmed_sev %&gt;%\n  tabyl(produto, sev_check_class)\n\n                                      produto high low\n                                      AACHECK   43  35\n                ABACUS HC (Controle Positivo)    7  58\n                  BELYAN  (Controle Positivo)    1  32\n                                     FOX XPRO    3  46\n                                  OSKESTRA SC    2  58\n                                     PREVINIL    3  31\n                                  trat_A20259    1  34\n                                      TRIDIUM    3  50\n UNIZEB GOLD (Controle Positivo, multissítio)    5  33\n\nmodel_mm &lt;- rma.mv(\n   log_sev ,\n   vi_sev,\n   mods = ~ produto * factor(sev_check_class),\n   method = \"ML\",\n   random = list( ~ produto | factor(ensaio_1)),\n   struct = \"HCS\",\n   control = list(optimizer = \"nlm\"),\n   data = med_sev)\nanova(model_mm, btt = 5:6) \n\n\nTest of Moderators (coefficients 5:6):\nQM(df = 2) = 16.9409, p-val = 0.0002\n\n summary(model_mm)\n\n\nMultivariate Meta-Analysis Model (k = 445; method: ML)\n\n   logLik   Deviance        AIC        BIC       AICc   \n-282.6962  1565.7268   621.3925   736.1385   625.2963   \n\nVariance Components:\n\nouter factor: factor(ensaio_1) (nlvls = 78)\ninner factor: produto          (nlvls = 9)\n\n            estim    sqrt  k.lvl  fixed \ntau^2.1    0.6387  0.7992     78     no \ntau^2.2    0.6848  0.8275     65     no \ntau^2.3    0.9652  0.9825     33     no \ntau^2.4    0.8226  0.9070     49     no \ntau^2.5    0.8405  0.9168     60     no \ntau^2.6    0.8680  0.9317     34     no \ntau^2.7    0.7967  0.8926     35     no \ntau^2.8    0.7927  0.8903     53     no \ntau^2.9    0.6040  0.7772     38     no \nrho        0.9155                    no \n                                                  level \ntau^2.1                                         AACHECK \ntau^2.2                   ABACUS HC (Controle Positivo) \ntau^2.3                     BELYAN  (Controle Positivo) \ntau^2.4                                        FOX XPRO \ntau^2.5                                     OSKESTRA SC \ntau^2.6                                        PREVINIL \ntau^2.7                                     trat_A20259 \ntau^2.8                                         TRIDIUM \ntau^2.9    UNIZEB GOLD (Controle Positivo, multissítio) \nrho                                                     \n\nTest for Residual Heterogeneity:\nQE(df = 427) = 29490.0831, p-val &lt; .0001\n\nTest of Moderators (coefficients 2:18):\nQM(df = 17) = 970.5456, p-val &lt; .0001\n\nModel Results:\n\n                                                                                estimate \nintrcpt                                                                           2.9976 \nprodutoABACUS HC (Controle Positivo)                                             -0.4736 \nprodutoBELYAN  (Controle Positivo)                                               -0.6112 \nprodutoFOX XPRO                                                                  -0.5566 \nprodutoOSKESTRA SC                                                               -0.6313 \nprodutoPREVINIL                                                                  -0.6308 \nprodutotrat_A20259                                                               -0.5461 \nprodutoTRIDIUM                                                                   -0.7534 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                              -0.4902 \nfactor(sev_check_class)low                                                       -0.2493 \nprodutoABACUS HC (Controle Positivo):factor(sev_check_class)low                  -0.3280 \nprodutoBELYAN  (Controle Positivo):factor(sev_check_class)low                    -0.5213 \nprodutoFOX XPRO:factor(sev_check_class)low                                       -0.5292 \nprodutoOSKESTRA SC:factor(sev_check_class)low                                    -0.4323 \nprodutoPREVINIL:factor(sev_check_class)low                                       -0.1815 \nprodutotrat_A20259:factor(sev_check_class)low                                    -0.6202 \nprodutoTRIDIUM:factor(sev_check_class)low                                        -0.2120 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):factor(sev_check_class)low   -0.1662 \n                                                                                    se \nintrcpt                                                                         0.0954 \nprodutoABACUS HC (Controle Positivo)                                            0.1181 \nprodutoBELYAN  (Controle Positivo)                                              0.3341 \nprodutoFOX XPRO                                                                 0.1774 \nprodutoOSKESTRA SC                                                              0.2217 \nprodutoPREVINIL                                                                 0.1858 \nprodutotrat_A20259                                                              0.2918 \nprodutoTRIDIUM                                                                  0.1807 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                             0.1351 \nfactor(sev_check_class)low                                                      0.0664 \nprodutoABACUS HC (Controle Positivo):factor(sev_check_class)low                 0.1330 \nprodutoBELYAN  (Controle Positivo):factor(sev_check_class)low                   0.3449 \nprodutoFOX XPRO:factor(sev_check_class)low                                      0.1908 \nprodutoOSKESTRA SC:factor(sev_check_class)low                                   0.2310 \nprodutoPREVINIL:factor(sev_check_class)low                                      0.2015 \nprodutotrat_A20259:factor(sev_check_class)low                                   0.3022 \nprodutoTRIDIUM:factor(sev_check_class)low                                       0.1923 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):factor(sev_check_class)low  0.1523 \n                                                                                   zval \nintrcpt                                                                         31.4095 \nprodutoABACUS HC (Controle Positivo)                                            -4.0090 \nprodutoBELYAN  (Controle Positivo)                                              -1.8294 \nprodutoFOX XPRO                                                                 -3.1372 \nprodutoOSKESTRA SC                                                              -2.8470 \nprodutoPREVINIL                                                                 -3.3951 \nprodutotrat_A20259                                                              -1.8715 \nprodutoTRIDIUM                                                                  -4.1700 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                             -3.6286 \nfactor(sev_check_class)low                                                      -3.7566 \nprodutoABACUS HC (Controle Positivo):factor(sev_check_class)low                 -2.4666 \nprodutoBELYAN  (Controle Positivo):factor(sev_check_class)low                   -1.5116 \nprodutoFOX XPRO:factor(sev_check_class)low                                      -2.7732 \nprodutoOSKESTRA SC:factor(sev_check_class)low                                   -1.8716 \nprodutoPREVINIL:factor(sev_check_class)low                                      -0.9006 \nprodutotrat_A20259:factor(sev_check_class)low                                   -2.0525 \nprodutoTRIDIUM:factor(sev_check_class)low                                       -1.1026 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):factor(sev_check_class)low  -1.0910 \n                                                                                  pval \nintrcpt                                                                         &lt;.0001 \nprodutoABACUS HC (Controle Positivo)                                            &lt;.0001 \nprodutoBELYAN  (Controle Positivo)                                              0.0673 \nprodutoFOX XPRO                                                                 0.0017 \nprodutoOSKESTRA SC                                                              0.0044 \nprodutoPREVINIL                                                                 0.0007 \nprodutotrat_A20259                                                              0.0613 \nprodutoTRIDIUM                                                                  &lt;.0001 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                             0.0003 \nfactor(sev_check_class)low                                                      0.0002 \nprodutoABACUS HC (Controle Positivo):factor(sev_check_class)low                 0.0136 \nprodutoBELYAN  (Controle Positivo):factor(sev_check_class)low                   0.1306 \nprodutoFOX XPRO:factor(sev_check_class)low                                      0.0056 \nprodutoOSKESTRA SC:factor(sev_check_class)low                                   0.0613 \nprodutoPREVINIL:factor(sev_check_class)low                                      0.3678 \nprodutotrat_A20259:factor(sev_check_class)low                                   0.0401 \nprodutoTRIDIUM:factor(sev_check_class)low                                       0.2702 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):factor(sev_check_class)low  0.2753 \n                                                                                  ci.lb \nintrcpt                                                                          2.8105 \nprodutoABACUS HC (Controle Positivo)                                            -0.7051 \nprodutoBELYAN  (Controle Positivo)                                              -1.2661 \nprodutoFOX XPRO                                                                 -0.9043 \nprodutoOSKESTRA SC                                                              -1.0658 \nprodutoPREVINIL                                                                 -0.9950 \nprodutotrat_A20259                                                              -1.1180 \nprodutoTRIDIUM                                                                  -1.1075 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                             -0.7550 \nfactor(sev_check_class)low                                                      -0.3794 \nprodutoABACUS HC (Controle Positivo):factor(sev_check_class)low                 -0.5886 \nprodutoBELYAN  (Controle Positivo):factor(sev_check_class)low                   -1.1973 \nprodutoFOX XPRO:factor(sev_check_class)low                                      -0.9031 \nprodutoOSKESTRA SC:factor(sev_check_class)low                                   -0.8851 \nprodutoPREVINIL:factor(sev_check_class)low                                      -0.5765 \nprodutotrat_A20259:factor(sev_check_class)low                                   -1.2125 \nprodutoTRIDIUM:factor(sev_check_class)low                                       -0.5890 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):factor(sev_check_class)low  -0.4646 \n                                                                                  ci.ub \nintrcpt                                                                          3.1846 \nprodutoABACUS HC (Controle Positivo)                                            -0.2421 \nprodutoBELYAN  (Controle Positivo)                                               0.0436 \nprodutoFOX XPRO                                                                 -0.2089 \nprodutoOSKESTRA SC                                                              -0.1967 \nprodutoPREVINIL                                                                 -0.2667 \nprodutotrat_A20259                                                               0.0258 \nprodutoTRIDIUM                                                                  -0.3993 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                             -0.2254 \nfactor(sev_check_class)low                                                      -0.1192 \nprodutoABACUS HC (Controle Positivo):factor(sev_check_class)low                 -0.0674 \nprodutoBELYAN  (Controle Positivo):factor(sev_check_class)low                    0.1546 \nprodutoFOX XPRO:factor(sev_check_class)low                                      -0.1552 \nprodutoOSKESTRA SC:factor(sev_check_class)low                                    0.0204 \nprodutoPREVINIL:factor(sev_check_class)low                                       0.2135 \nprodutotrat_A20259:factor(sev_check_class)low                                   -0.0280 \nprodutoTRIDIUM:factor(sev_check_class)low                                        0.1649 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):factor(sev_check_class)low   0.1323 \n                                                                                    \nintrcpt                                                                         *** \nprodutoABACUS HC (Controle Positivo)                                            *** \nprodutoBELYAN  (Controle Positivo)                                                . \nprodutoFOX XPRO                                                                  ** \nprodutoOSKESTRA SC                                                               ** \nprodutoPREVINIL                                                                 *** \nprodutotrat_A20259                                                                . \nprodutoTRIDIUM                                                                  *** \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)                             *** \nfactor(sev_check_class)low                                                      *** \nprodutoABACUS HC (Controle Positivo):factor(sev_check_class)low                   * \nprodutoBELYAN  (Controle Positivo):factor(sev_check_class)low                       \nprodutoFOX XPRO:factor(sev_check_class)low                                       ** \nprodutoOSKESTRA SC:factor(sev_check_class)low                                     . \nprodutoPREVINIL:factor(sev_check_class)low                                          \nprodutotrat_A20259:factor(sev_check_class)low                                     * \nprodutoTRIDIUM:factor(sev_check_class)low                                           \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):factor(sev_check_class)low      \n\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\ntable(med_sev$produto, med_sev$sev_check_class)\n\n                                              \n                                               high low\n  AACHECK                                        43  35\n  ABACUS HC (Controle Positivo)                   7  58\n  BELYAN  (Controle Positivo)                     1  32\n  FOX XPRO                                        3  46\n  OSKESTRA SC                                     2  58\n  PREVINIL                                        3  31\n  trat_A20259                                     1  34\n  TRIDIUM                                         3  50\n  UNIZEB GOLD (Controle Positivo, multissítio)    5  33\n\n#openxlsx::write.xlsx(efficacy_index, here(\"efficacy_class.xlsx\"), colNames = TRUE)\n\n#organizando a saida do modelo\n\nlibrary(here)\nreg1 = data.frame(model_mm$beta, model_mm$se, model_mm$ci.lb, model_mm$ci.ub) %&gt;%\n  rownames_to_column(\"trat\") %&gt;%\n  separate(trat, into = c(\"lado1\", \"lado2\"), sep = \":\") %&gt;%\n  separate(lado2, into = c(\"lixo\",\"lado3\"),sep = \"sev_check_class\") %&gt;% \n  dplyr::select(-lixo) %&gt;%\n  separate(lado1, into = c(\"lixo\",\"lado1\"),sep = \"produto\" ) %&gt;%\n  dplyr::select(-lixo) %&gt;%\n  filter(lado1 != \"NA\") %&gt;%\n  mutate(n = seq(1:16))\n\nnames(reg1) = c(\"fungicide\", \"class\", \"mean\", \"se\", \"ci.lb\", \"ci.ub\", \"n\")  \n\nreg2 = reg1 %&gt;%\n  filter(n &lt; 9) %&gt;% \n  mutate(class = rep(\"High\", length(fungicide)))\n\nreg3 = reg1 %&gt;% \n  filter(n &gt; 8) %&gt;% \n  mutate(class = rep(\"Low\", length(fungicide)))\n\nreg4 = rbind(reg2,reg3)  \n\n#aqui teve que calcular o lower por que o modelo da o lower com base no hight\n\nmean = reg4%&gt;% \n  group_by(fungicide) %&gt;% \n  dplyr::select(1:3) %&gt;% \n  spread(class, mean) %&gt;% \n  mutate(mean = High + Low) %&gt;% \n  dplyr::select(1,4)\n\nse = reg4%&gt;% \n  group_by(fungicide) %&gt;% \n  dplyr::select(1,2,4) %&gt;% \n  spread(class, se) %&gt;% \n  mutate(se = High + Low) %&gt;% \n  dplyr::select(1,4)\n\n\nlower = reg4%&gt;% \n  group_by(fungicide) %&gt;% \n  dplyr::select(1,2,5) %&gt;% \n  spread(class, ci.lb) %&gt;% \n  mutate(lower = High + Low) %&gt;%  \n  dplyr::select(1,4)\n\nupper = reg4%&gt;% \n  group_by(fungicide) %&gt;% \n  dplyr::select(1,2,6) %&gt;% \n  spread(class, ci.ub) %&gt;% \n  mutate(upper = High + Low) %&gt;% \n  dplyr::select(1,4)\n\n\n\nreg5 = left_join(mean, lower, by= c(\"fungicide\")) %&gt;% \n  left_join(upper, by = c(\"fungicide\")) %&gt;% \n  left_join(se, by = c(\"fungicide\")) %&gt;%\n  mutate(class = rep(\"Low\", length(\"fungicide\"))) %&gt;% \n  dplyr::select(\"fungicide\", \"class\", \"mean\", \"lower\", \"upper\", \"se\")\n\n\nHigh = reg4 %&gt;% \n  filter(class == \"High\") %&gt;% \n  dplyr::select(1:6)\nnames(High) = c(\"fungicide\", \"class\", \"mean\",\"se\", \"lower\", \"upper\") \n\n\nreg6 = full_join(High,reg5)\n#openxlsx::write.xlsx(reg6, here(\"sev_baseline.xlsx\"), colNames = TRUE)\n efficacy_index &lt;- data.frame(cbind(\n   (1 - exp(reg6$mean)) * 100,\n   (1 - exp(reg6$lower)) * 100,\n   (1 - exp(reg6$upper)) * 100),\n   (reg6$class),(reg6$fungicide))\n#openxlsx::write.xlsx(efficacy_index, here(\"efficacy_class.xlsx\"), colNames = TRUE)\n\nDesign groups\n\nlibrary(janitor)\nmed_sev1 = med_sev %&gt;% \n  group_by(ensaio_1) %&gt;% \n  summarise(produto = paste(produto, collapse=';'))\n\nmed_sev1 %&gt;% \n  tabyl(produto)\n\n                                                                                                                                     produto\n                                 AACHECK;ABACUS HC (Controle Positivo);BELYAN  (Controle Positivo);FOX XPRO;OSKESTRA SC;PREVINIL;trat_A20259\n                                  AACHECK;ABACUS HC (Controle Positivo);BELYAN  (Controle Positivo);FOX XPRO;OSKESTRA SC;trat_A20259;TRIDIUM\n AACHECK;ABACUS HC (Controle Positivo);BELYAN  (Controle Positivo);OSKESTRA SC;PREVINIL;TRIDIUM;UNIZEB GOLD (Controle Positivo, multissítio)\n                    AACHECK;ABACUS HC (Controle Positivo);FOX XPRO;OSKESTRA SC;PREVINIL;TRIDIUM;UNIZEB GOLD (Controle Positivo, multissítio)\n                                                              AACHECK;ABACUS HC (Controle Positivo);FOX XPRO;OSKESTRA SC;trat_A20259;TRIDIUM\n                                AACHECK;ABACUS HC (Controle Positivo);FOX XPRO;PREVINIL;TRIDIUM;UNIZEB GOLD (Controle Positivo, multissítio)\n                                              AACHECK;ABACUS HC (Controle Positivo);OSKESTRA SC;UNIZEB GOLD (Controle Positivo, multissítio)\n                                                                                                         AACHECK;BELYAN  (Controle Positivo)\n                                                                               AACHECK;PREVINIL;UNIZEB GOLD (Controle Positivo, multissítio)\n  n    percent\n  4 0.05128205\n 16 0.20512821\n  8 0.10256410\n  9 0.11538462\n 15 0.19230769\n  5 0.06410256\n  8 0.10256410\n  5 0.06410256\n  8 0.10256410\n\ntable(med_sev1$produto)\n\n\n                                AACHECK;ABACUS HC (Controle Positivo);BELYAN  (Controle Positivo);FOX XPRO;OSKESTRA SC;PREVINIL;trat_A20259 \n                                                                                                                                          4 \n                                 AACHECK;ABACUS HC (Controle Positivo);BELYAN  (Controle Positivo);FOX XPRO;OSKESTRA SC;trat_A20259;TRIDIUM \n                                                                                                                                         16 \nAACHECK;ABACUS HC (Controle Positivo);BELYAN  (Controle Positivo);OSKESTRA SC;PREVINIL;TRIDIUM;UNIZEB GOLD (Controle Positivo, multissítio) \n                                                                                                                                          8 \n                   AACHECK;ABACUS HC (Controle Positivo);FOX XPRO;OSKESTRA SC;PREVINIL;TRIDIUM;UNIZEB GOLD (Controle Positivo, multissítio) \n                                                                                                                                          9 \n                                                             AACHECK;ABACUS HC (Controle Positivo);FOX XPRO;OSKESTRA SC;trat_A20259;TRIDIUM \n                                                                                                                                         15 \n                               AACHECK;ABACUS HC (Controle Positivo);FOX XPRO;PREVINIL;TRIDIUM;UNIZEB GOLD (Controle Positivo, multissítio) \n                                                                                                                                          5 \n                                             AACHECK;ABACUS HC (Controle Positivo);OSKESTRA SC;UNIZEB GOLD (Controle Positivo, multissítio) \n                                                                                                                                          8 \n                                                                                                        AACHECK;BELYAN  (Controle Positivo) \n                                                                                                                                          5 \n                                                                              AACHECK;PREVINIL;UNIZEB GOLD (Controle Positivo, multissítio) \n                                                                                                                                          8 \n\n#repete 7 vezes\n\n#D1 #conferido\n\nmed_sev &lt;- med_sev %&gt;%\n  group_by(ensaio_1) %&gt;% \n  mutate(n2 = n()) %&gt;% \n  filter(n2 != 1)\n\n\n\ndesign1 = med_sev %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"BELYAN  (Controle Positivo)\", \"FOX XPRO\", \"OSKESTRA SC\", \"PREVINIL\", \"trat_A20259\")) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(1, length(produto))) %&gt;% \n  filter(n2 == 7) %&gt;% \n  filter(n3 == 7)\ndesign1\n\n# A tibble: 28 × 14\n# Groups:   ensaio_1 [4]\n   municipio regiao ensaio_1 produto   ano mean_sev mean_V     n log_sev  vi_sev\n   &lt;chr&gt;     &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 Cafelând… Sul    22       AACHECK  2018    21.7   9.01      4   3.08  0.00478\n 2 Cafelând… Sul    22       ABACUS…  2018    10.9   9.01      4   2.39  0.0191 \n 3 Cafelând… Sul    22       BELYAN…  2018     5.82  9.01      4   1.76  0.0664 \n 4 Cafelând… Sul    22       FOX XP…  2018     9.6   9.01      4   2.26  0.0244 \n 5 Cafelând… Sul    22       OSKEST…  2018     8.85  9.01      4   2.18  0.0288 \n 6 Cafelând… Sul    22       PREVIN…  2018     9.12  9.01      4   2.21  0.0271 \n 7 Cafelând… Sul    22       trat_A…  2018     8.2   9.01      4   2.10  0.0335 \n 8 Cafelând… Sul    23       AACHECK  2018     5.65  0.178     4   1.73  0.00140\n 9 Cafelând… Sul    23       ABACUS…  2018     1.62  0.178     4   0.486 0.0169 \n10 Cafelând… Sul    23       BELYAN…  2018     0.7   0.178     4  -0.357 0.0910 \n# ℹ 18 more rows\n# ℹ 4 more variables: sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;, design &lt;dbl&gt;\n\n\n#D2 #conferido\n\ndesign2 = med_sev %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"BELYAN  (Controle Positivo)\", \"FOX XPRO\", \"OSKESTRA SC\", \"TRIDIUM\", \"trat_A20259\")) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(2, length(produto))) %&gt;% \n  filter(n2 == 7) %&gt;% \n  filter(n3 == 7)\ndesign2\n\n# A tibble: 112 × 14\n# Groups:   ensaio_1 [16]\n   municipio regiao ensaio_1 produto   ano mean_sev mean_V     n log_sev  vi_sev\n   &lt;chr&gt;     &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 Anápolis  Centr… 48       AACHECK  2020   33.4   2.73       4  3.51   6.14e-4\n 2 Anápolis  Centr… 48       ABACUS…  2020   12.4   2.73       4  2.51   4.48e-3\n 3 Anápolis  Centr… 48       BELYAN…  2020   12.1   2.73       4  2.49   4.66e-3\n 4 Anápolis  Centr… 48       FOX XP…  2020   11.4   2.73       4  2.43   5.30e-3\n 5 Anápolis  Centr… 48       OSKEST…  2020   11.1   2.73       4  2.41   5.54e-3\n 6 Anápolis  Centr… 48       trat_A…  2020   11.8   2.73       4  2.47   4.86e-3\n 7 Anápolis  Centr… 48       TRIDIUM  2020   14.1   2.73       4  2.65   3.43e-3\n 8 Arapongas Sul    27       AACHECK  2019    4.95  0.0929     4  1.60   9.47e-4\n 9 Arapongas Sul    27       ABACUS…  2019    0.975 0.0929     4 -0.0253 2.44e-2\n10 Arapongas Sul    27       BELYAN…  2019    0.45  0.0929     4 -0.799  1.15e-1\n# ℹ 102 more rows\n# ℹ 4 more variables: sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;, design &lt;dbl&gt;\n\n\n#D3 #conferido\n\ndesign3 = med_sev %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"FOX XPRO\", \"OSKESTRA SC\", \"PREVINIL\",\"TRIDIUM\", \"UNIZEB GOLD (Controle Positivo, multissítio)\")) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(3, length(produto))) %&gt;% \n  filter(n2 == 7) %&gt;% \n  filter(n3 == 7)\ndesign3\n\n# A tibble: 63 × 14\n# Groups:   ensaio_1 [9]\n   municipio regiao ensaio_1 produto   ano mean_sev mean_V     n log_sev  vi_sev\n   &lt;chr&gt;     &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 Cafelând… Sul    66       AACHECK  2023    13.4    3.54     4   2.59  4.97e-3\n 2 Cafelând… Sul    66       ABACUS…  2023     3.85   3.54     4   1.35  5.98e-2\n 3 Cafelând… Sul    66       FOX XP…  2023     5.1    3.54     4   1.63  3.41e-2\n 4 Cafelând… Sul    66       OSKEST…  2023     3.1    3.54     4   1.13  9.22e-2\n 5 Cafelând… Sul    66       PREVIN…  2023     4.1    3.54     4   1.41  5.27e-2\n 6 Cafelând… Sul    66       TRIDIUM  2023     4.1    3.54     4   1.41  5.27e-2\n 7 Cafelând… Sul    66       UNIZEB…  2023     2.6    3.54     4   0.956 1.31e-1\n 8 Campo Mo… Sul    65       AACHECK  2023    40.5    2.93     4   3.70  4.47e-4\n 9 Campo Mo… Sul    65       ABACUS…  2023    10.1    2.93     4   2.31  7.18e-3\n10 Campo Mo… Sul    65       FOX XP…  2023    11.6    2.93     4   2.45  5.47e-3\n# ℹ 53 more rows\n# ℹ 4 more variables: sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;, design &lt;dbl&gt;\n\n\n#D4 #conferido\n\ndesign4 = med_sev %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"FOX XPRO\", \"PREVINIL\",\"TRIDIUM\", \"UNIZEB GOLD (Controle Positivo, multissítio)\")) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(4, length(produto))) %&gt;% \n  filter(n2 == 6) %&gt;% \n  filter(n3 == 6)\ndesign4\n\n# A tibble: 30 × 14\n# Groups:   ensaio_1 [5]\n   municipio regiao ensaio_1 produto   ano mean_sev mean_V     n log_sev  vi_sev\n   &lt;chr&gt;     &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 Guarapua… Sul    73       AACHECK  2024    17.6    11.9     4    2.87 0.00962\n 2 Guarapua… Sul    73       ABACUS…  2024     5.38   11.9     4    1.68 0.103  \n 3 Guarapua… Sul    73       FOX XP…  2024     3.12   11.9     4    1.14 0.305  \n 4 Guarapua… Sul    73       PREVIN…  2024     6.62   11.9     4    1.89 0.0679 \n 5 Guarapua… Sul    73       TRIDIUM  2024     6.5    11.9     4    1.87 0.0706 \n 6 Guarapua… Sul    73       UNIZEB…  2024     7.62   11.9     4    2.03 0.0513 \n 7 Lavras    Sudes… 75       AACHECK  2024    10.1    17.9     4    2.31 0.0439 \n 8 Lavras    Sudes… 75       ABACUS…  2024    10.1    17.9     4    2.31 0.0439 \n 9 Lavras    Sudes… 75       FOX XP…  2024     5.1    17.9     4    1.63 0.172  \n10 Lavras    Sudes… 75       PREVIN…  2024     7.6    17.9     4    2.03 0.0775 \n# ℹ 20 more rows\n# ℹ 4 more variables: sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;, design &lt;dbl&gt;\n\n\n#D5 conferido\n\ndesign5 = med_sev %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\",\"BELYAN  (Controle Positivo)\", \"OSKESTRA SC\", \"PREVINIL\",\"TRIDIUM\", \"UNIZEB GOLD (Controle Positivo, multissítio)\")) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(5, length(produto))) %&gt;% \n  filter(n2 == 7) %&gt;% \n  filter(n3 == 7)\ndesign5\n\n# A tibble: 56 × 14\n# Groups:   ensaio_1 [8]\n   municipio regiao ensaio_1 produto   ano mean_sev mean_V     n log_sev  vi_sev\n   &lt;chr&gt;     &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 Cafelând… Sul    58       AACHECK  2022    26.4    1.79     4    3.27 6.44e-4\n 2 Cafelând… Sul    58       ABACUS…  2022    13.4    1.79     4    2.59 2.51e-3\n 3 Cafelând… Sul    58       BELYAN…  2022     7.6    1.79     4    2.03 7.75e-3\n 4 Cafelând… Sul    58       OSKEST…  2022     8.85   1.79     4    2.18 5.71e-3\n 5 Cafelând… Sul    58       PREVIN…  2022    12.6    1.79     4    2.53 2.82e-3\n 6 Cafelând… Sul    58       TRIDIUM  2022    12.4    1.79     4    2.51 2.93e-3\n 7 Cafelând… Sul    58       UNIZEB…  2022    12.8    1.79     4    2.55 2.71e-3\n 8 Campo Mo… Sul    57       AACHECK  2022    18.6   16.6      4    2.92 1.21e-2\n 9 Campo Mo… Sul    57       ABACUS…  2022    14.5   16.6      4    2.68 1.97e-2\n10 Campo Mo… Sul    57       BELYAN…  2022    16.4   16.6      4    2.80 1.54e-2\n# ℹ 46 more rows\n# ℹ 4 more variables: sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;, design &lt;dbl&gt;\n\n\n#D6 #conferido\n\ndesign6 = med_sev %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"OSKESTRA SC\", \"UNIZEB GOLD (Controle Positivo, multissítio)\")) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(6, length(produto))) %&gt;% \n  filter(n2 == 4) %&gt;% \n  filter(n3 == 4)\ndesign6\n\n# A tibble: 32 × 14\n# Groups:   ensaio_1 [8]\n   municipio regiao ensaio_1 produto   ano mean_sev mean_V     n log_sev  vi_sev\n   &lt;chr&gt;     &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 Campo Mo… Sul    82       AACHECK  2017     30.1  26.9      3    3.40 0.00988\n 2 Campo Mo… Sul    82       ABACUS…  2017     20.1  26.9      3    3.00 0.0222 \n 3 Campo Mo… Sul    82       OSKEST…  2017     17.8  26.9      3    2.88 0.0284 \n 4 Campo Mo… Sul    82       UNIZEB…  2017     26.8  26.9      3    3.29 0.0125 \n 5 Campo Mo… Sul    83       AACHECK  2017     30.4   8.67     3    3.42 0.00312\n 6 Campo Mo… Sul    83       ABACUS…  2017     10.1   8.67     3    2.31 0.0283 \n 7 Campo Mo… Sul    83       OSKEST…  2017      8.1   8.67     3    2.09 0.0440 \n 8 Campo Mo… Sul    83       UNIZEB…  2017     19.1   8.67     3    2.95 0.00792\n 9 Campo Mo… Sul    86       AACHECK  2016     25.1   6.25     3    3.22 0.00331\n10 Campo Mo… Sul    86       ABACUS…  2016      4.1   6.25     3    1.41 0.124  \n# ℹ 22 more rows\n# ℹ 4 more variables: sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;, design &lt;dbl&gt;\n\n\n#D7 #Conferido\n\ndesign7 = med_sev %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"PREVINIL\", \"UNIZEB GOLD (Controle Positivo, multissítio)\")) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(7, length(produto))) %&gt;% \n  filter(n2 == 3) %&gt;% \n  filter(n3 == 3)\ndesign7\n\n# A tibble: 24 × 14\n# Groups:   ensaio_1 [8]\n   municipio regiao ensaio_1 produto   ano mean_sev mean_V     n log_sev  vi_sev\n   &lt;chr&gt;     &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 Arapongas Sul    6        AACHECK  2021    3.72   0.498     4   1.32  0.00897\n 2 Arapongas Sul    6        PREVIN…  2021    0.425  0.498     4  -0.856 0.689  \n 3 Arapongas Sul    6        UNIZEB…  2021    0.225  0.498     4  -1.49  2.46   \n 4 Bandeira… Centr… 9        AACHECK  2021    6.6    1.48      4   1.89  0.00852\n 5 Bandeira… Centr… 9        PREVIN…  2021    0.5    1.48      4  -0.693 1.48   \n 6 Bandeira… Centr… 9        UNIZEB…  2021    0.725  1.48      4  -0.322 0.706  \n 7 Bandeira… Sul    7        AACHECK  2021   31.4   40.6       4   3.45  0.0103 \n 8 Bandeira… Sul    7        PREVIN…  2021   14.1   40.6       4   2.65  0.0511 \n 9 Bandeira… Sul    7        UNIZEB…  2021   12.1   40.6       4   2.49  0.0694 \n10 Capão Bo… Sudes… 8        AACHECK  2021   20.0    5.18      4   3.00  0.00323\n# ℹ 14 more rows\n# ℹ 4 more variables: sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;, design &lt;dbl&gt;\n\n\n#D8 #Conferido\n\ndesign8 = med_sev %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c(\"AACHECK\", \"BELYAN  (Controle Positivo)\")) %&gt;% \n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(8, length(produto))) %&gt;% \n  filter(n2 == 2) %&gt;% \n  filter(n3 == 2)\ndesign8\n\n# A tibble: 10 × 14\n# Groups:   ensaio_1 [5]\n   municipio regiao ensaio_1 produto   ano mean_sev mean_V     n log_sev  vi_sev\n   &lt;chr&gt;     &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 Lavras    Sudes… 13       AACHECK  2023    22.1   64.1      4    3.10 0.0328 \n 2 Lavras    Sudes… 13       BELYAN…  2023     3.3   64.1      4    1.19 1.47   \n 3 Patrocín… Sudes… 12       AACHECK  2023    30.7    6.90     4    3.43 0.00183\n 4 Patrocín… Sudes… 12       BELYAN…  2023    16.5    6.90     4    2.80 0.00632\n 5 Ponta Gr… Sul    11       AACHECK  2023    64.6   67.1      4    4.17 0.00402\n 6 Ponta Gr… Sul    11       BELYAN…  2023    16.8   67.1      4    2.82 0.0591 \n 7 Rio Verde Centr… 14       AACHECK  2023    14.0    1.65     4    2.64 0.00210\n 8 Rio Verde Centr… 14       BELYAN…  2023     6.48   1.65     4    1.87 0.00987\n 9 São Migu… Centr… 15       AACHECK  2023    26.7   16.9      4    3.29 0.00590\n10 São Migu… Centr… 15       BELYAN…  2023    13.8   16.9      4    2.63 0.0220 \n# ℹ 4 more variables: sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;, design &lt;dbl&gt;\n\n\n#D9 #Conferido\n\ndesign9 = med_sev %&gt;% \n  group_by(ensaio_1) %&gt;% \n  filter(produto  %in% c('AACHECK', 'ABACUS HC (Controle Positivo)','FOX XPRO', 'OSKESTRA SC','trat_A20259', 'TRIDIUM'))%&gt;%\n  mutate(n3 = n()) %&gt;% \n  mutate(design = rep(9, length(produto))) %&gt;% \n  filter(n2 == 6) %&gt;% \n  filter(n3 == 6)\ndesign9\n\n# A tibble: 90 × 14\n# Groups:   ensaio_1 [15]\n   municipio regiao ensaio_1 produto   ano mean_sev mean_V     n log_sev  vi_sev\n   &lt;chr&gt;     &lt;chr&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 Araponga… Sul    41       AACHECK  2020   22.8   4.53       4   3.13  0.00218\n 2 Araponga… Sul    41       ABACUS…  2020    1.98  4.53       4   0.681 0.290  \n 3 Araponga… Sul    41       FOX XP…  2020    1.42  4.53       4   0.354 0.558  \n 4 Araponga… Sul    41       OSKEST…  2020    2.58  4.53       4   0.946 0.171  \n 5 Araponga… Sul    41       trat_A…  2020    2.62  4.53       4   0.965 0.164  \n 6 Araponga… Sul    41       TRIDIUM  2020    2.72  4.53       4   1.00  0.153  \n 7 Assaí     Sul    34       AACHECK  2019    0.85  0.0168     4  -0.163 0.00581\n 8 Assaí     Sul    34       ABACUS…  2019    0.725 0.0168     4  -0.322 0.00798\n 9 Assaí     Sul    34       FOX XP…  2019    0.55  0.0168     4  -0.598 0.0139 \n10 Assaí     Sul    34       OSKEST…  2019    0.6   0.0168     4  -0.511 0.0117 \n# ℹ 80 more rows\n# ℹ 4 more variables: sev_check_class &lt;chr&gt;, n2 &lt;int&gt;, n3 &lt;int&gt;, design &lt;dbl&gt;\n\n\n#juntando os design\n\nsev_design = rbind(design1, design2, design3, design4, design5, design6, design7, design8, design9)\n\n\nsev_design %&gt;% \n  group_by(ensaio_1, design) %&gt;% \n  summarize() %&gt;% \n  tabyl(design)\n\n design  n    percent\n      1  4 0.05128205\n      2 16 0.20512821\n      3  9 0.11538462\n      4  5 0.06410256\n      5  8 0.10256410\n      6  8 0.10256410\n      7  8 0.10256410\n      8  5 0.06410256\n      9 15 0.19230769\n\n\nInconsistency\n\nmv_sev_design &lt;- rma.mv(log_sev, vi_sev,\n  mods = ~produto * design,\n  random = list(~ 1 | ensaio_1 / design / produto),\n  struct = \"HCS\",\n  method = \"ML\",\n  control = list(optimizer = \"nlm\"),\n  data = sev_design)\n\nmv_sev_design\n\n\nMultivariate Meta-Analysis Model (k = 445; method: ML)\n\nVariance Components:\n\n            estim    sqrt  nlvls  fixed                   factor \nsigma^2.1  0.3760  0.6132     78     no                 ensaio_1 \nsigma^2.2  0.3760  0.6132     78     no          ensaio_1/design \nsigma^2.3  0.0720  0.2683    445     no  ensaio_1/design/produto \n\nTest for Residual Heterogeneity:\nQE(df = 427) = 53237.7194, p-val &lt; .0001\n\nTest of Moderators (coefficients 2:18):\nQM(df = 17) = 847.1330, p-val &lt; .0001\n\nModel Results:\n\n                                                            estimate      se \nintrcpt                                                       2.6490  0.2216 \nprodutoABACUS HC (Controle Positivo)                         -0.9941  0.1023 \nprodutoBELYAN  (Controle Positivo)                           -1.5331  0.1444 \nprodutoFOX XPRO                                              -1.2373  0.1119 \nprodutoOSKESTRA SC                                           -1.1980  0.1126 \nprodutoPREVINIL                                              -1.0670  0.1700 \nprodutotrat_A20259                                           -1.2715  0.1277 \nprodutoTRIDIUM                                               -1.0051  0.1145 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)          -0.9437  0.2124 \ndesign                                                        0.0456  0.0381 \nprodutoABACUS HC (Controle Positivo):design                   0.0217  0.0186 \nprodutoBELYAN  (Controle Positivo):design                     0.0862  0.0325 \nprodutoFOX XPRO:design                                        0.0135  0.0204 \nprodutoOSKESTRA SC:design                                     0.0051  0.0203 \nprodutoPREVINIL:design                                        0.0376  0.0376 \nprodutotrat_A20259:design                                     0.0002  0.0211 \nprodutoTRIDIUM:design                                        -0.0183  0.0205 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):design    0.0265  0.0422 \n                                                                zval    pval \nintrcpt                                                      11.9542  &lt;.0001 \nprodutoABACUS HC (Controle Positivo)                         -9.7127  &lt;.0001 \nprodutoBELYAN  (Controle Positivo)                          -10.6169  &lt;.0001 \nprodutoFOX XPRO                                             -11.0562  &lt;.0001 \nprodutoOSKESTRA SC                                          -10.6388  &lt;.0001 \nprodutoPREVINIL                                              -6.2753  &lt;.0001 \nprodutotrat_A20259                                           -9.9558  &lt;.0001 \nprodutoTRIDIUM                                               -8.7785  &lt;.0001 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)          -4.4440  &lt;.0001 \ndesign                                                        1.1976  0.2311 \nprodutoABACUS HC (Controle Positivo):design                   1.1676  0.2430 \nprodutoBELYAN  (Controle Positivo):design                     2.6536  0.0080 \nprodutoFOX XPRO:design                                        0.6626  0.5076 \nprodutoOSKESTRA SC:design                                     0.2510  0.8018 \nprodutoPREVINIL:design                                        1.0001  0.3172 \nprodutotrat_A20259:design                                     0.0113  0.9910 \nprodutoTRIDIUM:design                                        -0.8922  0.3723 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):design    0.6276  0.5303 \n                                                              ci.lb    ci.ub \nintrcpt                                                      2.2147   3.0833 \nprodutoABACUS HC (Controle Positivo)                        -1.1947  -0.7935 \nprodutoBELYAN  (Controle Positivo)                          -1.8162  -1.2501 \nprodutoFOX XPRO                                             -1.4566  -1.0179 \nprodutoOSKESTRA SC                                          -1.4188  -0.9773 \nprodutoPREVINIL                                             -1.4002  -0.7337 \nprodutotrat_A20259                                          -1.5218  -1.0211 \nprodutoTRIDIUM                                              -1.2295  -0.7807 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)         -1.3600  -0.5275 \ndesign                                                      -0.0290   0.1202 \nprodutoABACUS HC (Controle Positivo):design                 -0.0147   0.0582 \nprodutoBELYAN  (Controle Positivo):design                    0.0225   0.1498 \nprodutoFOX XPRO:design                                      -0.0264   0.0534 \nprodutoOSKESTRA SC:design                                   -0.0346   0.0448 \nprodutoPREVINIL:design                                      -0.0361   0.1112 \nprodutotrat_A20259:design                                   -0.0410   0.0415 \nprodutoTRIDIUM:design                                       -0.0585   0.0219 \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):design  -0.0562   0.1091 \n                                                                \nintrcpt                                                     *** \nprodutoABACUS HC (Controle Positivo)                        *** \nprodutoBELYAN  (Controle Positivo)                          *** \nprodutoFOX XPRO                                             *** \nprodutoOSKESTRA SC                                          *** \nprodutoPREVINIL                                             *** \nprodutotrat_A20259                                          *** \nprodutoTRIDIUM                                              *** \nprodutoUNIZEB GOLD (Controle Positivo, multissítio)         *** \ndesign                                                          \nprodutoABACUS HC (Controle Positivo):design                     \nprodutoBELYAN  (Controle Positivo):design                    ** \nprodutoFOX XPRO:design                                          \nprodutoOSKESTRA SC:design                                       \nprodutoPREVINIL:design                                          \nprodutotrat_A20259:design                                       \nprodutoTRIDIUM:design                                           \nprodutoUNIZEB GOLD (Controle Positivo, multissítio):design      \n\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nanova(mv_sev_design, btt = 11:18)\n\n\nTest of Moderators (coefficients 11:18):\nQM(df = 8) = 11.4389, p-val = 0.1780"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Foliar fungicide efficacy against maize white spot: Insights from a nine-year meta-analysis",
    "section": "",
    "text": "Maize white spot (MWS) caused by Pantoea ananatis in Brazil is among the most impactful foliar diseases affecting maize production, often resulting in significant yield losses. To assess how different fungicide types influence disease control and yield response, we analyzed data from 87 independent field trials conducted over a nine-year period (2016–2024) across five Brazilian states and Distrito Federal. Eight fungicide treatments were included, each evaluated in at least 19 trials with available disease severity data. Two treatments involved solo active ingredients (MANCozeb and ChLORothalonil), while six were premix formulations (DIFenoconazole + PYDIflumetofen, PYRAclostrobin + EPOXiconazole, PYRAclostrobin + FLUXapyroxad, AZOxystrobin + TEBUconazole + MANCozeb, PYRAclostrobin + FLUXapyroxad + MEFEntrifluconazole, and TRiFloXystrobin + PROThioconazole + BIXafen). Percent control, estimated by back-transformation from a log-scale network meta-analysis, ranged from 53.2% to 71.3%. All treatments, except PYRA + EPOX and MANC, achieved average efficacy above 60%. Yield gains from three sequential fungicide applications ranged from 694 to 1,081 kg ha⁻¹, with the highest increases observed for DIF + PYDI, PYRA + FLUX + MEFE, and TRFX + PROT + BIX. These findings, derived from nearly a decade of field research, reinforce the importance of fungicide applications in reducing maize white spot severity and improving yield. Moreover, they support current resistance management strategies that advocate for the combination of site-specific and multisite fungicides to optimize disease control and sustain long-term effectiveness."
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "Organizing the data",
    "section": "",
    "text": "library(gsheet)\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(dplyr)\nlibrary(tidyr)\n\n\n\n\n\ndf = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1JAEAXsmb928CsyCzRbfTP2ilruEof2Qkr_zWUfaknOc/edit?gid=0#gid=0\")\n\ndf\n\n# A tibble: 3,708 × 28\n   Ensaio ensaio_1 pesquisador     ano n_aplicacao cultivar cultivo bioma\n    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;\n 1      2        1 Marina Senger  2024          NA &lt;NA&gt;     &lt;NA&gt;    &lt;NA&gt; \n 2      2        1 Marina Senger  2024          NA &lt;NA&gt;     &lt;NA&gt;    &lt;NA&gt; \n 3      2        1 Marina Senger  2024          NA &lt;NA&gt;     &lt;NA&gt;    &lt;NA&gt; \n 4      2        1 Marina Senger  2024          NA &lt;NA&gt;     &lt;NA&gt;    &lt;NA&gt; \n 5      2        1 Marina Senger  2024          NA &lt;NA&gt;     &lt;NA&gt;    &lt;NA&gt; \n 6      2        1 Marina Senger  2024          NA &lt;NA&gt;     &lt;NA&gt;    &lt;NA&gt; \n 7      2        1 Marina Senger  2024          NA &lt;NA&gt;     &lt;NA&gt;    &lt;NA&gt; \n 8      2        1 Marina Senger  2024          NA &lt;NA&gt;     &lt;NA&gt;    &lt;NA&gt; \n 9      2        1 Marina Senger  2024          NA &lt;NA&gt;     &lt;NA&gt;    &lt;NA&gt; \n10      2        1 Marina Senger  2024          NA &lt;NA&gt;     &lt;NA&gt;    &lt;NA&gt; \n# ℹ 3,698 more rows\n# ℹ 20 more variables: municipio &lt;chr&gt;, regiao &lt;chr&gt;, estado &lt;chr&gt;,\n#   macrorregiao &lt;chr&gt;, mesorregiao &lt;chr&gt;, microrregiao &lt;chr&gt;,\n#   instituicao &lt;chr&gt;, `dose/ha` &lt;chr&gt;, registro &lt;chr&gt;, numero_registro &lt;chr&gt;,\n#   `concentração ia. no produto(%)` &lt;chr&gt;, codigo_frac &lt;chr&gt;, empresa &lt;chr&gt;,\n#   bloco &lt;dbl&gt;, produto &lt;chr&gt;, adjuvante &lt;chr&gt;, trat &lt;dbl&gt;, sev &lt;dbl&gt;,\n#   aacpd &lt;dbl&gt;, prod &lt;dbl&gt;\n\n\n\n\n\n\n# Count in how many trials each product is present\nensaio_por_produto &lt;- df %&gt;%\n  group_by(produto) %&gt;%\n  summarise(ensaio_count = n_distinct(ensaio_1))\n\n# Count how many years are present within each trial\nanos_por_ensaio &lt;- df %&gt;%\n  group_by(Ensaio) %&gt;%\n  summarise(anos_count = n_distinct(ano))\n\n# Filter products with more than 19 trials\nprodutos_com_mais_de_19_ensaios &lt;- ensaio_por_produto %&gt;%\n  filter(ensaio_count &gt; 19)\n\n# For these products, check in how many years they are present\nanos_por_produto &lt;- df %&gt;%\n  filter(produto %in% produtos_com_mais_de_19_ensaios$produto) %&gt;%\n  group_by(produto) %&gt;%\n  summarise(anos_count = n_distinct(ano))\n\n# Filter products present in at least 4 years\nprodutos_em_4_anos_ou_mais &lt;- anos_por_produto %&gt;%\n  filter(anos_count &gt;= 4)\n\n# Filter data with these products #continue with the 79 as the control is present in all\ndf_filtrado &lt;- df %&gt;%\n  filter(produto %in% produtos_em_4_anos_ou_mais$produto)\n\n\n\n\n\n\n\nThe control needs to be placed first so that the model can consider it as the intercept. Therefore, I added two A’s at the beginning\n\ndat1 &lt;- df_filtrado %&gt;%\n  group_by(municipio, bloco, ensaio_1, produto,ano, estado, regiao)  |&gt; \n  mutate(produto = case_when(\n    produto == \"Testemunha (Controle Negativo)\" ~ \"AACHECK\",\n    produto == \"A20259\" ~ \"trat_A20259\",\n    TRUE ~ produto  # Mantém os demais valores inalterados\n  )) |&gt;  \n   summarise(mean_sev = mean(sev),\n            mean_prod = mean(prod))\n\n\n\n\nSome trials will contain only the control, making it impossible to compare with other treatments within the same trial (hence, ANOVA cannot be performed). Therefore, trials where the same number (repetition count) appears only 4 times should be removed.\n\ndat1 &lt;- dat1 %&gt;%\n  group_by(ensaio_1) %&gt;%\n  filter(n() &gt; 4) %&gt;%  \n  ungroup()\nunique(dat1$estado)\n\n[1] \"GO\" \"PR\" \"MS\" \"SP\" \"MG\" \"DF\"\n\n\n\n\n\n\n# Verifying the trials\ntratamentos_por_ensaio &lt;- dat1 %&gt;%\n  group_by(ensaio_1) %&gt;%\n  summarise(\n    total_tratamentos = n_distinct(produto), # Count unique treatments\n    .groups = \"drop\"\n  )\n\n\ncontagem_por_produto &lt;- dat1 %&gt;%\n  group_by(produto) %&gt;%\n  summarise(\n    total_ensaios = n_distinct(ensaio_1),  # Count unique trials\n    total_anos = n_distinct(ano),         # Count unique years\n    anos = paste(sort(unique(ano)), collapse = \", \"), # List sorted years\n    ensaios = paste(sort(unique(ensaio_1)), collapse = \", \"), # List unique trials\n    .groups = \"drop\"\n  )\n\nlibrary(writexl)\nwrite_xlsx(contagem_por_produto, \"contagem_por_produto_após_filtro.xlsx\")\nwrite_xlsx(dat1, \"dat1.xlsx\")"
  },
  {
    "objectID": "data.html#packages",
    "href": "data.html#packages",
    "title": "Organizing the data",
    "section": "",
    "text": "library(gsheet)\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(dplyr)\nlibrary(tidyr)"
  },
  {
    "objectID": "data.html#import-data",
    "href": "data.html#import-data",
    "title": "Organizing the data",
    "section": "",
    "text": "df = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1JAEAXsmb928CsyCzRbfTP2ilruEof2Qkr_zWUfaknOc/edit?gid=0#gid=0\")\n\ndf\n\n# A tibble: 3,708 × 28\n   Ensaio ensaio_1 pesquisador     ano n_aplicacao cultivar cultivo bioma\n    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;\n 1      2        1 Marina Senger  2024          NA &lt;NA&gt;     &lt;NA&gt;    &lt;NA&gt; \n 2      2        1 Marina Senger  2024          NA &lt;NA&gt;     &lt;NA&gt;    &lt;NA&gt; \n 3      2        1 Marina Senger  2024          NA &lt;NA&gt;     &lt;NA&gt;    &lt;NA&gt; \n 4      2        1 Marina Senger  2024          NA &lt;NA&gt;     &lt;NA&gt;    &lt;NA&gt; \n 5      2        1 Marina Senger  2024          NA &lt;NA&gt;     &lt;NA&gt;    &lt;NA&gt; \n 6      2        1 Marina Senger  2024          NA &lt;NA&gt;     &lt;NA&gt;    &lt;NA&gt; \n 7      2        1 Marina Senger  2024          NA &lt;NA&gt;     &lt;NA&gt;    &lt;NA&gt; \n 8      2        1 Marina Senger  2024          NA &lt;NA&gt;     &lt;NA&gt;    &lt;NA&gt; \n 9      2        1 Marina Senger  2024          NA &lt;NA&gt;     &lt;NA&gt;    &lt;NA&gt; \n10      2        1 Marina Senger  2024          NA &lt;NA&gt;     &lt;NA&gt;    &lt;NA&gt; \n# ℹ 3,698 more rows\n# ℹ 20 more variables: municipio &lt;chr&gt;, regiao &lt;chr&gt;, estado &lt;chr&gt;,\n#   macrorregiao &lt;chr&gt;, mesorregiao &lt;chr&gt;, microrregiao &lt;chr&gt;,\n#   instituicao &lt;chr&gt;, `dose/ha` &lt;chr&gt;, registro &lt;chr&gt;, numero_registro &lt;chr&gt;,\n#   `concentração ia. no produto(%)` &lt;chr&gt;, codigo_frac &lt;chr&gt;, empresa &lt;chr&gt;,\n#   bloco &lt;dbl&gt;, produto &lt;chr&gt;, adjuvante &lt;chr&gt;, trat &lt;dbl&gt;, sev &lt;dbl&gt;,\n#   aacpd &lt;dbl&gt;, prod &lt;dbl&gt;"
  },
  {
    "objectID": "data.html#filtering-the-data",
    "href": "data.html#filtering-the-data",
    "title": "Organizing the data",
    "section": "",
    "text": "# Count in how many trials each product is present\nensaio_por_produto &lt;- df %&gt;%\n  group_by(produto) %&gt;%\n  summarise(ensaio_count = n_distinct(ensaio_1))\n\n# Count how many years are present within each trial\nanos_por_ensaio &lt;- df %&gt;%\n  group_by(Ensaio) %&gt;%\n  summarise(anos_count = n_distinct(ano))\n\n# Filter products with more than 19 trials\nprodutos_com_mais_de_19_ensaios &lt;- ensaio_por_produto %&gt;%\n  filter(ensaio_count &gt; 19)\n\n# For these products, check in how many years they are present\nanos_por_produto &lt;- df %&gt;%\n  filter(produto %in% produtos_com_mais_de_19_ensaios$produto) %&gt;%\n  group_by(produto) %&gt;%\n  summarise(anos_count = n_distinct(ano))\n\n# Filter products present in at least 4 years\nprodutos_em_4_anos_ou_mais &lt;- anos_por_produto %&gt;%\n  filter(anos_count &gt;= 4)\n\n# Filter data with these products #continue with the 79 as the control is present in all\ndf_filtrado &lt;- df %&gt;%\n  filter(produto %in% produtos_em_4_anos_ou_mais$produto)"
  },
  {
    "objectID": "data.html#changing-the-name-of-the-control",
    "href": "data.html#changing-the-name-of-the-control",
    "title": "Organizing the data",
    "section": "",
    "text": "The control needs to be placed first so that the model can consider it as the intercept. Therefore, I added two A’s at the beginning\n\ndat1 &lt;- df_filtrado %&gt;%\n  group_by(municipio, bloco, ensaio_1, produto,ano, estado, regiao)  |&gt; \n  mutate(produto = case_when(\n    produto == \"Testemunha (Controle Negativo)\" ~ \"AACHECK\",\n    produto == \"A20259\" ~ \"trat_A20259\",\n    TRUE ~ produto  # Mantém os demais valores inalterados\n  )) |&gt;  \n   summarise(mean_sev = mean(sev),\n            mean_prod = mean(prod))"
  },
  {
    "objectID": "data.html#filtering-again",
    "href": "data.html#filtering-again",
    "title": "Organizing the data",
    "section": "",
    "text": "Some trials will contain only the control, making it impossible to compare with other treatments within the same trial (hence, ANOVA cannot be performed). Therefore, trials where the same number (repetition count) appears only 4 times should be removed.\n\ndat1 &lt;- dat1 %&gt;%\n  group_by(ensaio_1) %&gt;%\n  filter(n() &gt; 4) %&gt;%  \n  ungroup()\nunique(dat1$estado)\n\n[1] \"GO\" \"PR\" \"MS\" \"SP\" \"MG\" \"DF\""
  },
  {
    "objectID": "data.html#verifying-some-information",
    "href": "data.html#verifying-some-information",
    "title": "Organizing the data",
    "section": "",
    "text": "# Verifying the trials\ntratamentos_por_ensaio &lt;- dat1 %&gt;%\n  group_by(ensaio_1) %&gt;%\n  summarise(\n    total_tratamentos = n_distinct(produto), # Count unique treatments\n    .groups = \"drop\"\n  )\n\n\ncontagem_por_produto &lt;- dat1 %&gt;%\n  group_by(produto) %&gt;%\n  summarise(\n    total_ensaios = n_distinct(ensaio_1),  # Count unique trials\n    total_anos = n_distinct(ano),         # Count unique years\n    anos = paste(sort(unique(ano)), collapse = \", \"), # List sorted years\n    ensaios = paste(sort(unique(ensaio_1)), collapse = \", \"), # List unique trials\n    .groups = \"drop\"\n  )\n\nlibrary(writexl)\nwrite_xlsx(contagem_por_produto, \"contagem_por_produto_após_filtro.xlsx\")\nwrite_xlsx(dat1, \"dat1.xlsx\")"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "boxplot.html",
    "href": "boxplot.html",
    "title": "Boxplot",
    "section": "",
    "text": "library(gsheet)\nlibrary(tidyverse)\nlibrary(ggthemes)"
  },
  {
    "objectID": "boxplot.html#packages",
    "href": "boxplot.html#packages",
    "title": "Boxplot",
    "section": "",
    "text": "library(gsheet)\nlibrary(tidyverse)\nlibrary(ggthemes)"
  },
  {
    "objectID": "boxplot.html#import-the-data",
    "href": "boxplot.html#import-the-data",
    "title": "Boxplot",
    "section": "Import the data",
    "text": "Import the data\n\ndat1 = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1joo0WaR7yNWZavGPbwQMjiFPpWHErtGL/edit?gid=1485993259#gid=1485993259\")"
  },
  {
    "objectID": "boxplot.html#organizing-the-data",
    "href": "boxplot.html#organizing-the-data",
    "title": "Boxplot",
    "section": "Organizing the data",
    "text": "Organizing the data\n\ndatbox &lt;- dat1 %&gt;%\n  group_by(municipio, ensaio_1, produto,ano,estado) %&gt;%\n  mutate(\n    produto = case_when(\n      produto == \"AACHECK\" ~ \"Check\",\n      produto == \"TRIDIUM\" ~ \"AZO + TEBU + MANC\",\n      produto == \"PREVINIL\" ~ \"CLOR\",\n      produto == \"trat_A20259\" ~ \"DIF + PYDI\",\n      produto == \"ABACUS HC (Controle Positivo)\" ~ \"PYRA + EPOX\",\n      produto == \"OSKESTRA SC\" ~ \"PYRA + FLUX\",\n      produto == \"BELYAN  (Controle Positivo)\" ~ \"PYRA + FLUX + MEFE\",\n      produto == \"FOX XPRO\" ~ \"TRFX + PROT + BIX\",\n      produto == \"UNIZEB GOLD (Controle Positivo, multissítio)\" ~ \"MANC\",\n      TRUE ~ produto  # Caso o nome do produto não coincida com nenhum dos anteriores, ele permanece igual\n    ),\n    produto = factor(produto, levels = c(\n      \"Check\", \"CLOR\", \"MANC\", \"DIF + PYDI\", \"PYRA + EPOX\", \n      \"PYRA + FLUX\", \"AZO + TEBU + MANC\", \"PYRA + FLUX + MEFE\", \n      \"TRFX + PROT + BIX\"\n    ))\n  )%&gt;% \n   summarise(mean_sev = mean(mean_sev),\n            mean_prod = mean(mean_prod))\nunique(dat1$produto)\n\n[1] \"AACHECK\"                                     \n[2] \"ABACUS HC (Controle Positivo)\"               \n[3] \"BELYAN  (Controle Positivo)\"                 \n[4] \"FOX XPRO\"                                    \n[5] \"OSKESTRA SC\"                                 \n[6] \"TRIDIUM\"                                     \n[7] \"trat_A20259\"                                 \n[8] \"PREVINIL\"                                    \n[9] \"UNIZEB GOLD (Controle Positivo, multissítio)\""
  },
  {
    "objectID": "boxplot.html#fungicide-x-severity",
    "href": "boxplot.html#fungicide-x-severity",
    "title": "Boxplot",
    "section": "Fungicide x severity",
    "text": "Fungicide x severity\n\np2 = ggplot(datbox, aes(x = produto, y = mean_sev)) +\n  geom_boxplot(outlier.shape = NA, fill = \"white\", color = \"#fc8d59\", size = 0.8) + \n  geom_jitter(width = 0.2, alpha = 0.3, size = 1, show.legend = FALSE, color = \"#fc8d59\")+  \n  theme_few()+\n  labs(x = \"\", y = \"Severity (%)\") +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),  \n    axis.title = element_text(face = \"bold\"))+\n    scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 20))+\n  theme(\n    axis.text.x = element_blank(),   # Esconde os rótulos do eixo x\n    axis.title.x = element_blank(),  # Esconde o título do eixo x\n    axis.title = element_text(face = \"bold\")  \n  )"
  },
  {
    "objectID": "boxplot.html#fungicide-x-yield",
    "href": "boxplot.html#fungicide-x-yield",
    "title": "Boxplot",
    "section": "Fungicide x Yield",
    "text": "Fungicide x Yield\n\np4 = ggplot(datbox, aes(x = produto, y = mean_prod)) +\n  geom_boxplot(outlier.shape = NA, fill = \"white\", color = \"#FFC222\", size =  0.8) + \n  geom_jitter(width = 0.2, alpha = 0.3, size = 1, show.legend = FALSE, color = \"#FFC222\")+  \n  theme_few()+\n labs(x = expression(bold(\"Foliar fungicides\")), y = expression(bold(\"Yield (kg ha\"^-1*\")\")))+\n   theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),  \n    axis.title = element_text(face = \"bold\")  )+\n scale_y_continuous(limits = c(0, 13000), breaks = seq(0, 13000, by = 2000))"
  },
  {
    "objectID": "boxplot.html#year-x-severity",
    "href": "boxplot.html#year-x-severity",
    "title": "Boxplot",
    "section": "Year x Severity",
    "text": "Year x Severity\n\ndatbox2 = datbox %&gt;% filter(produto == \"Check\")\n\np1 = ggplot(datbox2, aes(x = as.factor(ano), y = mean_sev)) +\n  geom_boxplot(outlier.shape = NA, fill = \"white\", color = \"#fc8d59\", size = 0.8) + \n  geom_jitter(width = 0.2, alpha = 0.3, size = 1, show.legend = FALSE, color = '#fc8d59')+  \n  theme_few()+\n  labs(x = \"\", y = \"Severity (%) in the CHECK\") +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),  \n    axis.title = element_text(face = \"bold\")  \n  )+\n  theme(\n    axis.text.x = element_blank(),   # Esconde os rótulos do eixo x\n    axis.title.x = element_blank(),  # Esconde o título do eixo x\n    axis.title = element_text(face = \"bold\")  \n  ) +\n    scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 20))\n\ndatbox2 |&gt; \n  group_by(ano) |&gt; \n  summarise(\n    media = mean(mean_sev, na.rm = TRUE),\n    mediana = median(mean_sev, na.rm = TRUE),\n      media_prod = mean(mean_prod, na.rm = TRUE),\n    mediana_prod = median(mean_prod, na.rm = TRUE))\n\n# A tibble: 9 × 5\n    ano media mediana media_prod mediana_prod\n  &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n1  2016 19.3    20.2       5387.        5387.\n2  2017 23.8    24         5464.        5325.\n3  2018  9.74    8.1       8290.        8042.\n4  2019 10.4     4.85      7689.        7732.\n5  2020 21.2    20.6       6621.        6309.\n6  2021 24.8    23.1       5513.        5513.\n7  2022 34.9    27.1        NaN           NA \n8  2023 31.7    28.0       5008.        5360.\n9  2024 26.5    23.2        NaN           NA"
  },
  {
    "objectID": "boxplot.html#year-x-yield",
    "href": "boxplot.html#year-x-yield",
    "title": "Boxplot",
    "section": "Year x Yield",
    "text": "Year x Yield\n\np3 = ggplot(datbox2, aes(x = as.factor(ano), y = mean_prod)) +\n  geom_boxplot(outlier.shape = NA, fill = \"white\", color = \"#FFC222\", size =  0.8) + \n  geom_jitter(width = 0.2, alpha = 0.3, size = 1, show.legend = FALSE, color = \"#FFC222\")+  \n  theme_few()+\n  labs(x = expression(bold(\"Second crop season\")), \n     y = expression(bold(\"Yield (kg ha\"^-1*\") in the CHECK\"))) +\n   theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),  \n    axis.title = element_text(face = \"bold\"))+\n   scale_y_continuous(limits = c(0, 12000), breaks = seq(0, 12000, by = 2000))"
  },
  {
    "objectID": "boxplot.html#combining-the-plots",
    "href": "boxplot.html#combining-the-plots",
    "title": "Boxplot",
    "section": "Combining the plots",
    "text": "Combining the plots\n\nlibrary(patchwork)\n(p1|p2)/\n(p3|p4) + plot_annotation(tag_levels = \"A\")\n\n\n\n\n\n\n\n#ggsave(\"box_plot_MWS.png\", width = 8, height = 8, bg = \"white\", dpi = 1000)"
  },
  {
    "objectID": "economic_analysis.html",
    "href": "economic_analysis.html",
    "title": "Untitleds",
    "section": "",
    "text": "\\[\nL(\\alpha, \\beta \\mid P) = \\prod_{i=1}^n \\frac{\\beta^\\alpha P_i^{\\alpha-1} e^{-\\beta P_i}}{\\Gamma(\\alpha)}\n\\]"
  },
  {
    "objectID": "economic_analysis.html#packages",
    "href": "economic_analysis.html#packages",
    "title": "Untitleds",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(cowplot)\nlibrary(gsheet)\nlibrary(stats4)\nlibrary(minpack.lm)\nlibrary(ggdist)\nlibrary(lubridate)\nlibrary(ggthemes)\nlibrary(cowplot)"
  },
  {
    "objectID": "economic_analysis.html#import-the-data",
    "href": "economic_analysis.html#import-the-data",
    "title": "Untitleds",
    "section": "Import the data",
    "text": "Import the data\n\neff_yld_data = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1kTmVINkk8W_luffQew4nrMvqrvZQhe6JLjR_WzbBQT4/edit?gid=1891034819#gid=1891034819\")\n\n\ncost_data = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/11K6BssCO1_qMZEb5sU1BMpbNKE0YrACsT4tAY51KvvY/edit?gid=740235580#gid=740235580\")\n\nprice_data = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1dEC3-AckAFJ3XsWTln1KLbz4jOp3d1sV/edit?gid=1164957368#gid=1164957368\") %&gt;%\n  mutate(data = dmy(data)) |&gt; mutate(year = year(data))"
  },
  {
    "objectID": "economic_analysis.html#find-the-most-appropriate-theoretical-distribution-for-corn-price",
    "href": "economic_analysis.html#find-the-most-appropriate-theoretical-distribution-for-corn-price",
    "title": "Untitleds",
    "section": "Find the most appropriate theoretical distribution for corn price",
    "text": "Find the most appropriate theoretical distribution for corn price\n\nprice_data %&gt;%\n  ggplot(aes(preco))+\n  geom_histogram(bins = 20,color =\"white\", fill = \"gray\")\n\n\n\n\n\n\n\n\n\nprice_data %&gt;%\n  ggplot(aes(as.factor(year), preco))+\n  geom_jitter(width = 0.1)"
  },
  {
    "objectID": "economic_analysis.html#nonlinear-least-squares-model",
    "href": "economic_analysis.html#nonlinear-least-squares-model",
    "title": "Untitleds",
    "section": "Nonlinear least squares model",
    "text": "Nonlinear least squares model\n\n# Fits a nonlinear least squares model to the data.\nprice_reg = nlsLM(Fx ~ pgamma(x, shape, rate, log = FALSE),\n      start = c(shape = 2.5, rate = 0.13),\n      control = nls.lm.control(maxiter = 1024))\nsummary(price_reg)\n\n\nFormula: Fx ~ pgamma(x, shape, rate, log = FALSE)\n\nParameters:\n      Estimate Std. Error t value Pr(&gt;|t|)    \nshape  3.77499    0.22667   16.65   &lt;2e-16 ***\nrate   0.46632    0.03102   15.03   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.04761 on 60 degrees of freedom\n\nNumber of iterations to convergence: 8 \nAchieved convergence tolerance: 1.49e-08\n\nshape = summary(price_reg)$coef[1]\nrate = summary(price_reg)$coef[2]\n\n# Plot the ECDF and overlay the Gamma distribution curve\nplot(ecdf(price_data$preco))\ncurve(pgamma(x, shape, rate), 0, 600, add = T, col = \"red\")"
  },
  {
    "objectID": "economic_analysis.html#visualizing-the-histogram",
    "href": "economic_analysis.html#visualizing-the-histogram",
    "title": "Untitleds",
    "section": "Visualizing the histogram",
    "text": "Visualizing the histogram\n\nprice_data %&gt;%\n  ggplot(aes(preco))+\n geom_histogram(aes(y = ..density..),bins = 10, color = \"white\", fill = \"#481567FF\")+\n   stat_function(fun=function(x) dgamma(x, shape,  rate), size = 1.2, color = \"black\")+\n  theme_bw()+\n  xlim(0,20)+\n  labs(x=\"Slope (kg/p.p.)\", y = \"Density\")"
  },
  {
    "objectID": "economic_analysis.html#maximum-likelihood-estimation",
    "href": "economic_analysis.html#maximum-likelihood-estimation",
    "title": "Untitleds",
    "section": "Maximum Likelihood Estimation",
    "text": "Maximum Likelihood Estimation\n\nMASS::fitdistr(price_data$preco, \"gamma\", start=list(shape=3.76, rate=0.46))\n\n     shape         rate   \n  4.79129294   0.57861917 \n (0.63061276) (0.08029102)\n\nplot(ecdf(price_data$preco))\ncurve(pgamma(x, 3.76,  0.46),0,200,  add = T, col = \"red\")"
  },
  {
    "objectID": "economic_analysis.html#visualizing-the-histogram-1",
    "href": "economic_analysis.html#visualizing-the-histogram-1",
    "title": "Untitleds",
    "section": "Visualizing the histogram",
    "text": "Visualizing the histogram\n\nprice_data %&gt;%\n  ggplot(aes(preco))+\n geom_histogram(aes(y = ..density..),bins = 15, color = \"white\", fill = \"#481567FF\")+\n   stat_function(fun=function(x) dgamma(x, 3.76,  0.46), size = 1.2, color = \"black\")+\n  theme_bw()+\n  xlim(0,20)+\n  labs(x=\"Slope (kg/p.p.)\", y = \"Density\")"
  },
  {
    "objectID": "economic_analysis.html#non-linear-or-mle",
    "href": "economic_analysis.html#non-linear-or-mle",
    "title": "Untitleds",
    "section": "Non linear or MLE",
    "text": "Non linear or MLE\n\nKolmogorov-Smirnov Test\nThe Kolmogorov-Smirnov (KS) test is used to compare two cumulative distributions, testing whether the sample distributions are significantly different. The p-value resulting from the KS test indicates the probability that the data distribution is the same as the theoretical distribution (in this case, the Gamma distribution). If the p-value is small (typically less than 0.05), it suggests that the data distribution differs significantly from the theoretical distribution.\n\n# using regression\nks.test(Fx, pgamma(x, shape, rate) )\n\n\n    Exact two-sample Kolmogorov-Smirnov test\n\ndata:  Fx and pgamma(x, shape, rate)\nD = 0.1129, p-value = 0.8285\nalternative hypothesis: two-sided\n\n# using Maximum likelihood\nks.test(Fx, pgamma(x,  3.76,  0.46))\n\n\n    Exact two-sample Kolmogorov-Smirnov test\n\ndata:  Fx and pgamma(x, 3.76, 0.46)\nD = 0.096774, p-value = 0.9367\nalternative hypothesis: two-sided\n\n# p-value gives the probability of data distributions be equal to the theoretical distribution obtained"
  },
  {
    "objectID": "economic_analysis.html#simulations",
    "href": "economic_analysis.html#simulations",
    "title": "Untitleds",
    "section": "Simulations",
    "text": "Simulations\n\nlibrary(truncnorm)\n\n\nset.seed(1)\nn_sim = 50000\nfuns = unique(eff_yld_data$fungicide)\nbox1 = data.frame()\n\nfor(i in 1:length(funs)){\n  # Filtering the data for the current fungicide (without using the 'region' variable)\n  single_data = eff_yld_data %&gt;% \n    filter(fungicide == funs[i]) # filter for the respective fungicide yield data\n\n  single_cost = cost_data %&gt;% \n    filter(fungicide == funs[i]) # filter for the respective fungicide cost data\n\n  cmin = single_cost$cost - single_cost$cost*0.05 # adjusting a variable cost range for that fungicide\n  cmax = single_cost$cost + single_cost$cost*0.05\n\n  C = runif(n_sim, cmin, cmax) # generating n_sim random values (50000) for product price, uniformly distributed\n\n  P = rgamma(n_sim, shape, rate)/60 # generating n_sim random values for corn price based on the equation defined in the previous code\n\n  y_mu = single_data$mean_yld # mean yield for the fungicide\n  y_se = single_data$SE_yld # standard error of yield for the fungicide\n\n  Y = rtruncnorm(n_sim, a=0, b=Inf, y_mu, y_se) # ensuring positive values in a truncated distribution\n\n  profit = (P * Y) - C # P(corn price) multiplied by mean yield. Subtract the product cost. Get profit\n\n  eventos = (C &lt;= (P * Y)) * 1 # checking if the cost is less than or equal to profit, if true is 1, otherwise 0.\n\n  # Creating the box for each fungicide\n  lil_box = data.frame(fungicide = funs[i],\n                       C_point = single_cost$cost, # original cost\n                       C, # simulated product cost\n                       P,  # simulated corn price\n                       Y,   # simulated yield\n                       profit, # simulated profits\n                       eventos) # less than or equal to profit = 1\n\n  # Adding to the overall box\n  box1 = box1 %&gt;% \n    bind_rows(lil_box)\n}"
  },
  {
    "objectID": "economic_analysis.html#probability-of-making-a-profit",
    "href": "economic_analysis.html#probability-of-making-a-profit",
    "title": "Untitleds",
    "section": "Probability of making a profit",
    "text": "Probability of making a profit\n\nprobs = box1 %&gt;% \n  group_by(fungicide) %&gt;% \n  summarise(P = round(mean(eventos), 2), #probabilidade de sucesso para cada fungicida\n            m = mean(profit),\n            lower = quantile(profit, 0.025),\n            upper = quantile(profit, 0.975)) %&gt;% \n  mutate(P = paste(\"p =\", P))\nprobs %&gt;% \n  arrange(-m)\n\n# A tibble: 8 × 5\n  fungicide          P            m lower upper\n  &lt;chr&gt;              &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 MANC               p = 0.87  70.2 -25.4  244.\n2 PYRA + FLUX + MEFE p = 0.69  46.0 -62.1  230.\n3 CLOR               p = 0.77  41.7 -30.6  175.\n4 TRFX + PROT + BIX  p = 0.65  37.2 -65.9  213.\n5 PYRA + FLUX        p = 0.66  35.7 -58.6  194.\n6 PYRA + EPOX        p = 0.71  34.0 -40.2  164.\n7 DIF + PYDI         p = 0.61  31.9 -78.1  219.\n8 AZO + TEBU + MANC  p = 0.64  30.2 -56.3  181.\n\n\n#Plot\n\nbox1 |&gt; \n  mutate(fungicide = factor(fungicide, levels = c(\"TRFX + PROT + BIX\",\"PYRA + FLUX + MEFE\",  \"AZO + TEBU + MANC\", \"PYRA + FLUX\", \"PYRA + EPOX\", \"DIF + PYDI\",\"MANC\", \"CLOR\"))) |&gt; \n  ggplot(aes()) +\n  geom_vline(xintercept = 0, color = \"gray40\", size = 0.7) +\n   stat_slab(aes(profit, fungicide, alpha = stat(plogis(x / 100))),  fill = \"#ff9900\") +\n  #stat_pointinterval(aes(x = profit, y = fungicide), \n   #                  position = position_dodge(width = 0.8, preserve = \"single\"),  \n    #                 .width = c(0.75, 0.95),\n     #                size = 1.2, color = \"#313695\", alpha = 0.8) +\n  geom_text(data = probs, \n            aes(x = m, y = fungicide, label = P),\n            position = position_dodge(width = 0.8),  \n            size = 3, vjust = -3, hjust = -1.5, color = \"black\", fontface = \"bold.italic\") +  \n  geom_point(data = cost_data,\n             aes(spray, fungicide, shape = \"Spray cost\"),\n             size =2, color = \"#d73027\" )+\n  geom_text(data = cost_data,\n          aes(x = spray, y = fungicide, label = sprintf(\"%.1f\", spray)),\n          size = 3, color = \"#d73027\", vjust = -0.5, hjust= 0, fontface = \"bold\")+\n  guides(alpha = \"none\", shape = \"none\", fill = guide_legend(title = \"Profit Status\")) +\n theme_minimal_vgrid() +\n  theme(legend.position = \"bottom\", \n        plot.title = element_text(hjust = 0.5),\n        axis.title.x = element_text(size = 12),\n        axis.text.x = element_text(size = 10),\n        axis.text.y = element_text(size = 10),\n        panel.grid.major.y = element_blank(), \n        panel.grid.minor = element_blank(),\n         panel.background = element_rect(fill = scales::alpha(\"white\", 0.01)),\n        plot.margin = unit(c(1, 1, 1, 1), \"cm\")) +\n  coord_cartesian(xlim = c(-200, 450)) +\n   scale_x_continuous(breaks = seq(0, 450, by = 50))+\n  labs(x = expression(bold(\"Profit (US$ ha\"^-1*\")\")),\n     y = expression(bold(\"Fungicide\")),\n       fill = \"Profit Status\",\n       color = \"Profit Status\",\n       shape = \"Cost\")+\n geom_point(data = probs, aes(x = m, y = fungicide), size = 2, color = \"#313695\", position = position_nudge(y = -0.2)) +\n  geom_errorbarh(data = probs, aes(xmin = lower, xmax = upper, y = fungicide), \n                 height = 0, size= 0.6, color = \"#313695\", position = position_nudge(y = -0.2))+\ngeom_text(data = probs, \n          aes(x = m, y = fungicide, label = paste0(\"π = \", round(m, 1))),\n          position = position_dodge(width = 0.8),  \n          size = 3, vjust = -1.5, hjust = -1.5, color = \"#313695\", fontface = \"bold.italic\")\n\n\n\n\n\n\n\nlibrary(patchwork)\n\n#ggsave(\"figures/profit.png\", dpi=600, height = 7,bg = \"white\", width = 7)"
  },
  {
    "objectID": "map.html",
    "href": "map.html",
    "title": "",
    "section": "",
    "text": "#map\n\nlibrary(scales)\nlibrary(ggspatial) \nlibrary(gsheet)\nlibrary(ggrepel)\nlibrary(cowplot)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(sf)\nlibrary(tidyverse)\nmap = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1JAEAXsmb928CsyCzRbfTP2ilruEof2Qkr_zWUfaknOc/edit?gid=1402084465#gid=1402084465\")\n\nBRA = ne_states(\n  country = \"Brazil\",\n  returnclass = \"sf\"\n)\nlibrary(geobr)\nmunicipios &lt;- read_municipality(code_muni = \"all\", year = 2020)\nmunicipios = municipios %&gt;% filter(name_state ==  c(\"Paraná\",\"São Paulo\", \"Mato Grosso do Sul\",\"Goiás\",\"Minas Gerais\",\"Distrito Federal\"))\n\nstates &lt;- filter(BRA, \n                 name_pt == \"Paraná\"|\n                 name_pt == \"São Paulo\"|\n                 name_pt == \"Mato Grosso do Sul\"|\n                 name_pt == \"Goiás\"|\n                 name_pt == \"Minas Gerais\"|\n                 name_pt == \"Federal\")\nunique(BRA$name_pt)\n\n [1] \"Rio Grande do Sul\"   \"Roraima\"             \"Pará\"               \n [4] \"Acre\"                \"Amapá\"               \"Mato Grosso do Sul\" \n [7] \"Paraná\"              \"Santa Catarina\"      \"Amazonas\"           \n[10] \"Rondônia\"            \"Mato Grosso\"         \"Maranhão\"           \n[13] \"Piauí\"               \"Ceará\"               \"Rio Grande do Norte\"\n[16] \"Paraíba\"             \"Pernambuco\"          \"Alagoas\"            \n[19] \"Sergipe\"             \"Bahia\"               \"Espírito Santo\"     \n[22] \"Rio de Janeiro\"      \"São Paulo\"           \"Goiás\"              \n[25] \"Federal\"             \"Minas Gerais\"        \"Tocantins\"          \n\nstates = states %&gt;% \n  mutate(id = case_when(\n    name_pt == \"Paraná\" ~ \"PR\",\n    name_pt == \"São Paulo\" ~ \"SP\",\n    name_pt == \"Mato Grosso do Sul\" ~ \"MS\",\n    name_pt == \"Goiás\" ~ \"GO\",\n    name_pt == \"Minas Gerais\" ~ \"MG\",\n    name_pt == \"Federal\" ~ \"DF\"))\n\nSUL = ne_states(\n  country = c(\"Argentina\", \"Uruguay\", \"Paraguay\", \"Colombia\", \"Bolivia\"),\n  returnclass = \"sf\")\n\nbr_sf &lt;- ne_states(geounit = \"brazil\",\n                   returnclass = \"sf\")\n\n\nlibrary(ggplot2)\nlibrary(cowplot)  \n\nmap3 = map |&gt;  filter(estado != \"PR\")\nmapa_principal &lt;- ggplot() +\n  #geom_sf(data = SUL, fill = \"white\", color = \"white\") +\n  geom_sf(data = BRA, fill = \"white\", color = \"gray60\", size = 0.2)  + \n  geom_sf(data = subset(BRA, postal %in% c(\"GO\", \"MG\", \"PR\", \"MS\", \"SP\", \"DF\")), \n        fill = NA, color = \"black\", size = 1) + \n  geom_text(data = states, aes(x = longitude, y = latitude, label = id), \n            size = 3, hjust = 0.8, color = \"black\", fontface = \"bold\") +\n  geom_point(data = map, aes(x = lon, y = lat, size = n, color = sev), \n             alpha = 0.8) +\n  scale_color_gradientn(colors = c(\"#313695\", \"#74add1\", \"#ffcc00\", \"#fd8d3c\", \"#e31a1c\", \"#800026\"),\n                      breaks = seq(0, 70, by = 15), \n                      limits = c(0, 70)) +\n  scale_size_continuous(range = c(1, 5), breaks = c(1, 5, 12)) +\n  theme_minimal_grid() +\n  coord_sf(xlim = c(-60, -37), ylim = c(-27, -12), expand = FALSE) +\n   guides(size = FALSE,  \n         color = guide_colorbar(title = \"Severity (%)\", \n                                direction = \"horizontal\",\n                                title.position = \"top\"))  +\n    theme(legend.position = c(0.9, 0.01),  \n        legend.justification = c(1, 0),\n         legend.direction = \"horizontal\",\n         legend.title.align = 0.5,\n         panel.border = element_rect(color = \"black\", fill = NA, size = 1))+\n   annotation_north_arrow(location = \"br\", which_north = \"true\", \n                         pad_x = unit(5.86, \"in\"), pad_y = unit(0.3, \"in\"), \n                         style = north_arrow_fancy_orienteering, \n                         height = unit(1.2, \"cm\"), width = unit(1.1, \"cm\")) +\n   annotation_scale(location = \"br\", \n                   width_hint = 0.1, \n                   height = unit(0.2, \"cm\"), \n                   text_cex = 0.6, \n                   pad_x = unit(5.8, \"in\"), \n                   pad_y = unit(0.2, \"in\")) +\n  labs(x = \"Longitude\", y = \"Latitude\")\nmapa_principal\n\n\n\n\n\n\n\npr_municipios &lt;- read_municipality(code_muni = \"all\", year = 2020) %&gt;%\n  filter(name_state == \"Paraná\")\n\nBRA &lt;- ne_states(country = \"Brazil\", returnclass = \"sf\")\npr_estado &lt;- BRA %&gt;% filter(name_pt == \"Paraná\")\nmap2 = map |&gt; filter(estado == \"PR\")\n\nmapa_brasil &lt;- ggplot() +\n  geom_sf(data = BRA, fill = \"white\", color = \"black\", size = 0.2) +  \n  geom_sf(data = subset(BRA, postal %in% c(\"GO\", \"MG\", \"PR\", \"MS\", \"SP\")), \n          fill = \"gray40\", color = \"black\", size = 0.6) +  \n  theme_map() +\n    theme(\n    panel.background = element_rect(fill = \"white\", color = NA),  \n    plot.background = element_rect(fill = \"white\", color = NA),   \n    panel.border = element_rect(color = \"black\", fill = NA, size = 1)) \n\n\nlibrary(patchwork)\n\nmapa_principal + \n  inset_element(mapa_brasil, \n                left = 0.8, bottom = 0.7,  \n                right = 0.99, top = 1) \n\n\n\n\n\n\n\n#ggsave(\"map.png\", height=8, width=8, dpi = 600, bg = \"white\")"
  },
  {
    "objectID": "sev_yld_graph.html",
    "href": "sev_yld_graph.html",
    "title": "",
    "section": "",
    "text": "#sev x Yield\n#Packages\n\nlibrary(gsheet)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(scales)\n\n\ngain = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1OFccjyBsxeVPchSNfFy7hvMp23PCoZ4bt2YpInABiKg/edit?usp=sharing\") \n\n\ngain = gain |&gt;  mutate(fungicide = recode(fungicide, \n                          'trat_A20259' = \"DIF + PYDI\",\n                          \"ABACUS HC (Controle Positivo)\"= \"PYRA + EPOX\",\n                          \"BAS 753 02 F\" = \"PYRA + FLUX + MEFE\",\n                          \"FOX XPRO\" = \"TRFX + PROT + BIX\",\n                          \"OSKESTRA SC\" = \"PYRA + FLUX\",\n                          \"PREVINIL\" = \"CLOR\",\n                          \"TRIDIUM\" = \"AZO + TEBU + MANC\",\n                           \"UNIZEB GOLD (Controle Positivo, multissítio)\" = \"MANC\"\n                          )) \ngain %&gt;% \n  mutate(fungicide = factor(fungicide, \n                           levels = c(\"MANC\", \"CLOR\", \n                                      \"DIF + PYDI\", \"PYRA + EPOX\", \"PYRA + FLUX + MEFE\", \n                                      \"TRFX + PROT + BIX\", \"PYRA + FLUX\", \n                                      \"AZO + TEBU + MANC\"))) |&gt; \n  ggplot(aes(mean, mean_yld)) + \n  geom_errorbar(aes(ymin = ci.lb_yld, ymax = ci.ub_yld, color = fungicide), alpha = 0.8, width=0, size= 0.8)+\n  geom_errorbarh(aes(xmin = low, xmax = up, color = fungicide), alpha = 0.8, height= 0, size= 0.8)+\n  geom_point(aes(mean, mean_yld, color = fungicide), size = 3)+\n  #scale_y_continuous(breaks=seq(0, 2500, 500), limits=c(0,2500))+\n  #scale_x_continuous(breaks=seq(0, 80, 10), limits=c(0, 80))+\n  #theme_minimal_grid()+\n  scale_color_colorblind()+\n  labs(y = \"Yield return (kg/ha)\", x = \"Efficacy (%)\", color = \"Foliar fungicide\")+\n  theme(axis.text=element_text(size=12), \n        axis.title=element_text(size=12, face = \"bold\"),\n        legend.position = \"right\",\n        legend.title.align = 0.5,\n        strip.text.x = element_text(size = 14, face = \"bold\"),\n        legend.title = element_text(size=12, face = \"bold\"))\n\n\n\n\n\n\n\n#ggsave(\"yld_eff.png\", height=5, width=10, dpi = 600, bg = \"white\")"
  }
]