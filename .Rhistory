#| warning: false
#| message: false
library(gsheet)
library(tidyverse)
library(ggthemes)
dat1 = gsheet2tbl("https://docs.google.com/spreadsheets/d/1joo0WaR7yNWZavGPbwQMjiFPpWHErtGL/edit?gid=1485993259#gid=1485993259")
datbox <- dat1 %>%
group_by(municipio, ensaio_1, produto,ano,estado) %>%
mutate(
produto = case_when(
produto == "AACHECK" ~ "Check",
produto == "TRIDIUM" ~ "AZO + TEBU + MANC",
produto == "PREVINIL" ~ "CLOR",
produto == "trat_A20259" ~ "DIF + PYDI",
produto == "ABACUS HC (Controle Positivo)" ~ "PYRA + EPOX",
produto == "OSKESTRA SC" ~ "PYRA + FLUX",
produto == "BELYAN  (Controle Positivo)" ~ "PYRA + FLUX + MEFE",
produto == "FOX XPRO" ~ "TRFX + PROT + BIX",
produto == "UNIZEB GOLD (Controle Positivo, multissítio)" ~ "MANC",
TRUE ~ produto  # Caso o nome do produto não coincida com nenhum dos anteriores, ele permanece igual
),
produto = factor(produto, levels = c(
"Check", "CLOR", "MANC", "DIF + PYDI", "PYRA + EPOX",
"PYRA + FLUX", "AZO + TEBU + MANC", "PYRA + FLUX + MEFE",
"TRFX + PROT + BIX"
))
)%>%
summarise(mean_sev = mean(mean_sev),
mean_prod = mean(mean_prod))
unique(dat1$produto)
p2 = ggplot(datbox, aes(x = produto, y = mean_sev)) +
geom_boxplot(outlier.shape = NA, fill = "white", color = "#fc8d59", size = 0.8) +
geom_jitter(width = 0.2, alpha = 0.3, size = 1, show.legend = FALSE, color = "#fc8d59")+
theme_few()+
labs(x = "", y = "Severity (%)") +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title = element_text(face = "bold"))+
scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 20))+
theme(
axis.text.x = element_blank(),   # Esconde os rótulos do eixo x
axis.title.x = element_blank(),  # Esconde o título do eixo x
axis.title = element_text(face = "bold")
)
p4 = ggplot(datbox, aes(x = produto, y = mean_prod)) +
geom_boxplot(outlier.shape = NA, fill = "white", color = "#FFC222", size =  0.8) +
geom_jitter(width = 0.2, alpha = 0.3, size = 1, show.legend = FALSE, color = "#FFC222")+
theme_few()+
labs(x = expression(bold("Foliar fungicides")), y = expression(bold("Yield (kg ha"^-1*")")))+
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title = element_text(face = "bold")  )+
scale_y_continuous(limits = c(0, 13000), breaks = seq(0, 13000, by = 2000))
datbox2 = datbox %>% filter(produto == "Check")
p1 = ggplot(datbox2, aes(x = as.factor(ano), y = mean_sev)) +
geom_boxplot(outlier.shape = NA, fill = "white", color = "#fc8d59", size = 0.8) +
geom_jitter(width = 0.2, alpha = 0.3, size = 1, show.legend = FALSE, color = '#fc8d59')+
theme_few()+
labs(x = "", y = "Severity (%) in the CHECK") +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title = element_text(face = "bold")
)+
theme(
axis.text.x = element_blank(),   # Esconde os rótulos do eixo x
axis.title.x = element_blank(),  # Esconde o título do eixo x
axis.title = element_text(face = "bold")
) +
scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 20))
datbox2 |>
group_by(ano) |>
summarise(
media = mean(mean_sev, na.rm = TRUE),
mediana = median(mean_sev, na.rm = TRUE),
media_prod = mean(mean_prod, na.rm = TRUE),
mediana_prod = median(mean_prod, na.rm = TRUE))
p3 = ggplot(datbox2, aes(x = as.factor(ano), y = mean_prod)) +
geom_boxplot(outlier.shape = NA, fill = "white", color = "#FFC222", size =  0.8) +
geom_jitter(width = 0.2, alpha = 0.3, size = 1, show.legend = FALSE, color = "#FFC222")+
theme_few()+
labs(x = expression(bold("Second crop season")),
y = expression(bold("Yield (kg ha"^-1*") in the CHECK"))) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title = element_text(face = "bold"))+
scale_y_continuous(limits = c(0, 12000), breaks = seq(0, 12000, by = 2000))
library(patchwork)
(p1|p2)/
(p3|p4) + plot_annotation(tag_levels = "A")
ggsave("box_plot_MWS.png", width = 8, height = 8, bg = "white", dpi = 1000)
datbox <- dat1 %>%
group_by(municipio, ensaio_1, produto,ano,estado) %>%
mutate(
produto = case_when(
produto == "AACHECK" ~ "Check",
produto == "TRIDIUM" ~ "AZO + TEBU + MANC",
produto == "PREVINIL" ~ "CLOR",
produto == "trat_A20259" ~ "DIF + PYDI",
produto == "ABACUS HC (Controle Positivo)" ~ "PYRA + EPOX",
produto == "OSKESTRA SC" ~ "PYRA + FLUX",
produto == "BELYAN  (Controle Positivo)" ~ "PYRA + FLUX + MEFE",
produto == "FOX XPRO" ~ "TRFX + PROT + BIX",
produto == "UNIZEB GOLD (Controle Positivo, multissítio)" ~ "MANC",
TRUE ~ produto  # Caso o nome do produto não coincida com nenhum dos anteriores, ele permanece igual
),
produto = factor(produto, levels = c(
"Check", "CLOR", "MANC", "DIF + PYDI", "PYRA + EPOX",
"PYRA + FLUX", "AZO + TEBU + MANC", "PYRA + FLUX + MEFE",
"TRFX + PROT + BIX"
))
)%>%
summarise(mean_sev = mean(mean_sev),
mean_prod = mean(mean_prod))
unique(dat1$produto)
p2 = ggplot(datbox, aes(x = produto, y = mean_sev)) +
geom_boxplot(outlier.shape = NA, fill = "white", color = "#fc8d59", size = 0.8) +
geom_jitter(width = 0.2, alpha = 0.3, size = 1, show.legend = FALSE, color = "#fc8d59")+
theme_few()+
labs(x = "", y = "Severity (%)") +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title = element_text(face = "bold"))+
scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 20))+
theme(
axis.text.x = element_blank(),   # Esconde os rótulos do eixo x
axis.title.x = element_blank(),  # Esconde o título do eixo x
axis.title = element_text(face = "bold")
)
p4 = ggplot(datbox, aes(x = produto, y = mean_prod)) +
geom_boxplot(outlier.shape = NA, fill = "white", color = "#FFC222", size =  0.8) +
geom_jitter(width = 0.2, alpha = 0.3, size = 1, show.legend = FALSE, color = "#FFC222")+
theme_few()+
labs(x = expression(bold("Foliar fungicides")), y = expression(bold("Yield (kg ha"^-1*")")))+
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title = element_text(face = "bold")  )+
scale_y_continuous(limits = c(0, 13000), breaks = seq(0, 13000, by = 2000))
datbox2 = datbox %>% filter(produto == "Check")
p1 = ggplot(datbox2, aes(x = as.factor(ano), y = mean_sev)) +
geom_boxplot(outlier.shape = NA, fill = "white", color = "#fc8d59", size = 0.8) +
geom_jitter(width = 0.2, alpha = 0.3, size = 1, show.legend = FALSE, color = '#fc8d59')+
theme_few()+
labs(x = "", y = "Severity (%) in the CHECK") +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title = element_text(face = "bold")
)+
theme(
axis.text.x = element_blank(),   # Esconde os rótulos do eixo x
axis.title.x = element_blank(),  # Esconde o título do eixo x
axis.title = element_text(face = "bold")
) +
scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 20))
datbox2 |>
group_by(ano) |>
summarise(
media = mean(mean_sev, na.rm = TRUE),
mediana = median(mean_sev, na.rm = TRUE),
media_prod = mean(mean_prod, na.rm = TRUE),
mediana_prod = median(mean_prod, na.rm = TRUE))
p3 = ggplot(datbox2, aes(x = as.factor(ano), y = mean_prod)) +
geom_boxplot(outlier.shape = NA, fill = "white", color = "#FFC222", size =  0.8) +
geom_jitter(width = 0.2, alpha = 0.3, size = 1, show.legend = FALSE, color = "#FFC222")+
theme_few()+
labs(x = expression(bold("Second crop season")),
y = expression(bold("Yield (kg ha"^-1*") in the CHECK"))) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title = element_text(face = "bold"))+
scale_y_continuous(limits = c(0, 12000), breaks = seq(0, 12000, by = 2000))
library(patchwork)
(p1|p2)/
(p3|p4) + plot_annotation(tag_levels = "A")
ggsave("box_plot_MWS.png", width = 8, height = 8, bg = "white", dpi = 1000)
library(scales)
library(ggspatial)
library(readxl)
library(ggrepel)
library(cowplot)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
library(tidyverse)
map = gsheet2tbl("https://docs.google.com/spreadsheets/d/1JAEAXsmb928CsyCzRbfTP2ilruEof2Qkr_zWUfaknOc/edit?gid=1402084465#gid=1402084465")
map = gsheet2tbl("https://docs.google.com/spreadsheets/d/1JAEAXsmb928CsyCzRbfTP2ilruEof2Qkr_zWUfaknOc/edit?gid=1402084465#gid=1402084465")
library(ggsheet)
library(gsheet)
library(tidyverse)
efficacy_res <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1sXr3kLjpKCZA-WUqqXrerkMBa1D61bwT/edit?gid=947435541#gid=947435541")
yield_res <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1WKDA30xXJHkD57osKPp6ylRQPUobc0cS/edit?gid=1424387508#gid=1424387508")
sev_yld = full_join(efficacy_res, yield_res)
#write_csv(sev_yld, "sev_yld.csv")
#| warning: false
#| message: false
library(gsheet)
library(tidyverse)
library(broom)
library(tidyr)
library(metafor)
library(multcomp)
library(emmeans)
dat1 = gsheet2tbl("https://docs.google.com/spreadsheets/d/1joo0WaR7yNWZavGPbwQMjiFPpWHErtGL/edit?gid=1485993259#gid=1485993259")
dat1 |> ggplot(aes(produto, mean_sev)) +
geom_boxplot()
outliers <- dat1 %>%
filter(produto == "trat_A20259") %>%
group_by(produto, bloco) %>%
mutate(outlier = mean_sev < quantile(mean_sev, 0.25) - 1.5 * IQR(mean_sev) |
mean_sev > quantile(mean_sev, 0.75) + 1.5 * IQR(mean_sev)) %>%
filter(outlier) %>%
dplyr::select(ensaio_1, mean_sev)
print(outliers)
# Converting variables to factors
dat1$bloco = as.factor(dat1$bloco)   # Block as a factor
dat1$produto = as.factor(dat1$produto)   # fungicide as a factor
dat1$ensaio_1 = as.factor(dat1$ensaio_1)  # Trial as a factor
str(dat1)
# Performing ANOVA to obtain Sum of Squares (Sq) and Mean Squares (MeanSq)
dat2 <- dat1 %>%
filter(mean_sev != "NA")|>
group_by(ensaio_1) %>%
dplyr::select(ensaio_1, produto, bloco, mean_sev) %>%
nest(data = c(produto, bloco, mean_sev)) %>%
dplyr::mutate(
aov_results = map(data, ~ tidy(aov(mean_sev ~ produto + bloco, data = .x)))
) %>%
unnest(aov_results) %>%
filter(term == "Residuals")|>
dplyr::select(1,6)
#First: Merge the Original Spreadsheet (dat1) with the Spreadsheet Containing the ANOVA Results;
dat3 <- left_join(dat1, dat2) |>
group_by(municipio,regiao, ensaio_1, produto, ano) %>%
summarise(mean_sev = mean(mean_sev+0.1), #severity mean
mean_V = mean(meansq), #SQ mean
n = n()) |>
mutate(log_sev = log(mean_sev)) #Mean of the transformed severity
#Calculating adjusted variance of severity
dat3$vi_sev = with(dat3, mean_V / (n * mean_sev^2))
net_arm_UN_first <- rma.mv(
log_sev,
vi_sev,
mods = ~ produto,
method = "ML",
random = list( ~ produto | factor(ensaio_1)),
struct = "HCS",
control = list(optimizer = "nlm"),
data = dat3)
summary(net_arm_UN_first)
#salvando
m1 <- data.frame(cbind(
(net_arm_UN_first$b),
(net_arm_UN_first$ci.lb),
(net_arm_UN_first$ci.ub),
(net_arm_UN_first$se)))
m1 = m1
names (m1) = c("log_sev", "sev_lw", "sev_up", "se")
m1 <- m1 |>
mutate(fungicide = c("check", "ABACUSHC", "BAS75302F", "FOX XPRO", "OSKESTRASC", "PREVINIL", "A20259", "TRIDIUM", "UNIZEBGOLD"))
m1 <- m1 |>
dplyr::select(fungicide, log_sev, sev_lw, sev_up,se)
library(writexl)
#write_xlsx(m1, "results_log_Sev.xlsx")
#The glht() function is used to perform multiple comparisons between the groups adjusted by the model
net_arm_UN_comp <-
summary(glht(
model = net_arm_UN_first,
linfct = cbind(contrMat(rep(1, 9), type = "Tukey")) ))
net_arm_UN_comp
plot(net_arm_UN_comp)
library(emmeans)
library(multcomp)
meta <- emmprep(net_arm_UN_first)
emmeans_meta <- emmeans(meta, ~ produto, type = "response")
cld_result <- data.frame(cld(emmeans_meta, decreasing = TRUE, Letters = LETTERS))
cld_result
#linha de base
library(janitor)
AACHECK = dat1 |> filter(produto == "AACHECK")
summary(AACHECK)
med_sev <- dat3 %>%
mutate(sev_check_class = case_when(
mean_sev < 21 ~ "low",
mean_sev >= 21 ~ "high"))
med_sev %>%
tabyl(produto, sev_check_class)
model_mm <- rma.mv(
log_sev ,
vi_sev,
mods = ~ produto * factor(sev_check_class),
method = "ML",
random = list( ~ produto | factor(ensaio_1)),
struct = "HCS",
control = list(optimizer = "nlm"),
data = med_sev)
anova(model_mm, btt = 5:6)
summary(model_mm)
table(med_sev$produto, med_sev$sev_check_class)
#openxlsx::write.xlsx(efficacy_index, here("efficacy_class.xlsx"), colNames = TRUE)
anova(model_mm, btt = 11:18)
