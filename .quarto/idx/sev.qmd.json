{"title":"Meta-analysis for the variable severity","markdown":{"yaml":{"title":""},"headingText":"Meta-analysis for the variable severity","containsRefs":false,"markdown":"\n\n\n## Packages\n\n```{r}\n#| warning: false\n#| message: false\nlibrary(gsheet)\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(tidyr)\nlibrary(metafor)\nlibrary(multcomp)\n library(emmeans)\n```\n\n## Import the data\n\n```{r}\ndat1 = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1joo0WaR7yNWZavGPbwQMjiFPpWHErtGL/edit?gid=1485993259#gid=1485993259\")\n\ndat1 |> ggplot(aes(produto, mean_sev)) +\n  geom_boxplot()\n\noutliers <- dat1 %>%\n  filter(produto == \"trat_A20259\") %>%\n  group_by(produto, bloco) %>%\n  mutate(outlier = mean_sev < quantile(mean_sev, 0.25) - 1.5 * IQR(mean_sev) | \n                   mean_sev > quantile(mean_sev, 0.75) + 1.5 * IQR(mean_sev)) %>%\n  filter(outlier) %>%\n  dplyr::select(ensaio_1, mean_sev)\n\nprint(outliers)\n\n\n\n```\n\n## ANOVA for Each Trial/Study\n\n```{r}\n# Converting variables to factors  \ndat1$bloco = as.factor(dat1$bloco)   # Block as a factor  \ndat1$produto = as.factor(dat1$produto)   # fungicide as a factor  \ndat1$ensaio_1 = as.factor(dat1$ensaio_1)  # Trial as a factor  \n\nstr(dat1)\n\n\n# Performing ANOVA to obtain Sum of Squares (Sq) and Mean Squares (MeanSq)\ndat2 <- dat1 %>%\n  filter(mean_sev != \"NA\")|> \n  group_by(ensaio_1) %>%\n  dplyr::select(ensaio_1, produto, bloco, mean_sev) %>% \n  nest(data = c(produto, bloco, mean_sev)) %>% \n  dplyr::mutate(\n    aov_results = map(data, ~ tidy(aov(mean_sev ~ produto + bloco, data = .x)))\n  ) %>%\n  unnest(aov_results) %>%\n  filter(term == \"Residuals\")|> \n  dplyr::select(1,6)\n```\n\n## Calculating the mean and adjusted variance\n\n```{r}\n#First: Merge the Original Spreadsheet (dat1) with the Spreadsheet Containing the ANOVA Results; \ndat3 <- left_join(dat1, dat2) |> \n group_by(municipio,regiao, ensaio_1, produto, ano) %>% \n  summarise(mean_sev = mean(mean_sev+0.1), #severity mean\n            mean_V = mean(meansq), #SQ mean\n            n = n()) |> \n  mutate(log_sev = log(mean_sev)) #Mean of the transformed severity\n\n\n#Calculating adjusted variance of severity\n  dat3$vi_sev = with(dat3, mean_V / (n * mean_sev^2))\n  \n  \n\n```\n\n## Meta-analysis\n\n### Fitting different models\n\nDifferences in structures were tested, and the one that best fit was the unstructured. The others are commented out.\n\n```{r}\n\n\n net_arm_UN_first <- rma.mv(\n   log_sev,\n   vi_sev,\n   mods = ~ produto,\n   method = \"ML\",\n   random = list( ~ produto | factor(ensaio_1)),\n   struct = \"HCS\",\n   control = list(optimizer = \"nlm\"),\n   data = dat3)\n summary(net_arm_UN_first)\n \n \n #salvando\n m1 <- data.frame(cbind(\n   (net_arm_UN_first$b),\n   (net_arm_UN_first$ci.lb),\n   (net_arm_UN_first$ci.ub),\n   (net_arm_UN_first$se)))\n \n m1 = m1\n   names (m1) = c(\"log_sev\", \"sev_lw\", \"sev_up\", \"se\")\n   \n  m1 <- m1 |>\n mutate(fungicide = c(\"check\", \"ABACUSHC\", \"BAS75302F\", \"FOX XPRO\", \"OSKESTRASC\", \"PREVINIL\", \"A20259\", \"TRIDIUM\", \"UNIZEBGOLD\")) \nm1 <- m1 |>  \n    dplyr::select(fungicide, log_sev, sev_lw, sev_up,se)\nlibrary(writexl)\n#write_xlsx(m1, \"results_log_Sev.xlsx\")\n\n```\n\n### Pairwise comparison\n\n```{r}\n#The glht() function is used to perform multiple comparisons between the groups adjusted by the model\n net_arm_UN_comp <-\n   summary(glht(\n   model = net_arm_UN_first,\n   linfct = cbind(contrMat(rep(1, 9), type = \"Tukey\")) ))\n\n  net_arm_UN_comp\n\n plot(net_arm_UN_comp)\n\n \n \n \n library(emmeans)\nlibrary(multcomp)\nmeta <- emmprep(net_arm_UN_first)\nemmeans_meta <- emmeans(meta, ~ produto, type = \"response\")\ncld_result <- data.frame(cld(emmeans_meta, decreasing = TRUE, Letters = LETTERS))\ncld_result\n\n```\n\n###Efficacy\n```{r}\n efficacy_index <- data.frame(cbind(\n   (1 - exp(net_arm_UN_first$b)) * 100,\n   (1 - exp(net_arm_UN_first$ci.lb)) * 100,\n   (1 - exp(net_arm_UN_first$ci.ub)) * 100))\n\n# #Organize the data.frame\n efficacy_index = efficacy_index\n   names (efficacy_index) = c(\"efficacy\", \"efficacy_up\", \"efficacy_lw\")\n  \nefficacy_index <- efficacy_index |>\n  mutate(fungicide = c(\"check\", \"ABACUSHC\", \"BAS75302F\", \"FOX XPRO\", \"OSKESTRASC\", \"PREVINIL\", \"A20259\", \"TRIDIUM\", \"UNIZEBGOLD\")) |>\n  filter(fungicide != \"check\") |>\n  dplyr::select(fungicide, efficacy, efficacy_lw, efficacy_up)\n\nefficacy_index\nlibrary(readr)\n\nwrite_xlsx(efficacy_index, \"efficacy_res.xlsx\")\n\n\n```\n\n#Disease pressure\n\n##Model\n\n```{r}\n#linha de base\nlibrary(janitor)\nAACHECK = dat1 |> filter(produto == \"AACHECK\")\nsummary(AACHECK)\n\nmed_sev <- dat3 %>%\n  mutate(sev_check_class = case_when(\n      mean_sev < 21 ~ \"low\",\n      mean_sev >= 21 ~ \"high\"))\nmed_sev %>%\n  tabyl(produto, sev_check_class)\nmodel_mm <- rma.mv(\n   log_sev ,\n   vi_sev,\n   mods = ~ produto * factor(sev_check_class),\n   method = \"ML\",\n   random = list( ~ produto | factor(ensaio_1)),\n   struct = \"HCS\",\n   control = list(optimizer = \"nlm\"),\n   data = med_sev)\nanova(model_mm, btt = 11:18) \n summary(model_mm)\n\ntable(med_sev$produto, med_sev$sev_check_class)\n\n#openxlsx::write.xlsx(efficacy_index, here(\"efficacy_class.xlsx\"), colNames = TRUE)\n\n```\n\n###Organizing the model output\n\n\n```{r}\nlibrary(here)\nreg1 = data.frame(model_mm$beta, model_mm$se, model_mm$ci.lb, model_mm$ci.ub) %>%\n  rownames_to_column(\"trat\") %>%\n  separate(trat, into = c(\"lado1\", \"lado2\"), sep = \":\") %>%\n  separate(lado2, into = c(\"lixo\",\"lado3\"),sep = \"sev_check_class\") %>% \n  dplyr::select(-lixo) %>%\n  separate(lado1, into = c(\"lixo\",\"lado1\"),sep = \"produto\" ) %>%\n  dplyr::select(-lixo) %>%\n  filter(lado1 != \"NA\") %>%\n  mutate(n = seq(1:16))\n\nnames(reg1) = c(\"fungicide\", \"class\", \"mean\", \"se\", \"ci.lb\", \"ci.ub\", \"n\")  \n\nreg2 = reg1 %>%\n  filter(n < 9) %>% \n  mutate(class = rep(\"High\", length(fungicide)))\n\nreg3 = reg1 %>% \n  filter(n > 8) %>% \n  mutate(class = rep(\"Low\", length(fungicide)))\n\nreg4 = rbind(reg2,reg3)  \n\n```\n\n###Organizing 2\n\nThe lower had to be calculated because the model provides the lower based on the upper.\n\n```{r}\nmean = reg4%>% \n  group_by(fungicide) %>% \n  dplyr::select(1:3) %>% \n  spread(class, mean) %>% \n  mutate(mean = High + Low) %>% \n  dplyr::select(1,4)\n\nse = reg4%>% \n  group_by(fungicide) %>% \n  dplyr::select(1,2,4) %>% \n  spread(class, se) %>% \n  mutate(se = High + Low) %>% \n  dplyr::select(1,4)\n\n\nlower = reg4%>% \n  group_by(fungicide) %>% \n  dplyr::select(1,2,5) %>% \n  spread(class, ci.lb) %>% \n  mutate(lower = High + Low) %>%  \n  dplyr::select(1,4)\n\nupper = reg4%>% \n  group_by(fungicide) %>% \n  dplyr::select(1,2,6) %>% \n  spread(class, ci.ub) %>% \n  mutate(upper = High + Low) %>% \n  dplyr::select(1,4)\n\n\n\nreg5 = left_join(mean, lower, by= c(\"fungicide\")) %>% \n  left_join(upper, by = c(\"fungicide\")) %>% \n  left_join(se, by = c(\"fungicide\")) %>%\n  mutate(class = rep(\"Low\", length(\"fungicide\"))) %>% \n  dplyr::select(\"fungicide\", \"class\", \"mean\", \"lower\", \"upper\", \"se\")\n\n\nHigh = reg4 %>% \n  filter(class == \"High\") %>% \n  dplyr::select(1:6)\nnames(High) = c(\"fungicide\", \"class\", \"mean\",\"se\", \"lower\", \"upper\") \n\n\nreg6 = full_join(High,reg5)\n#openxlsx::write.xlsx(reg6, here(\"sev_baseline.xlsx\"), colNames = TRUE)\n efficacy_index <- data.frame(cbind(\n   (1 - exp(reg6$mean)) * 100,\n   (1 - exp(reg6$lower)) * 100,\n   (1 - exp(reg6$upper)) * 100),\n   (reg6$class),(reg6$fungicide))\n#openxlsx::write.xlsx(efficacy_index, here(\"efficacy_class.xlsx\"), colNames = TRUE)\n\n\n```\n\n#Design groups\n\n```{r}\nlibrary(janitor)\nmed_sev1 = med_sev %>% \n  group_by(ensaio_1) %>% \n  summarise(produto = paste(produto, collapse=';'))\n\nmed_sev1 %>% \n  tabyl(produto)\n\ntable(med_sev1$produto)\n\n#repete 7 vezes\n```\n\n##D1 \n\n```{r}\nmed_sev <- med_sev %>%\n  group_by(ensaio_1) %>% \n  mutate(n2 = n()) %>% \n  filter(n2 != 1)\n\n\n\ndesign1 = med_sev %>% \n  group_by(ensaio_1) %>% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"BELYAN  (Controle Positivo)\", \"FOX XPRO\", \"OSKESTRA SC\", \"PREVINIL\", \"trat_A20259\")) %>% \n  mutate(n3 = n()) %>% \n  mutate(design = rep(1, length(produto))) %>% \n  filter(n2 == 7) %>% \n  filter(n3 == 7)\ndesign1\n```\n\n##D2\n\n```{r}\ndesign2 = med_sev %>% \n  group_by(ensaio_1) %>% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"BELYAN  (Controle Positivo)\", \"FOX XPRO\", \"OSKESTRA SC\", \"TRIDIUM\", \"trat_A20259\")) %>% \n  mutate(n3 = n()) %>% \n  mutate(design = rep(2, length(produto))) %>% \n  filter(n2 == 7) %>% \n  filter(n3 == 7)\ndesign2\n\n\n```\n\n##D3\n\n```{r}\ndesign3 = med_sev %>% \n  group_by(ensaio_1) %>% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"FOX XPRO\", \"OSKESTRA SC\", \"PREVINIL\",\"TRIDIUM\", \"UNIZEB GOLD (Controle Positivo, multissítio)\")) %>% \n  mutate(n3 = n()) %>% \n  mutate(design = rep(3, length(produto))) %>% \n  filter(n2 == 7) %>% \n  filter(n3 == 7)\ndesign3\n\n\n```\n\n##D4 \n\n```{r}\ndesign4 = med_sev %>% \n  group_by(ensaio_1) %>% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"FOX XPRO\", \"PREVINIL\",\"TRIDIUM\", \"UNIZEB GOLD (Controle Positivo, multissítio)\")) %>% \n  mutate(n3 = n()) %>% \n  mutate(design = rep(4, length(produto))) %>% \n  filter(n2 == 6) %>% \n  filter(n3 == 6)\ndesign4\n\n```\n\n##D5 \n\n```{r}\ndesign5 = med_sev %>% \n  group_by(ensaio_1) %>% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\",\"BELYAN  (Controle Positivo)\", \"OSKESTRA SC\", \"PREVINIL\",\"TRIDIUM\", \"UNIZEB GOLD (Controle Positivo, multissítio)\")) %>% \n  mutate(n3 = n()) %>% \n  mutate(design = rep(5, length(produto))) %>% \n  filter(n2 == 7) %>% \n  filter(n3 == 7)\ndesign5\n\n\n```\n\n##D6 \n\n```{r}\ndesign6 = med_sev %>% \n  group_by(ensaio_1) %>% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"OSKESTRA SC\", \"UNIZEB GOLD (Controle Positivo, multissítio)\")) %>% \n  mutate(n3 = n()) %>% \n  mutate(design = rep(6, length(produto))) %>% \n  filter(n2 == 4) %>% \n  filter(n3 == 4)\ndesign6\n```\n\n##D7\n\n```{r}\ndesign7 = med_sev %>% \n  group_by(ensaio_1) %>% \n  filter(produto  %in% c(\"AACHECK\", \"PREVINIL\", \"UNIZEB GOLD (Controle Positivo, multissítio)\")) %>% \n  mutate(n3 = n()) %>% \n  mutate(design = rep(7, length(produto))) %>% \n  filter(n2 == 3) %>% \n  filter(n3 == 3)\ndesign7\n```\n\n##D8 \n\n```{r}\ndesign8 = med_sev %>% \n  group_by(ensaio_1) %>% \n  filter(produto  %in% c(\"AACHECK\", \"BELYAN  (Controle Positivo)\")) %>% \n  mutate(n3 = n()) %>% \n  mutate(design = rep(8, length(produto))) %>% \n  filter(n2 == 2) %>% \n  filter(n3 == 2)\ndesign8\n```\n\n##D9 \n\n```{r}\ndesign9 = med_sev %>% \n  group_by(ensaio_1) %>% \n  filter(produto  %in% c('AACHECK', 'ABACUS HC (Controle Positivo)','FOX XPRO', 'OSKESTRA SC','trat_A20259', 'TRIDIUM'))%>%\n  mutate(n3 = n()) %>% \n  mutate(design = rep(9, length(produto))) %>% \n  filter(n2 == 6) %>% \n  filter(n3 == 6)\ndesign9\n\n```\n\n#Combining the designs\n\n\n```{r}\nsev_design = rbind(design1, design2, design3, design4, design5, design6, design7, design8, design9)\n\n\nsev_design %>% \n  group_by(ensaio_1, design) %>% \n  summarize() %>% \n  tabyl(design)\n```\n\n#Inconsistency analysis\n\n```{r}\nmv_sev_design <- rma.mv(log_sev, vi_sev,\n  mods = ~produto * design,\n  random = list(~ 1 | ensaio_1 / design / produto),\n  struct = \"HCS\",\n  method = \"ML\",\n  control = list(optimizer = \"nlm\"),\n  data = sev_design)\n\nmv_sev_design\nanova(mv_sev_design, btt = 11:18)\n\n```\n","srcMarkdownNoYaml":"\n\n# Meta-analysis for the variable severity\n\n## Packages\n\n```{r}\n#| warning: false\n#| message: false\nlibrary(gsheet)\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(tidyr)\nlibrary(metafor)\nlibrary(multcomp)\n library(emmeans)\n```\n\n## Import the data\n\n```{r}\ndat1 = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1joo0WaR7yNWZavGPbwQMjiFPpWHErtGL/edit?gid=1485993259#gid=1485993259\")\n\ndat1 |> ggplot(aes(produto, mean_sev)) +\n  geom_boxplot()\n\noutliers <- dat1 %>%\n  filter(produto == \"trat_A20259\") %>%\n  group_by(produto, bloco) %>%\n  mutate(outlier = mean_sev < quantile(mean_sev, 0.25) - 1.5 * IQR(mean_sev) | \n                   mean_sev > quantile(mean_sev, 0.75) + 1.5 * IQR(mean_sev)) %>%\n  filter(outlier) %>%\n  dplyr::select(ensaio_1, mean_sev)\n\nprint(outliers)\n\n\n\n```\n\n## ANOVA for Each Trial/Study\n\n```{r}\n# Converting variables to factors  \ndat1$bloco = as.factor(dat1$bloco)   # Block as a factor  \ndat1$produto = as.factor(dat1$produto)   # fungicide as a factor  \ndat1$ensaio_1 = as.factor(dat1$ensaio_1)  # Trial as a factor  \n\nstr(dat1)\n\n\n# Performing ANOVA to obtain Sum of Squares (Sq) and Mean Squares (MeanSq)\ndat2 <- dat1 %>%\n  filter(mean_sev != \"NA\")|> \n  group_by(ensaio_1) %>%\n  dplyr::select(ensaio_1, produto, bloco, mean_sev) %>% \n  nest(data = c(produto, bloco, mean_sev)) %>% \n  dplyr::mutate(\n    aov_results = map(data, ~ tidy(aov(mean_sev ~ produto + bloco, data = .x)))\n  ) %>%\n  unnest(aov_results) %>%\n  filter(term == \"Residuals\")|> \n  dplyr::select(1,6)\n```\n\n## Calculating the mean and adjusted variance\n\n```{r}\n#First: Merge the Original Spreadsheet (dat1) with the Spreadsheet Containing the ANOVA Results; \ndat3 <- left_join(dat1, dat2) |> \n group_by(municipio,regiao, ensaio_1, produto, ano) %>% \n  summarise(mean_sev = mean(mean_sev+0.1), #severity mean\n            mean_V = mean(meansq), #SQ mean\n            n = n()) |> \n  mutate(log_sev = log(mean_sev)) #Mean of the transformed severity\n\n\n#Calculating adjusted variance of severity\n  dat3$vi_sev = with(dat3, mean_V / (n * mean_sev^2))\n  \n  \n\n```\n\n## Meta-analysis\n\n### Fitting different models\n\nDifferences in structures were tested, and the one that best fit was the unstructured. The others are commented out.\n\n```{r}\n\n\n net_arm_UN_first <- rma.mv(\n   log_sev,\n   vi_sev,\n   mods = ~ produto,\n   method = \"ML\",\n   random = list( ~ produto | factor(ensaio_1)),\n   struct = \"HCS\",\n   control = list(optimizer = \"nlm\"),\n   data = dat3)\n summary(net_arm_UN_first)\n \n \n #salvando\n m1 <- data.frame(cbind(\n   (net_arm_UN_first$b),\n   (net_arm_UN_first$ci.lb),\n   (net_arm_UN_first$ci.ub),\n   (net_arm_UN_first$se)))\n \n m1 = m1\n   names (m1) = c(\"log_sev\", \"sev_lw\", \"sev_up\", \"se\")\n   \n  m1 <- m1 |>\n mutate(fungicide = c(\"check\", \"ABACUSHC\", \"BAS75302F\", \"FOX XPRO\", \"OSKESTRASC\", \"PREVINIL\", \"A20259\", \"TRIDIUM\", \"UNIZEBGOLD\")) \nm1 <- m1 |>  \n    dplyr::select(fungicide, log_sev, sev_lw, sev_up,se)\nlibrary(writexl)\n#write_xlsx(m1, \"results_log_Sev.xlsx\")\n\n```\n\n### Pairwise comparison\n\n```{r}\n#The glht() function is used to perform multiple comparisons between the groups adjusted by the model\n net_arm_UN_comp <-\n   summary(glht(\n   model = net_arm_UN_first,\n   linfct = cbind(contrMat(rep(1, 9), type = \"Tukey\")) ))\n\n  net_arm_UN_comp\n\n plot(net_arm_UN_comp)\n\n \n \n \n library(emmeans)\nlibrary(multcomp)\nmeta <- emmprep(net_arm_UN_first)\nemmeans_meta <- emmeans(meta, ~ produto, type = \"response\")\ncld_result <- data.frame(cld(emmeans_meta, decreasing = TRUE, Letters = LETTERS))\ncld_result\n\n```\n\n###Efficacy\n```{r}\n efficacy_index <- data.frame(cbind(\n   (1 - exp(net_arm_UN_first$b)) * 100,\n   (1 - exp(net_arm_UN_first$ci.lb)) * 100,\n   (1 - exp(net_arm_UN_first$ci.ub)) * 100))\n\n# #Organize the data.frame\n efficacy_index = efficacy_index\n   names (efficacy_index) = c(\"efficacy\", \"efficacy_up\", \"efficacy_lw\")\n  \nefficacy_index <- efficacy_index |>\n  mutate(fungicide = c(\"check\", \"ABACUSHC\", \"BAS75302F\", \"FOX XPRO\", \"OSKESTRASC\", \"PREVINIL\", \"A20259\", \"TRIDIUM\", \"UNIZEBGOLD\")) |>\n  filter(fungicide != \"check\") |>\n  dplyr::select(fungicide, efficacy, efficacy_lw, efficacy_up)\n\nefficacy_index\nlibrary(readr)\n\nwrite_xlsx(efficacy_index, \"efficacy_res.xlsx\")\n\n\n```\n\n#Disease pressure\n\n##Model\n\n```{r}\n#linha de base\nlibrary(janitor)\nAACHECK = dat1 |> filter(produto == \"AACHECK\")\nsummary(AACHECK)\n\nmed_sev <- dat3 %>%\n  mutate(sev_check_class = case_when(\n      mean_sev < 21 ~ \"low\",\n      mean_sev >= 21 ~ \"high\"))\nmed_sev %>%\n  tabyl(produto, sev_check_class)\nmodel_mm <- rma.mv(\n   log_sev ,\n   vi_sev,\n   mods = ~ produto * factor(sev_check_class),\n   method = \"ML\",\n   random = list( ~ produto | factor(ensaio_1)),\n   struct = \"HCS\",\n   control = list(optimizer = \"nlm\"),\n   data = med_sev)\nanova(model_mm, btt = 11:18) \n summary(model_mm)\n\ntable(med_sev$produto, med_sev$sev_check_class)\n\n#openxlsx::write.xlsx(efficacy_index, here(\"efficacy_class.xlsx\"), colNames = TRUE)\n\n```\n\n###Organizing the model output\n\n\n```{r}\nlibrary(here)\nreg1 = data.frame(model_mm$beta, model_mm$se, model_mm$ci.lb, model_mm$ci.ub) %>%\n  rownames_to_column(\"trat\") %>%\n  separate(trat, into = c(\"lado1\", \"lado2\"), sep = \":\") %>%\n  separate(lado2, into = c(\"lixo\",\"lado3\"),sep = \"sev_check_class\") %>% \n  dplyr::select(-lixo) %>%\n  separate(lado1, into = c(\"lixo\",\"lado1\"),sep = \"produto\" ) %>%\n  dplyr::select(-lixo) %>%\n  filter(lado1 != \"NA\") %>%\n  mutate(n = seq(1:16))\n\nnames(reg1) = c(\"fungicide\", \"class\", \"mean\", \"se\", \"ci.lb\", \"ci.ub\", \"n\")  \n\nreg2 = reg1 %>%\n  filter(n < 9) %>% \n  mutate(class = rep(\"High\", length(fungicide)))\n\nreg3 = reg1 %>% \n  filter(n > 8) %>% \n  mutate(class = rep(\"Low\", length(fungicide)))\n\nreg4 = rbind(reg2,reg3)  \n\n```\n\n###Organizing 2\n\nThe lower had to be calculated because the model provides the lower based on the upper.\n\n```{r}\nmean = reg4%>% \n  group_by(fungicide) %>% \n  dplyr::select(1:3) %>% \n  spread(class, mean) %>% \n  mutate(mean = High + Low) %>% \n  dplyr::select(1,4)\n\nse = reg4%>% \n  group_by(fungicide) %>% \n  dplyr::select(1,2,4) %>% \n  spread(class, se) %>% \n  mutate(se = High + Low) %>% \n  dplyr::select(1,4)\n\n\nlower = reg4%>% \n  group_by(fungicide) %>% \n  dplyr::select(1,2,5) %>% \n  spread(class, ci.lb) %>% \n  mutate(lower = High + Low) %>%  \n  dplyr::select(1,4)\n\nupper = reg4%>% \n  group_by(fungicide) %>% \n  dplyr::select(1,2,6) %>% \n  spread(class, ci.ub) %>% \n  mutate(upper = High + Low) %>% \n  dplyr::select(1,4)\n\n\n\nreg5 = left_join(mean, lower, by= c(\"fungicide\")) %>% \n  left_join(upper, by = c(\"fungicide\")) %>% \n  left_join(se, by = c(\"fungicide\")) %>%\n  mutate(class = rep(\"Low\", length(\"fungicide\"))) %>% \n  dplyr::select(\"fungicide\", \"class\", \"mean\", \"lower\", \"upper\", \"se\")\n\n\nHigh = reg4 %>% \n  filter(class == \"High\") %>% \n  dplyr::select(1:6)\nnames(High) = c(\"fungicide\", \"class\", \"mean\",\"se\", \"lower\", \"upper\") \n\n\nreg6 = full_join(High,reg5)\n#openxlsx::write.xlsx(reg6, here(\"sev_baseline.xlsx\"), colNames = TRUE)\n efficacy_index <- data.frame(cbind(\n   (1 - exp(reg6$mean)) * 100,\n   (1 - exp(reg6$lower)) * 100,\n   (1 - exp(reg6$upper)) * 100),\n   (reg6$class),(reg6$fungicide))\n#openxlsx::write.xlsx(efficacy_index, here(\"efficacy_class.xlsx\"), colNames = TRUE)\n\n\n```\n\n#Design groups\n\n```{r}\nlibrary(janitor)\nmed_sev1 = med_sev %>% \n  group_by(ensaio_1) %>% \n  summarise(produto = paste(produto, collapse=';'))\n\nmed_sev1 %>% \n  tabyl(produto)\n\ntable(med_sev1$produto)\n\n#repete 7 vezes\n```\n\n##D1 \n\n```{r}\nmed_sev <- med_sev %>%\n  group_by(ensaio_1) %>% \n  mutate(n2 = n()) %>% \n  filter(n2 != 1)\n\n\n\ndesign1 = med_sev %>% \n  group_by(ensaio_1) %>% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"BELYAN  (Controle Positivo)\", \"FOX XPRO\", \"OSKESTRA SC\", \"PREVINIL\", \"trat_A20259\")) %>% \n  mutate(n3 = n()) %>% \n  mutate(design = rep(1, length(produto))) %>% \n  filter(n2 == 7) %>% \n  filter(n3 == 7)\ndesign1\n```\n\n##D2\n\n```{r}\ndesign2 = med_sev %>% \n  group_by(ensaio_1) %>% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"BELYAN  (Controle Positivo)\", \"FOX XPRO\", \"OSKESTRA SC\", \"TRIDIUM\", \"trat_A20259\")) %>% \n  mutate(n3 = n()) %>% \n  mutate(design = rep(2, length(produto))) %>% \n  filter(n2 == 7) %>% \n  filter(n3 == 7)\ndesign2\n\n\n```\n\n##D3\n\n```{r}\ndesign3 = med_sev %>% \n  group_by(ensaio_1) %>% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"FOX XPRO\", \"OSKESTRA SC\", \"PREVINIL\",\"TRIDIUM\", \"UNIZEB GOLD (Controle Positivo, multissítio)\")) %>% \n  mutate(n3 = n()) %>% \n  mutate(design = rep(3, length(produto))) %>% \n  filter(n2 == 7) %>% \n  filter(n3 == 7)\ndesign3\n\n\n```\n\n##D4 \n\n```{r}\ndesign4 = med_sev %>% \n  group_by(ensaio_1) %>% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"FOX XPRO\", \"PREVINIL\",\"TRIDIUM\", \"UNIZEB GOLD (Controle Positivo, multissítio)\")) %>% \n  mutate(n3 = n()) %>% \n  mutate(design = rep(4, length(produto))) %>% \n  filter(n2 == 6) %>% \n  filter(n3 == 6)\ndesign4\n\n```\n\n##D5 \n\n```{r}\ndesign5 = med_sev %>% \n  group_by(ensaio_1) %>% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\",\"BELYAN  (Controle Positivo)\", \"OSKESTRA SC\", \"PREVINIL\",\"TRIDIUM\", \"UNIZEB GOLD (Controle Positivo, multissítio)\")) %>% \n  mutate(n3 = n()) %>% \n  mutate(design = rep(5, length(produto))) %>% \n  filter(n2 == 7) %>% \n  filter(n3 == 7)\ndesign5\n\n\n```\n\n##D6 \n\n```{r}\ndesign6 = med_sev %>% \n  group_by(ensaio_1) %>% \n  filter(produto  %in% c(\"AACHECK\", \"ABACUS HC (Controle Positivo)\", \"OSKESTRA SC\", \"UNIZEB GOLD (Controle Positivo, multissítio)\")) %>% \n  mutate(n3 = n()) %>% \n  mutate(design = rep(6, length(produto))) %>% \n  filter(n2 == 4) %>% \n  filter(n3 == 4)\ndesign6\n```\n\n##D7\n\n```{r}\ndesign7 = med_sev %>% \n  group_by(ensaio_1) %>% \n  filter(produto  %in% c(\"AACHECK\", \"PREVINIL\", \"UNIZEB GOLD (Controle Positivo, multissítio)\")) %>% \n  mutate(n3 = n()) %>% \n  mutate(design = rep(7, length(produto))) %>% \n  filter(n2 == 3) %>% \n  filter(n3 == 3)\ndesign7\n```\n\n##D8 \n\n```{r}\ndesign8 = med_sev %>% \n  group_by(ensaio_1) %>% \n  filter(produto  %in% c(\"AACHECK\", \"BELYAN  (Controle Positivo)\")) %>% \n  mutate(n3 = n()) %>% \n  mutate(design = rep(8, length(produto))) %>% \n  filter(n2 == 2) %>% \n  filter(n3 == 2)\ndesign8\n```\n\n##D9 \n\n```{r}\ndesign9 = med_sev %>% \n  group_by(ensaio_1) %>% \n  filter(produto  %in% c('AACHECK', 'ABACUS HC (Controle Positivo)','FOX XPRO', 'OSKESTRA SC','trat_A20259', 'TRIDIUM'))%>%\n  mutate(n3 = n()) %>% \n  mutate(design = rep(9, length(produto))) %>% \n  filter(n2 == 6) %>% \n  filter(n3 == 6)\ndesign9\n\n```\n\n#Combining the designs\n\n\n```{r}\nsev_design = rbind(design1, design2, design3, design4, design5, design6, design7, design8, design9)\n\n\nsev_design %>% \n  group_by(ensaio_1, design) %>% \n  summarize() %>% \n  tabyl(design)\n```\n\n#Inconsistency analysis\n\n```{r}\nmv_sev_design <- rma.mv(log_sev, vi_sev,\n  mods = ~produto * design,\n  random = list(~ 1 | ensaio_1 / design / produto),\n  struct = \"HCS\",\n  method = \"ML\",\n  control = list(optimizer = \"nlm\"),\n  data = sev_design)\n\nmv_sev_design\nanova(mv_sev_design, btt = 11:18)\n\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"sev.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.555","editor":"visual","toc_depth":3,"toc_title":"Sumário","toc_float":{"collapsed":"no","smooth_scroll":"no"},"lib_dir":"site_libs","self_contained":"no","title":""},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}